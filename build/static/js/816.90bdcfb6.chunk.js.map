{"version":3,"file":"static/js/816.90bdcfb6.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","features/tgdetail/Detailscontent.js","features/tgdetail/Tgdetail.js","features/tgdetail/Tgtabdetail.js","features/tgdetail/tstabtable.js","features/tgdetail/fvtabtable.js","features/tgdetail/partstabtable.js","features/tgdetail/Tgtabs.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Breadcrumbs } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst CustomLink = styled(Link)(({ theme }) => ({\r\n  textDecoration: \"none\",\r\n  color: \"inherit\",\r\n  transition: \"color 0.3s ease-in-out\",\r\n  \"&:hover\": {\r\n    color: \"#25245D\",\r\n    fontWeight: \"600\",\r\n  },\r\n}));\r\n\r\nconst Breadcrumb = ({ name, firstItem, linkTo }) => {\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        sx={{ fontSize: \"12px\", cursor: \"pointer\" }}\r\n      >\r\n        <CustomLink to={`/in/${linkTo}`}>{firstItem}</CustomLink>\r\n        <CustomLink href=\"\" aria-current=\"page\">\r\n          {name\r\n            .split(\" \")\r\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join(\" \")}\r\n        </CustomLink>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react'\r\nimport './tgdetail.css'\r\nimport { LiaCircleSolid } from 'react-icons/lia'\r\n\r\nconst Detailscontent = ({ heading, paragraph }) => {\r\n  return (\r\n    <div className='details__content'>\r\n      <LiaCircleSolid color='#3A57E8' />\r\n      <div className='details__content2'>\r\n        <p className='details__para'>{heading}</p>\r\n        <p className='details__para2'>{paragraph}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detailscontent\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../components/Breadcrumbs\";\r\nimport Tgtabs from \"./Tgtabs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_FARM_VISITS_PER_TG } from \"../../graphql/queries/farmVisitsRequests\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Styles = {\r\n  marginTop: \"15px\",\r\n  fontWeight: \"400\",\r\n  color: \"rgba(125, 127, 136, 1)\",\r\n  fontSize: \"12px\",\r\n  maxWidth: \"80%\",\r\n};\r\n\r\nconst Tgdetail = ({ trainingGroups, trainingSessions, participants }) => {\r\n  const breadCrumbs = \"Training group\";\r\n\r\n  const [farmVisitsPerGroup, setFarmVisitsPerGroup] = useState([]); // eslint-disable-line no-unused-vars\r\n\r\n  // get params from url\r\n  const params = useParams();\r\n  const { id } = params;\r\n  const getAllFarmVisitsByTG = useQuery(GET_FARM_VISITS_PER_TG, {\r\n    variables: { tgId: id },\r\n  });\r\n\r\n  const selectedTrainingGroup = trainingGroups.find(\r\n    (group) => group.tg_id === id\r\n  );\r\n  const breadCrumbsLinkTo = \"traingroup\";\r\n\r\n  useEffect(() => {\r\n    if (getAllFarmVisitsByTG.data) {\r\n      const farmVisits =\r\n        getAllFarmVisitsByTG.data.getFarmVisitsByGroup.farmVisits;\r\n      setFarmVisitsPerGroup(farmVisits);\r\n    }\r\n  }, [getAllFarmVisitsByTG.data]);\r\n\r\n  return (\r\n    <div>\r\n      {selectedTrainingGroup && (\r\n        <>\r\n          <Breadcrumb\r\n            name={selectedTrainingGroup.tg_name}\r\n            q\r\n            firstItem={breadCrumbs}\r\n            linkTo={breadCrumbsLinkTo}\r\n          />\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <h1>{selectedTrainingGroup.tg_name}</h1>\r\n            <p style={Styles}>\r\n              In the focal farmer group details you can access detailed information\r\n              for a specific ffg, explore the training sessions list\r\n              associated with the selected group. Review the Farm Visits List\r\n              associated with the ffg and export the information displayed on\r\n              this page to Excel or CSV format.\r\n            </p>\r\n          </div>\r\n          <Tgtabs\r\n            details={selectedTrainingGroup}\r\n            trainingSessions={\r\n              trainingSessions &&\r\n              trainingSessions.length > 0 &&\r\n              trainingSessions.filter(\r\n                (session) => session.ts_group === selectedTrainingGroup.tg_name\r\n              )\r\n            }\r\n            farmVisits={farmVisitsPerGroup}\r\n            participants={\r\n              participants.length > 0 &&\r\n              participants.filter(\r\n                (participant) =>\r\n                  participant.training_group === selectedTrainingGroup.tg_id\r\n              )\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tgdetail;\r\n","import React from 'react'\r\nimport { Paper } from '@mui/material'\r\nimport './tgdetail.css'\r\nimport Detailscontent from './Detailscontent'\r\n\r\nconst Tgtabdetail = ({ details }) => {\r\n  return (\r\n    <div>\r\n      <Paper elevation={1} sx={{ maxWidth: '30%' }}>\r\n        <div className='details__title'>{details.tg_name}</div>\r\n        <div style={{ padding: '10px', paddingLeft: '20px' }}>\r\n          <Detailscontent\r\n            heading={'# of Registered Farmers'}\r\n            paragraph={details.total_participants !== null ? details.total_participants : 'N/A'}\r\n          />\r\n\r\n          <Detailscontent heading={'Business Advisor'} paragraph={details.business_advisor} />\r\n          <Detailscontent heading={'Farmer Trainer'} paragraph={details.farmer_trainer} />\r\n          <Detailscontent heading={'TNS ID'} paragraph={details.tns_id || 'N/A'} />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tgtabdetail\r\n","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst Tstabtable = ({ trainingSessions }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"ts_module\",\r\n      name: \"Session Name\",\r\n      grow: 2,\r\n      selector: (row) => row.ts_module,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"ts_module\",\r\n    //   name: \"Training Month\",\r\n    //   grow: 2,\r\n    //   selector: (row) => row.ts_module,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_males\",\r\n      name: \"MA\",\r\n      selector: (row) => row.total_males,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_females\",\r\n      name: \"FA\",\r\n      selector: (row) => row.total_females,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"is_verified\",\r\n      name: \"Is Session Verified?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.is_verified ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_image_status\",\r\n      name: \"Session Image Status\",\r\n      grow: 2,\r\n      selector: (row) => (\r\n        <div>\r\n          {!row.is_verified ? (\r\n            <Chip\r\n              label={\"not_verified\"}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              title={\"not_verified\"}\r\n            />\r\n          ) : row.session_image_status === \"approved\" ? (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          ) : (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"error\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_date\",\r\n      name: \"Session Date\",\r\n      selector: (row) => row.session_date,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"trainsession\";\r\n\r\n  const rows = trainingSessions\r\n    ? trainingSessions.map((trainingSession, index) => ({\r\n        num: index + 1,\r\n        ts_id: trainingSession.ts_id,\r\n        ts_name: trainingSession.ts_name,\r\n        ts_module: trainingSession.ts_module,\r\n        tns_id: trainingSession.tns_id || \"N/A\",\r\n        farmer_trainer: trainingSession.farmer_trainer || \"N/A\",\r\n        ts_status: trainingSession.ts_status,\r\n        total_males: trainingSession.total_males,\r\n        total_females: trainingSession.total_females,\r\n        has_image: trainingSession.has_image,\r\n        is_verified: trainingSession.is_verified,\r\n        session_image_status: trainingSession.session_image_status,\r\n        session_date: trainingSession.session_date || \"N/A\",\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabtable;\r\n","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst FvTabTable = ({ details, farmVisits }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"FFG Name\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farm_visited\",\r\n      name: \"Farm Visited\",\r\n      selector: (row) => row.farm_visited,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"household_id\",\r\n    //   name: \"Household Id\",\r\n    //   selector: (row) => row.household_id,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"date_visited\",\r\n      name: \"Date Visited\",\r\n      selector: (row) => row.date_visited,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"farmvisit\";\r\n\r\n  const rows = farmVisits\r\n    ? farmVisits.map((fv, index) => ({\r\n        num: index + 1,\r\n        fv_id: fv.fv_id,\r\n        fv_name: fv.fv_name,\r\n        training_group: fv.training_group,\r\n        training_session: fv.training_session,\r\n        tns_id: fv.tns_id,\r\n        farm_visited: fv.farm_visited,\r\n        household_id: fv.household_id,\r\n        farmer_trainer: fv.farmer_trainer,\r\n        has_training: fv.has_training,\r\n        date_visited: fv.date_visited,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={rows}\r\n        tableRowItem={tableRowItem}\r\n        details={details}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FvTabTable;\r\n","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst PartsTabTable = ({ participants }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"full_name\",\r\n      name: \"Full Name\",\r\n      selector: (row) => row.full_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"gender\",\r\n      name: \"Gender\",\r\n      selector: (row) => row.gender,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"location\",\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"business_advisor\",\r\n      name: \"Business Advisor\",\r\n      selector: (row) => row.business_advisor,\r\n      sortable: true,\r\n    },\r\n  ];\r\n  const tableRowItem = \"participants\";\r\n\r\n  const rows = participants\r\n    ? participants.map((participant, index) => ({\r\n        num: index + 1,\r\n        p_id: participant.p_id,\r\n        full_name: `${participant.first_name} ${\r\n          participant.middle_name !== 'null' ? participant.middle_name : \" \"\r\n        } ${participant.last_name}`,\r\n        gender: participant.gender === \"m\"? \"Male\" : \"Female\",\r\n        location: participant.location,\r\n        tns_id: participant.tns_id,\r\n        status: participant.status,\r\n        farmer_trainer: participant.farmer_trainer,\r\n        business_advisor: participant.business_advisor,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartsTabTable;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport Tgtabdetail from \"./Tgtabdetail\";\r\nimport Tstabtable from \"./tstabtable\";\r\nimport FvTabTable from \"./fvtabtable\";\r\nimport PartsTabTable from \"./partstabtable\";\r\n\r\nexport function CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Tgtabs({\r\n  details,\r\n  trainingSessions,\r\n  farmVisits,\r\n  participants,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab label=\"FFG Details\" {...a11yProps(0)} />\r\n          <Tab label=\"FFG sessions\" {...a11yProps(1)} />\r\n          <Tab label=\"FFG Farm Visits\" {...a11yProps(2)} />\r\n          <Tab label=\"FFG Participants\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <CustomTabPanel value={value} index={0}>\r\n        <Tgtabdetail details={details} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <Tstabtable trainingSessions={trainingSessions} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={2}>\r\n        <FvTabTable farmVisits={farmVisits} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={3}>\r\n        <PartsTabTable participants={participants} />\r\n      </CustomTabPanel>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["CustomLink","styled","Link","_ref","theme","textDecoration","color","transition","fontWeight","_ref2","name","firstItem","linkTo","_jsx","role","children","_jsxs","Breadcrumbs","sx","fontSize","cursor","to","concat","href","split","map","word","charAt","toUpperCase","slice","join","heading","paragraph","className","LiaCircleSolid","Styles","marginTop","maxWidth","trainingGroups","trainingSessions","participants","_useState","useState","_useState2","_slicedToArray","farmVisitsPerGroup","setFarmVisitsPerGroup","id","useParams","getAllFarmVisitsByTG","useQuery","GET_FARM_VISITS_PER_TG","variables","tgId","selectedTrainingGroup","find","group","tg_id","useEffect","data","farmVisits","getFarmVisitsByGroup","_Fragment","Breadcrumb","tg_name","q","style","Tgtabs","details","length","filter","session","ts_group","participant","training_group","Paper","elevation","padding","paddingLeft","Detailscontent","total_participants","business_advisor","farmer_trainer","tns_id","columns","selector","row","num","sortable","grow","ts_module","total_males","total_females","is_verified","Chip","label","variant","session_image_status","title","session_date","rows","trainingSession","index","ts_id","ts_name","ts_status","has_image","Table","tableRowItem","fv","fv_id","fv_name","training_session","farm_visited","household_id","has_training","date_visited","p_id","full_name","first_name","middle_name","last_name","gender","location","status","CustomTabPanel","props","value","other","_objectWithoutProperties","_excluded","_objectSpread","hidden","Box","p","Typography","a11yProps","setValue","width","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","Tgtabdetail","Tstabtable","FvTabTable","PartsTabTable"],"sourceRoot":""}