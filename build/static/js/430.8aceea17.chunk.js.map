{"version":3,"file":"static/js/430.8aceea17.chunk.js","mappings":"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","sources":["components/Modals/ListUpModal.js","features/cards/card.js","features/dashboard/components/DashboardStats.jsx","features/dashboard/components/ModuleTimeline.jsx","graphql/queries/trainingModulesRequests.js","features/dashboard/Dashboard.jsx","features/dashboard/hooks/useDashboardData.js"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nconst ListUpModal = ({ open, handleClose, title, data }) => {\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <List>\r\n          {data.map((item, index) => (\r\n            <ListItem key={index} button>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  name={item}\r\n                  size=\"40\"\r\n                  round={true}\r\n                  color=\"#7B9D6F\"\r\n                  fgColor=\"#fff\"\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ListUpModal;\r\n","import React from 'react'\r\nimport './card.css'\r\n\r\nconst Card = ({ heading, figures, icon, color }) => {\r\n  return (\r\n    <div>\r\n      <div className='card__container'>\r\n        <div className='card__content'>\r\n          <div className='card__text'>\r\n            <p className='card__text1'>{heading}</p>\r\n            <p className='card__text2'>{figures}</p>\r\n          </div>\r\n          <div className='card__icon' style={{ backgroundColor: color }}>\r\n            {icon}{' '}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from \"../../cards/card\";\r\nimport { MdGroups } from \"react-icons/md\";\r\nimport { VscFileSubmodule } from \"react-icons/vsc\";\r\nimport { BsPersonBoundingBox } from \"react-icons/bs\";\r\nimport { GiFarmer } from \"react-icons/gi\";\r\nimport { FaTripadvisor } from \"react-icons/fa\";\r\n\r\nconst iconMap = {\r\n  MdGroups: <MdGroups />,\r\n  VscFileSubmodule: <VscFileSubmodule />,\r\n  BsPersonBoundingBox: <BsPersonBoundingBox />,\r\n  GiFarmer: <GiFarmer />,\r\n  FaTripadvisor: <FaTripadvisor />,\r\n};\r\n\r\nconst DashboardStats = ({ statsData, openList }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {statsData.map((data, index) => (\r\n        <Grid item key={index} xs={12} sm={6} md={3}>\r\n          <NavLink\r\n            to={data.path || \"#\"}\r\n            onClick={(e) => (!data.path ? openList(e, data.name) : null)}\r\n          >\r\n            <Card\r\n              heading={data.heading}\r\n              figures={data.figures}\r\n              icon={iconMap[data.iconName] || <MdGroups />}\r\n              color={data.color}\r\n            />\r\n          </NavLink>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DashboardStats;\r\n","import React from \"react\";\r\nimport { Chrono } from \"react-chrono\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst ModuleTimeline = ({ modules }) => {\r\n  if (modules.length === 0) {\r\n    return <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\">No modules found</Typography>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"500px\" }}>\r\n      <Chrono\r\n        items={modules}\r\n        mode=\"HORIZONTAL\"\r\n        allowDynamicUpdate\r\n        cardWidth={300}\r\n        cardHeight={150}\r\n        contentDetailsHeight={250}\r\n        activeItemIndex={modules.findIndex((m) => m.isCurrent) !== -1\r\n          ? modules.findIndex((m) => m.isCurrent)\r\n          : modules.length - 1}\r\n        cardPositionHorizontal=\"TOP\"\r\n        focusActiveItemOnLoad\r\n        theme={{\r\n          primary: \"#087C8F\",\r\n          secondary: \"#087C8F\",\r\n          cardBgColor: \"#fff\",\r\n          cardForeColor: \"#7D7F88\",\r\n          titleColor: \"#7D7F88\",\r\n          titleColorActive: \"#fff\",\r\n          subtitleColor: \"#fff\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModuleTimeline;","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_ALL_TRAINING_MODULES = gql`\r\n  query GetAllTrainingModules {\r\n    getAllTrainingModules {\r\n      message\r\n      status\r\n      training_modules {\r\n        tm_id\r\n        tm_name\r\n        tm_title\r\n        tm_module_number\r\n        tm_project\r\n        tm_status\r\n        tm_is_current\r\n        tm_date\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_TRAINING_MODULES_PER_PROJECT = gql`\r\n  query GetTrainingModulesByProject($projectId: String!) {\r\n    getTrainingModulesByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      training_modules {\r\n        tm_id\r\n        tm_name\r\n        tm_title\r\n        tm_module_number\r\n        tm_project\r\n        tm_status\r\n        tm_is_current\r\n        tm_date\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ALL_TRAINING_MODULES, GET_TRAINING_MODULES_PER_PROJECT };\r\n","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport ListUpModal from \"../../components/Modals/ListUpModal\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport DashboardStats from \"./components/DashboardStats\";\r\nimport ModuleTimeline from \"./components/ModuleTimeline\";\r\nimport { useDashboardData } from \"./hooks/useDashboardData\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const { trainingGroups, projectStats, activeProject } = useOutletContext();\r\n\r\n  const {\r\n    modules,\r\n    statsData,\r\n    open,\r\n    setOpen,\r\n    list,\r\n    title,\r\n    loading,\r\n    error,\r\n    openList,\r\n  } = useDashboardData(trainingGroups, projectStats, activeProject);\r\n\r\n  if (loading) return <LoadingScreen />;\r\n  if (error)\r\n    return (\r\n      <div style={{ textAlign: \"center\", paddingTop: \"5%\" }}>\r\n        <Typography variant=\"h6\" color=\"error\">\r\n          Failed to load dashboard data.\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {error.message}\r\n        </Typography>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"module__heading\">Your Dashboard</h1>\r\n\r\n      <DashboardStats statsData={statsData} openList={openList} />\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h4>Project Modules Timeline</h4>\r\n        <ModuleTimeline modules={modules} />\r\n      </div>\r\n\r\n      <ListUpModal\r\n        open={open && trainingGroups.length > 0}\r\n        handleClose={() => setOpen(false)}\r\n        data={list}\r\n        title={title}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useEffect, useState, useMemo } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_TRAINING_MODULES_PER_PROJECT } from \"../../../graphql/queries/trainingModulesRequests\";\r\n\r\nexport const useDashboardData = (\r\n  trainingGroups = [],\r\n  projectStats = {},\r\n  selectedProject = \"\"\r\n) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const { data, loading, error } = useQuery(GET_TRAINING_MODULES_PER_PROJECT, {\r\n    variables: { projectId: selectedProject },\r\n    skip: !selectedProject,\r\n  });\r\n\r\n  const modules = useMemo(() => {\r\n    const mods = data?.getTrainingModulesByProject?.training_modules || [];\r\n    return mods.map((mod) => ({\r\n      title: mod.tm_date || \"No date\",\r\n      cardTitle: mod.tm_is_current ? `${mod.tm_title} (Current)` : mod.tm_title,\r\n      cardSubtitle: `Session Number: ${mod.tm_module_number}`,\r\n      isCurrent: mod.tm_is_current,\r\n    }));\r\n  }, [data]);\r\n\r\n  const statsData = useMemo(() => {\r\n    const trainingModules = data?.getTrainingModulesByProject?.training_modules || [];\r\n\r\n    return [\r\n      {\r\n        name: \"total_training_groups\",\r\n        heading: \"Total FFGs\",\r\n        figures: trainingGroups.length,\r\n        iconName: \"MdGroups\",\r\n        color: \"#25245D\",\r\n        path: \"/in/traingroup\",\r\n      },\r\n      {\r\n        name: \"total_training_modules\",\r\n        heading: \"Completed Sessions\",\r\n        figures: trainingModules.length,\r\n        iconName: \"VscFileSubmodule\",\r\n        color: \"#25245D\",\r\n      },\r\n      {\r\n        name: \"total_completed_training_modules\",\r\n        heading: \"Completed Topics\",\r\n        figures: trainingModules.filter((m) => !m.tm_is_current).length,\r\n        iconName: \"VscFileSubmodule\",\r\n        color: \"#25245D\",\r\n        path: \"/in/trainsession\",\r\n      },\r\n      {\r\n        name: \"total_participants\",\r\n        heading: \"Registered Farmers\",\r\n        figures: trainingGroups\r\n          .map((g) => g.total_participants || 0)\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(),\r\n        iconName: \"BsPersonBoundingBox\",\r\n        color: \"#087C8F\",\r\n        path: \"/in/participants\",\r\n      },\r\n      {\r\n        name: \"total_households\",\r\n        heading: \"Registered Households\",\r\n        figures: trainingGroups\r\n          .map((g) => g.total_households || 0)\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(),\r\n        iconName: \"GiFarmer\",\r\n        color: \"#F46700\",\r\n      },\r\n      {\r\n        name: \"trained_farmers\",\r\n        heading: \"Trained Farmers\",\r\n        figures: \"N/A\",\r\n        iconName: \"GiFarmer\",\r\n        color: \"#F46700\",\r\n      },\r\n      {\r\n        name: \"total_bas\",\r\n        heading: \"Agronomy Advisors\",\r\n        figures: projectStats?.total_bas || 0,\r\n        iconName: \"FaTripadvisor\",\r\n        color: \"#F46700\",\r\n      },\r\n      {\r\n        name: \"total_fts\",\r\n        heading: \"Farmer Trainers\",\r\n        figures: projectStats?.total_fts || 0,\r\n        iconName: \"GiFarmer\",\r\n        color: \"#F46700\",\r\n      },\r\n    ];\r\n  }, [trainingGroups, data, projectStats]);\r\n\r\n  const openList = (e, name) => {\r\n    e.preventDefault();\r\n\r\n    const map = {\r\n      total_bas: {\r\n        title: \"Business Advisors\",\r\n        list: [...new Set(trainingGroups.map((g) => g.business_advisor).filter(Boolean))],\r\n      },\r\n      total_fts: {\r\n        title: \"Farmer Trainers\",\r\n        list: [...new Set(trainingGroups.map((g) => g.farmer_trainer).filter(Boolean))],\r\n      },\r\n    };\r\n\r\n    if (map[name]) {\r\n      setOpen(true);\r\n      setTitle(map[name].title);\r\n      setList(map[name].list);\r\n    }\r\n  };\r\n\r\n  return {\r\n    modules,\r\n    statsData,\r\n    open,\r\n    setOpen,\r\n    list,\r\n    title,\r\n    loading,\r\n    error,\r\n    openList,\r\n  };\r\n};\r\n"],"names":["_ref","open","handleClose","title","data","_jsxs","Dialog","onClose","children","_jsx","DialogTitle","DialogContent","List","map","item","index","ListItem","button","ListItemAvatar","Avatar","name","size","round","color","fgColor","ListItemText","primary","DialogActions","Button","onClick","heading","figures","icon","className","style","backgroundColor","iconMap","MdGroups","VscFileSubmodule","BsPersonBoundingBox","GiFarmer","FaTripadvisor","statsData","openList","Grid","container","spacing","xs","sm","md","NavLink","to","path","e","Card","iconName","modules","length","Typography","variant","align","width","height","Chrono","items","mode","allowDynamicUpdate","cardWidth","cardHeight","contentDetailsHeight","activeItemIndex","findIndex","m","isCurrent","cardPositionHorizontal","focusActiveItemOnLoad","theme","secondary","cardBgColor","cardForeColor","titleColor","titleColorActive","subtitleColor","gql","GET_TRAINING_MODULES_PER_PROJECT","Dashboard","trainingGroups","projectStats","activeProject","useOutletContext","setOpen","list","loading","error","arguments","undefined","selectedProject","useState","setList","setTitle","useQuery","variables","projectId","skip","useMemo","_data$getTrainingModu","getTrainingModulesByProject","training_modules","mod","tm_date","cardTitle","tm_is_current","tm_title","cardSubtitle","tm_module_number","_data$getTrainingModu2","trainingModules","filter","g","total_participants","reduce","a","b","toLocaleString","total_households","total_bas","total_fts","preventDefault","Set","business_advisor","Boolean","farmer_trainer","useDashboardData","LoadingScreen","textAlign","paddingTop","message","DashboardStats","marginTop","ModuleTimeline","ListUpModal"],"sourceRoot":""}