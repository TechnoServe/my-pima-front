{"version":3,"file":"static/js/718.f8878833.chunk.js","mappings":"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","sources":["graphql/queries/participantsRequests.js","components/Modals/UploadParticipantsModal.js","graphql/queries/attendancesRequests.js","pages/Participants.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT = gql`\r\n  query GetParticipantsAttendanceByProject($projectId: String!) {\r\n    getParticipantsByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        age\r\n        coffee_tree_numbers\r\n        coop_membership_number\r\n        phone_number\r\n        hh_number\r\n        ffg_id\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n        create_in_commcare\r\n      }\r\n    }\r\n    getAttendances(project_id: $projectId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_name\r\n        attendance_date\r\n        attendance_status\r\n        session_id\r\n        module_name\r\n        module_number\r\n        module_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANTS_PER_PROJECT = gql`\r\n  query GetParticipantsAttendanceByProject($projectId: String!) {\r\n    getParticipantsByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        age\r\n        coffee_tree_numbers\r\n        number_of_coffee_plots\r\n        coop_membership_number\r\n        phone_number\r\n        hh_number\r\n        ffg_id\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n        create_in_commcare\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANTS_PER_TG = gql`\r\n  query GetParticipantsByGroup($tgId: String!) {\r\n    getParticipantsByGroup(tg_id: $tgId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANT_BY_ID = gql`\r\n  query GetParticipantsById($id: String!) {\r\n    getParticipantsById(p_id: $id) {\r\n      message\r\n      status\r\n      participant {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ATTENDANCE_PER_PARTICIPANT = gql`\r\n  query GetAttendanceByParticipant($participantId: String!) {\r\n    getAttendanceByParticipant(participant_id: $participantId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_name\r\n        attendance_date\r\n        attendance_status\r\n        module_name\r\n        session_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPLOAD_PARTICIPANTS = gql`\r\n  mutation UploadParticipants($partsFile: Upload!) {\r\n    uploadParticipants(parts_file: $partsFile) {\r\n      message\r\n      status\r\n      file\r\n    }\r\n  }\r\n`;\r\n\r\nconst SYNC_PARTICIPANTS_WITH_COMMCARE = gql`\r\n  mutation SyncParticipantsWithCOMMCARE($projectId: String!) {\r\n    syncParticipantsWithCOMMCARE(project_id: $projectId) {\r\n      message\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  GET_PARTICIPANTS_PER_TG,\r\n  GET_ATTENDANCE_PER_PARTICIPANT,\r\n  UPLOAD_PARTICIPANTS,\r\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\r\n  GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT,\r\n  GET_PARTICIPANT_BY_ID\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  DialogActions,\r\n  Chip,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { BiErrorAlt } from \"react-icons/bi\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  UPLOAD_PARTICIPANTS,\r\n} from \"../../graphql/queries/participantsRequests\";\r\n\r\nconst requiredColumns = [\r\n  \"Project\",\r\n  \"first_name\",\r\n  \"last_name\",\r\n  \"gender\",\r\n  \"age\",\r\n  \"coffee_tree_numbers\",\r\n  \"farmer_sf_id\",\r\n  \"tns_id\",\r\n  \"hh_number\",\r\n  \"sf_household_id\",\r\n  \"farmer_number\",\r\n  \"ffg_id\",\r\n  \"training_group\",\r\n  \"status\",\r\n];\r\n\r\nconst UploadParticipantsModal = ({\r\n  open,\r\n  setOpen,\r\n  navigatedProject,\r\n  sfProjectId,\r\n}) => {\r\n  const [fileInfo, setFileInfo] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loadedColumns, setLoadedColumns] = useState([]);\r\n  const [distinctProjects, setDistinctProjects] = useState([]);\r\n  const [uploadResult, setUploadResult] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const [uploadParticipants] = useMutation(UPLOAD_PARTICIPANTS);\r\n  const participantsPerProject = useQuery(GET_PARTICIPANTS_PER_PROJECT, {\r\n    variables: { projectId: sfProjectId },\r\n  });\r\n\r\n  const handleChange = (file) => {\r\n    setFile(file);\r\n    setUploadResult(null);\r\n    parseFile(file);\r\n  };\r\n\r\n  const parseFile = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const loadedData = e.target.result.split(/\\r\\n|\\n/);\r\n      const modifiedData = loadedData.map((row) =>\r\n        row.split(\",\").map((cell) => cell.replace(/^\"(.*)\"$/, \"$1\"))\r\n      );\r\n      setFileInfo({\r\n        filename: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        data: modifiedData.length > 0 ? modifiedData : loadedData,\r\n      });\r\n      setLoadedColumns(modifiedData[0]);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!fileInfo) return;\r\n    if (fileInfo.data && fileInfo.data.length < 2) return;\r\n    extractDistinctProjects(fileInfo);\r\n  }, [fileInfo, loadedColumns]);\r\n\r\n  const extractDistinctProjects = (fileInfo) => {\r\n    const projectColumn = fileInfo.data\r\n      .map((row) => row[loadedColumns.indexOf(\"Project\")])\r\n      .filter((project) => project);\r\n    setDistinctProjects([...new Set(projectColumn)]);\r\n  };\r\n\r\n  const handleClose = (e, reason) => {\r\n    if (reason === \"backdropClick\" || reason === \"escapeKeyDown\") return;\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setFileInfo(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (isProcessing) return;\r\n    setIsProcessing(true);\r\n    setUploadResult(null);\r\n    const newFile = createProjectSpecificFile(\r\n      fileInfo,\r\n      loadedColumns,\r\n      navigatedProject\r\n    );\r\n    await uploadFile(newFile);\r\n  };\r\n\r\n  const createProjectSpecificFile = (fileInfo, loadedColumns, project) => {\r\n    const projectIndex = loadedColumns.indexOf(\"Project\");\r\n    const projectData = fileInfo.data.filter(\r\n      (row) => row[projectIndex] === project\r\n    );\r\n    const projectDataString = `${loadedColumns.join(\",\")}\\n${projectData.join(\r\n      \"\\n\"\r\n    )}`;\r\n    return new File([projectDataString], fileInfo.filename, {\r\n      type: \"text/csv\",\r\n    });\r\n  };\r\n\r\n  const uploadFile = async (file) => {\r\n    try {\r\n      const res = await uploadParticipants({ variables: { partsFile: file } });\r\n      await participantsPerProject.refetch();\r\n      setUploadResult(res.data.uploadParticipants);\r\n      if (res.data.uploadParticipants.status === 200) {\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploadResult({\r\n        status: 500,\r\n        message: \"Something went wrong. Please try again.\",\r\n      });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadErrors = () => {\r\n    const { file, message } = uploadResult;\r\n    if (file) {\r\n      const byteCharacters = atob(file);\r\n      const byteNumbers = new Array(byteCharacters.length).fill().map((_, i) => byteCharacters.charCodeAt(i));\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\r\n      saveAs(blob, \"error_file.xlsx\");\r\n    } else {\r\n      console.error(\"No file found in the upload result.\");\r\n    }\r\n  };\r\n\r\n  const renderFileDetails = () => (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <Typography variant=\"body2\">\r\n        <strong>Name:</strong> {fileInfo.filename}\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        <strong>Size:</strong> {formatFileSize(fileInfo.size)}\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        <strong>Type:</strong> {fileInfo.type}\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        <strong>Total Records:</strong> {formatNumberWithCommas(fileInfo.data.length - 2)}\r\n      </Typography>\r\n      {distinctProjects.length > 1 && (\r\n        <Typography variant=\"body4\" sx={{ marginBottom: \"10px\" }}>\r\n          Only records for <strong>{navigatedProject} ({fileInfo.data.filter((row) => row[loadedColumns.indexOf(\"Project\")] === navigatedProject).length} records)</strong> will be processed from this file.\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n\r\n  const formatFileSize = (size) => (\r\n    size > 1000000 ? `${(size / 1000000).toFixed(2)} MB` : `${(size / 1000).toFixed(2)} KB`\r\n  );\r\n\r\n  const formatNumberWithCommas = (number) => (\r\n    number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n  );\r\n\r\n  const renderRequiredColumnsAlert = () => (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <Typography variant=\"body1\">\r\n        <BiErrorAlt style={{ fontSize: \"2rem\", color: \"#B90101\" }} /> File must contain all required columns:\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ display: \"flex\", alignItems: \"center\", flexWrap: \"wrap\" }}>\r\n        {requiredColumns.filter((column) => !loadedColumns.includes(column)).map((column, index) => (\r\n          <Chip key={index} label={column} sx={{ margin: \"5px 0.5rem\" }} color=\"primary\" variant=\"outlined\" />\r\n        ))}\r\n      </Typography>\r\n      <div className=\"upload_actions\">\r\n        <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\r\n      </div>\r\n    </Box>\r\n  );\r\n\r\n  const renderEmptyFileAlert = () => (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <Typography variant=\"body1\" sx={{ fontStyle: \"italic\" }}>\r\n        <BiErrorAlt style={{ fontSize: \"1.5rem\", color: \"#B90101\" }} /> There are no records in the file. Please upload a file with data.\r\n      </Typography>\r\n      <div className=\"upload_actions\">\r\n        <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\r\n      </div>\r\n    </Box>\r\n  );\r\n\r\n  const renderProjectMismatchAlert = () => (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <Typography variant=\"body1\" sx={{ fontStyle: \"italic\" }}>\r\n        <BiErrorAlt style={{ fontSize: \"3rem\", color: \"#B90101\" }} /> The project(s) in the file does not match the project you are currently navigating. Please upload a file with the correct project.\r\n      </Typography>\r\n      <div className=\"upload_actions\">\r\n        <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\r\n      </div>\r\n    </Box>\r\n  );\r\n\r\n  const renderProcessingState = () => (\r\n    <Typography variant=\"body2\" sx={{ marginBottom: \"10px\", width: \"100%\", textAlign: \"center\" }}>\r\n      <em style={{ fontWeight: \"bold\", color: \"#6C757D\" }}>Data are being processed, wait...</em>\r\n    </Typography>\r\n  );\r\n\r\n  const renderUploadResult = () => (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }} className=\"file-info\">\r\n      <Typography variant=\"body2\">\r\n        <Alert severity={uploadResult.status === 200 ? \"success\" : \"error\"}>{uploadResult.message}</Alert>\r\n      </Typography>\r\n      {uploadResult.status !== 200 && uploadResult.file && (\r\n        <Button onClick={handleDownloadErrors} variant=\"contained\" color=\"primary\">\r\n          Download Error File\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogContent>\r\n        {!fileInfo ? (\r\n          <FileUploader label={\"Drag and drop or browse a file to upload. File must be: \"} handleChange={handleChange} name=\"file\" types={[\"csv\"]} />\r\n        ) : uploadResult ? (\r\n          renderUploadResult()\r\n        ) : loadedColumns.filter((column) => requiredColumns.includes(column)).length !== requiredColumns.length ? (\r\n          renderRequiredColumnsAlert()\r\n        ) : fileInfo.data.length - 2 < 1 ? (\r\n          renderEmptyFileAlert()\r\n        ) : !distinctProjects.includes(navigatedProject) ? (\r\n          renderProjectMismatchAlert()\r\n        ) : (\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }} className=\"file-info\">\r\n            {renderFileDetails()}\r\n            <div className=\"upload_actions\">\r\n              {isProcessing ? renderProcessingState() : (\r\n                <>\r\n                  <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\r\n                  <FaCloudUploadAlt title=\"Proceed Records Processing\" className=\"upload__icon\" onClick={handleUpload} />\r\n                </>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} disabled={isProcessing}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadParticipantsModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\n// const GET_ALL_ATTENDANCES = gql`\r\n//   query GetAttendances($projectId: String!) {\r\n//     getAttendances(project_id: $projectId) {\r\n//       message\r\n//       status\r\n//       attendance {\r\n//         attendance_id\r\n//         participant_id\r\n//         attendance_name\r\n//         attendance_date\r\n//         attendance_status\r\n//         session_id\r\n//         module_name\r\n//         module_number\r\n//         module_id\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst GET_ALL_ATTENDANCES = gql`\r\n  query GetAttendances($projectId: String!, $limit: Int, $offset: Int) {\r\n    getAttendances(project_id: $projectId, limit: $limit, offset: $offset) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_status\r\n        module_name\r\n        module_number\r\n        module_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ALL_ATTENDANCES };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../components/Table/Table\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport UploadParticipantsModal from \"../components/Modals/UploadParticipantsModal\";\r\nimport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\r\n} from \"../graphql/queries/participantsRequests\";\r\nimport { GET_ALL_ATTENDANCES } from \"../graphql/queries/attendancesRequests\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst Participants = ({ selectedProject, trainingGroups, projects }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [sendToCcCount, setSendToCcCount] = useState();\r\n  const [isSyncing, setIsSyncing] = useState(false);\r\n\r\n  const {\r\n    data: participantData,\r\n    loading: participantsLoading,\r\n    error: participantsError,\r\n    refetch: refetchParticipants,\r\n  } = useQuery(GET_PARTICIPANTS_PER_PROJECT, {\r\n    variables: { projectId: selectedProject },\r\n    skip: !selectedProject,\r\n  });\r\n\r\n  const [allAttendances, setAllAttendances] = useState([]);\r\n  const [attendanceLoading, setAttendanceLoading] = useState(true);\r\n  const [attendanceError, setAttendanceError] = useState(null);\r\n\r\n  const { fetchMore } = useQuery(GET_ALL_ATTENDANCES, {\r\n    variables: {\r\n      projectId: selectedProject,\r\n      limit: 5000,\r\n      offset: 0,\r\n    },\r\n    skip: !selectedProject,\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchAllAttendancesParallel = async () => {\r\n      if (!selectedProject) return;\r\n\r\n      try {\r\n        setAttendanceLoading(true);\r\n        setAttendanceError(null);\r\n\r\n        const limit = 5000;\r\n        let offset = 0;\r\n        let allChunks = [];\r\n\r\n        // First request\r\n        const { data: initialData } = await fetchMore({\r\n          variables: { projectId: selectedProject, limit, offset },\r\n        });\r\n\r\n        const initialChunk = initialData?.getAttendances?.attendance || [];\r\n        allChunks = [...initialChunk];\r\n\r\n        if (initialChunk.length < limit) {\r\n          setAllAttendances(allChunks);\r\n          return setAttendanceLoading(false);\r\n        }\r\n\r\n        offset += limit;\r\n\r\n        // Now fetch sequentially in batches (e.g. 3 at a time)\r\n        const maxParallel = 10;\r\n        let keepGoing = true;\r\n\r\n        while (keepGoing) {\r\n          const promises = [];\r\n\r\n          for (let i = 0; i < maxParallel; i++) {\r\n            const currentOffset = offset + i * limit;\r\n\r\n            const p = fetchMore({\r\n              variables: {\r\n                projectId: selectedProject,\r\n                limit,\r\n                offset: currentOffset,\r\n              },\r\n            }).then((res) => {\r\n              const chunk = res?.data?.getAttendances?.attendance || [];\r\n              return { chunk, currentOffset };\r\n            });\r\n\r\n            promises.push(p);\r\n          }\r\n\r\n          const results = await Promise.all(promises);\r\n\r\n          for (let res of results) {\r\n            if (res.chunk.length > 0) {\r\n              allChunks = [...allChunks, ...res.chunk];\r\n            }\r\n\r\n            if (res.chunk.length < limit) {\r\n              keepGoing = false;\r\n            }\r\n          }\r\n\r\n          offset += maxParallel * limit;\r\n        }\r\n\r\n        setAllAttendances(allChunks);\r\n      } catch (err) {\r\n        console.error(\"Parallel attendance fetch error:\", err);\r\n        setAttendanceError(err);\r\n      } finally {\r\n        setAttendanceLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllAttendancesParallel();\r\n  }, [selectedProject, fetchMore]);\r\n\r\n  // const {\r\n  //   data: attendanceData,\r\n  //   loading: attendanceLoading,\r\n  //   error: attendanceError,\r\n  // } = useQuery(GET_ALL_ATTENDANCES, {\r\n  //   variables: { projectId: selectedProject },\r\n  //   skip: !selectedProject,\r\n  // });\r\n\r\n  const [SyncParticipants] = useMutation(SYNC_PARTICIPANTS_WITH_COMMCARE);\r\n\r\n  const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\r\n\r\n  useEffect(() => {\r\n    if (\r\n      participantData &&\r\n      participantData.getParticipantsByProject.status === 200\r\n    ) {\r\n      const sendToCcCount =\r\n        participantData.getParticipantsByProject.participants.filter(\r\n          (participant) => participant.create_in_commcare === \"false\"\r\n        );\r\n      setSendToCcCount(sendToCcCount.length);\r\n    }\r\n  }, [participantData]);\r\n\r\n  const handleTakeAction = async () => {\r\n    setIsSyncing(true);\r\n\r\n    try {\r\n      await SyncParticipants({\r\n        variables: {\r\n          projectId: selectedProject,\r\n        },\r\n      });\r\n      await refetchParticipants(); // Refetch the participants data after syncing\r\n      setIsSyncing(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setIsSyncing(false);\r\n    }\r\n  };\r\n\r\n  if (participantsLoading || attendanceLoading) {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <BeatLoader color=\"#0D3C61\" size={15} />\r\n        <em style={{ color: \"#0D3C61\" }}>\r\n          Loading Participants and Attendances...\r\n        </em>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  if (participantsError || attendanceError) {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <em style={{ color: \"red\" }}>\r\n          Error loading data:{\" \"}\r\n          {participantsError?.message || attendanceError?.message}\r\n        </em>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const participants = participantData.getParticipantsByProject.participants;\r\n  // const allAttendances = attendanceData.getAttendances.attendance;\r\n\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"full_name\",\r\n      name: \"Full Name\",\r\n      selector: (row) => row.first_name + \" \" + row.last_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"gender\",\r\n      name: \"Gender\",\r\n      selector: (row) => (row.gender === \"m\" ? \"Male\" : \"Female\"),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"location\",\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"Training Group\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"household_id\",\r\n      name: \"HH Number\",\r\n      selector: (row) => row.hh_number,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"primary_household_member\",\r\n      name: \"Primary HouseHold Member\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.farmer_number === \"1\" ? (\r\n            <Chip label={\"1\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"2\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"business_advisor\",\r\n      name: \"Business Advisor\",\r\n      selector: (row) => row.business_advisor,\r\n      sortable: true,\r\n    },\r\n  ];\r\n  const tableRowItem = \"participants\";\r\n\r\n  const rows = participants.map((participant, index) => {\r\n    const row = {\r\n      num: index + 1,\r\n      Project: projects.find(\r\n        (project) => project.sf_project_id === selectedProject\r\n      ).project_name,\r\n      p_id: participant.p_id,\r\n      first_name: participant.first_name,\r\n      middle_name: participant.middle_name ? participant.middle_name : \"\",\r\n      last_name: participant.last_name ? participant.last_name : \"\",\r\n      gender: participant.gender,\r\n      age: participant.age,\r\n      coffee_tree_numbers: participant.coffee_tree_numbers,\r\n      phone_number: participant.phone_number,\r\n      farmer_sf_id: participant.p_id,\r\n      hh_number: participant.hh_number,\r\n      sf_household_id: participant.household_id,\r\n      ffg_id: participant.ffg_id,\r\n      location: participant.location,\r\n      tns_id: participant.tns_id,\r\n      training_group:\r\n        trainingGroups && trainingGroups.length > 0\r\n          ? trainingGroups.find((tg) => tg.tg_id === participant.training_group)\r\n              ?.tg_name || \"N/A\"\r\n          : \"N/A\",\r\n      farmer_number: participant.primary_household_member,\r\n      status: participant.status,\r\n      farmer_trainer: participant.farmer_trainer,\r\n      // business_advisor: participant.business_advisor,\r\n      create_in_commcare: participant.create_in_commcare,\r\n      number_of_coffee_plots: participant.number_of_coffee_plots,\r\n    };\r\n\r\n    if (selectedProject === \"a0EOj000003E0knMAC\") {\r\n      row.agronomy_advisor = participant.business_advisor;\r\n    } else {\r\n      row.business_advisor = participant.business_advisor;\r\n    }\r\n\r\n    if (\r\n      selectedProject === \"a0EOj000002FMGnMAO\" ||\r\n      selectedProject === \"a0EOj000002C7ivMAC\"\r\n    ) {\r\n      row.national_identification_id = participant.coop_membership_number\r\n        ? participant.coop_membership_number\r\n        : \"\";\r\n    } else if (selectedProject === \"a0EOj000003E0knMAC\") {\r\n      row.growers_number = participant.coop_membership_number\r\n        ? participant.coop_membership_number\r\n        : \"\";\r\n    } else {\r\n      row.coop_membership_number = participant.coop_membership_number\r\n        ? participant.coop_membership_number\r\n        : \"\";\r\n    }\r\n\r\n    return row;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Display the dialog box for active participants */}\r\n      {sendToCcCount > 0 && (\r\n        <div className=\"active-participants-dialog\">\r\n          <p>\r\n            You currently have <strong>{sendToCcCount}</strong> participants who\r\n            have not been sent to CommCare. Please download the participant\r\n            list, review the database, and ensure all information is verified\r\n            before syncing with CommCare.\r\n          </p>\r\n          <button\r\n            className=\"take-action-button\"\r\n            onClick={() => handleTakeAction()}\r\n            disabled={isSyncing}\r\n          >\r\n            {isSyncing ? \"Processing...\" : \"Send to Commcare\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex__heading\">\r\n        <h1 className=\"module__heading\">Registered Farmers View</h1>{\" \"}\r\n        {(userDetails?.role === \"super_admin\" ||\r\n          userDetails?.role === \"ci_leadership\" ||\r\n          userDetails?.role === \"senior_business_advisor\" ||\r\n          userDetails?.role === \"project_manager\" ||\r\n          userDetails?.role === \"mel_analyst\") && (\r\n          <FaCloudUploadAlt\r\n            title=\"Upload New Participants\"\r\n            style={{\r\n              fontSize: \"30px\",\r\n              cursor: \"pointer\",\r\n              marginLeft: \"10px\",\r\n              fill: \"#00A5A3\",\r\n            }}\r\n            onClick={() => setOpen(true)}\r\n          />\r\n        )}{\" \"}\r\n      </div>\r\n      {participants.length > 0 ? (\r\n        <Table\r\n          columns={columns}\r\n          data={rows}\r\n          tableRowItem={tableRowItem}\r\n          allAttendances={allAttendances}\r\n          selectedProject={selectedProject}\r\n        />\r\n      ) : (\r\n        <div className=\"no__data\">\r\n          <h1 style={{ fontSize: \"20px\" }}>No Registered Farmers Yet</h1>\r\n        </div>\r\n      )}\r\n\r\n      <UploadParticipantsModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        navigatedProject={\r\n          projects.find((project) => project.sf_project_id === selectedProject)\r\n            .project_name\r\n        }\r\n        sfProjectId={selectedProject}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Participants;\r\n"],"names":["GET_PARTICIPANTS_PER_PROJECT","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","GET_PARTICIPANTS_PER_TG","_templateObject3","GET_PARTICIPANT_BY_ID","_templateObject4","GET_ATTENDANCE_PER_PARTICIPANT","_templateObject5","UPLOAD_PARTICIPANTS","_templateObject6","SYNC_PARTICIPANTS_WITH_COMMCARE","_templateObject7","requiredColumns","_ref","_ref2","_ref3","open","setOpen","navigatedProject","sfProjectId","_useState","useState","_useState2","_slicedToArray","fileInfo","setFileInfo","_useState3","_useState4","setFile","_useState5","_useState6","loadedColumns","setLoadedColumns","_useState7","_useState8","distinctProjects","setDistinctProjects","_useState9","_useState10","uploadResult","setUploadResult","_useState11","_useState12","isProcessing","setIsProcessing","_useMutation","useMutation","uploadParticipants","participantsPerProject","useQuery","variables","projectId","parseFile","file","reader","FileReader","onload","e","loadedData","target","result","split","modifiedData","map","row","cell","replace","filename","name","size","type","data","length","readAsText","useEffect","extractDistinctProjects","projectColumn","indexOf","filter","project","_toConsumableArray","Set","handleClose","reason","resetState","createProjectSpecificFile","projectIndex","projectData","projectDataString","concat","join","File","uploadFile","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","res","wrap","_context2","prev","next","partsFile","sent","refetch","status","setTimeout","window","location","reload","t0","console","error","message","finish","stop","apply","arguments","handleDownloadErrors","byteCharacters","atob","byteNumbers","Array","fill","_","i","charCodeAt","byteArray","Uint8Array","blob","Blob","saveAs","formatFileSize","toFixed","formatNumberWithCommas","number","toString","_jsxs","Dialog","onClose","children","_jsx","DialogContent","Box","sx","display","flexDirection","alignItems","className","Typography","variant","Alert","severity","Button","onClick","color","column","includes","BiErrorAlt","style","fontSize","flexWrap","index","Chip","label","margin","AiOutlineCloseCircle","title","fontStyle","marginBottom","width","textAlign","fontWeight","_Fragment","FaCloudUploadAlt","_callee","newFile","_context","abrupt","FileUploader","handleChange","types","DialogActions","disabled","GET_ALL_ATTENDANCES","selectedProject","trainingGroups","projects","sendToCcCount","setSendToCcCount","isSyncing","setIsSyncing","_useQuery","skip","participantData","participantsLoading","loading","participantsError","refetchParticipants","allAttendances","setAllAttendances","attendanceLoading","setAttendanceLoading","attendanceError","setAttendanceError","fetchMore","limit","offset","notifyOnNetworkStatusChange","_initialData$getAtten","allChunks","_yield$fetchMore","initialData","initialChunk","maxParallel","keepGoing","promises","_loop","results","_iterator","_step","getAttendances","attendance","currentOffset","p","then","_res$data","_res$data$getAttendan","chunk","push","delegateYield","Promise","all","_createForOfIteratorHelper","s","n","done","value","err","f","t1","fetchAllAttendancesParallel","SyncParticipants","userDetails","JSON","parse","localStorage","getItem","getParticipantsByProject","participants","participant","create_in_commcare","Grid","container","direction","justifyContent","height","BeatLoader","columns","id","selector","num","sortable","first_name","last_name","gender","tns_id","training_group","hh_number","farmer_number","farmer_trainer","business_advisor","rows","_trainingGroups$find","Project","find","sf_project_id","project_name","p_id","middle_name","age","coffee_tree_numbers","phone_number","farmer_sf_id","sf_household_id","household_id","ffg_id","tg","tg_id","tg_name","primary_household_member","number_of_coffee_plots","agronomy_advisor","national_identification_id","coop_membership_number","growers_number","_context3","log","handleTakeAction","role","cursor","marginLeft","Table","tableRowItem","UploadParticipantsModal"],"sourceRoot":""}