{"version":3,"file":"static/js/413.355993a0.chunk.js","mappings":"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","sources":["features/statstg/Statscard.js","features/tsapprove/statsframe.js","features/tsapprove/tslist.js"],"sourcesContent":["import React from 'react'\r\nimport './statscard.css'\r\n\r\nconst Statscard = ({ heading, figures, icon, color }) => {\r\n  return (\r\n    <div>\r\n      <div className='card__container'>\r\n        <div className='card__content'>\r\n          <div className='card__text'>\r\n            <p className='card__text1'>{heading}</p>\r\n            <p className='card__text2'>{figures}</p>\r\n          </div>\r\n          <div className='card__icon' style={{ backgroundColor: color }}>\r\n            {icon}{' '}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statscard\r\n","import React from \"react\";\r\nimport Statscard from \"../statstg/Statscard\";\r\nimport { MdGroups, MdBarChart } from \"react-icons/md\";\r\nimport { BsPersonBoundingBox } from \"react-icons/bs\";\r\n\r\nconst Statsframe = ({ statistics, currentSessions }) => {\r\n    console.log(currentSessions)\r\n  const statsData = [\r\n    {\r\n      heading: \"Unverified Sessions\",\r\n      figures: currentSessions.filter((session) => session.is_verified === false).length,\r\n      icon: <MdGroups />,\r\n      color: \"#25245D\",\r\n    },\r\n    {\r\n      heading: \"Correct Attendees #\",\r\n      figures: currentSessions.filter(\r\n        (session) => session.session_image_status === \"approved\"\r\n      ).length,\r\n      icon: <MdGroups />,\r\n      color: \"#25245D\",\r\n    },\r\n    {\r\n      heading: \"Incorrect Attendees #\",\r\n      figures: currentSessions.filter(\r\n        (session) => session.session_image_status === \"invalid\"\r\n      ).length,\r\n      icon: <BsPersonBoundingBox />,\r\n      color: \"#087C8F\",\r\n    },\r\n    {\r\n      heading: \"Unclear Photos\",\r\n      figures: currentSessions.filter(\r\n        (session) => session.session_image_status === \"unclear\"\r\n      ).length,\r\n      icon: <MdBarChart />,\r\n      color: \"#F46700\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", marginBottom: \"20px\", display: \"flex\" }}>\r\n      {statsData.map((data, index) => (\r\n        <div key={index}>\r\n          <Statscard\r\n            heading={data.heading}\r\n            figures={data.figures}\r\n            icon={data.icon}\r\n            color={data.color}\r\n          />\r\n        </div>\r\n      ))}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statsframe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Statsframe from \"./statsframe\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_TRAINING_MODULES_PER_PROJECT } from \"../../graphql/queries/trainingModulesRequests\";\r\n\r\nconst TSApprove = ({\r\n  trainingSessions,\r\n  filter,\r\n  setFilter,\r\n  selectedProject,\r\n}) => {\r\n  const [filtSessions, setFiltSessions] = useState([]);\r\n  const columns = [\r\n    {\r\n      id: \"num\",\r\n      name: \"No.\",\r\n      selector: (row) => row.num,\r\n      sortable: true,\r\n      grow: 1,\r\n    },\r\n    {\r\n      id: \"ts_module\",\r\n      name: \"Session Name\",\r\n      selector: (row) => row.ts_module,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      id: \"ts_group\",\r\n      name: \"FFG\",\r\n      selector: (row) => row.ts_group,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      id: \"total_males\",\r\n      name: \"MA\",\r\n      selector: (row) => row.total_males,\r\n      sortable: true,\r\n      grow: 1,\r\n    },\r\n    {\r\n      id: \"total_females\",\r\n      name: \"FA\",\r\n      selector: (row) => row.total_females,\r\n      sortable: true,\r\n      grow: 1,\r\n    },\r\n    // {\r\n    //   id: \"has_image\",\r\n    //   name: \"Has Image?\",\r\n    //   selector: (row) => (\r\n    //     <div>\r\n    //       {row.has_image ? (\r\n    //         <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n    //       ) : (\r\n    //         <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n    //       )}\r\n    //     </div>\r\n    //   ),\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"is_verified\",\r\n      name: \"Is Session Verified?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.is_verified ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_image_status\",\r\n      name: \"Session Image Status\",\r\n      grow: 2,\r\n      selector: (row) => (\r\n        <div>\r\n          {!row.is_verified ? (\r\n            <Chip\r\n              label={\"Review Image\"}\r\n              color=\"warning\"\r\n              variant=\"filled\"\r\n              title={\"Review Image\"}\r\n              size={'small'}\r\n            />\r\n          ) : (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n              size={'small'}\r\n            />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_date\",\r\n      name: \"Session Date\",\r\n      selector: (row) => row.session_date,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"trainsessionapprov\";\r\n\r\n  const rows =\r\n    filtSessions.length > 0\r\n      ? filtSessions.map((trainingSession, index) => ({\r\n          num: index + 1,\r\n          ts_id: trainingSession.ts_id,\r\n          //ts_name: trainingSession.ts_name,\r\n          ts_module: trainingSession.ts_module,\r\n          ts_group: trainingSession.ts_group,\r\n          tns_id: trainingSession.tns_id || \"N/A\",\r\n          farmer_trainer: trainingSession.farmer_trainer,\r\n          //ts_status: trainingSession.ts_status,\r\n          total_males: trainingSession.total_males,\r\n          total_females: trainingSession.total_females,\r\n          has_image: trainingSession.has_image,\r\n          is_verified: trainingSession.is_verified,\r\n          session_image_status: trainingSession.session_image_status,\r\n          session_date: trainingSession.session_date,\r\n        }))\r\n      : [];\r\n\r\n  const getProjectModules = useQuery(GET_TRAINING_MODULES_PER_PROJECT, {\r\n    variables: { projectId: selectedProject },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const projectModulesData = getProjectModules.data?.getTrainingModulesByProject;\r\n    const isDataValid =\r\n      projectModulesData &&\r\n      projectModulesData.status === 200 &&\r\n      trainingSessions &&\r\n      trainingSessions.length > 0;\r\n  \r\n    if (isDataValid) {\r\n      const projectModules = projectModulesData.training_modules;\r\n      const currentModuleTitle =\r\n        projectModules\r\n          .filter((module) => module.tm_is_current)\r\n          .sort((a, b) => new Date(b.tm_date) - new Date(a.tm_date))[0]?.tm_title || \"\";\r\n  \r\n      const filteredSessions = trainingSessions\r\n        .filter((session) => session.ts_module === currentModuleTitle && session.session_date);\r\n  \r\n      setFiltSessions(filteredSessions);\r\n    }\r\n  }, [getProjectModules.data, trainingSessions]);\r\n  \r\n  return (\r\n    <div>\r\n      <h1 className=\"module__heading\">\r\n        Image Verification -{\" \"}\r\n        {filtSessions.length > 0 ? filtSessions[0].ts_module : \"\"}{\" \"}\r\n      </h1>\r\n      <div>\r\n        <Statsframe\r\n          statistics={[]}\r\n          totalParticipants={0}\r\n          currentSessions={filtSessions}\r\n        />\r\n        <Table\r\n          columns={columns}\r\n          data={rows}\r\n          tableRowItem={tableRowItem}\r\n          filter={filter}\r\n          setFilter={setFilter}\r\n          //setFilteredSessions={setFilteredSessions}\r\n          selectedProject={selectedProject}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TSApprove;\r\n"],"names":["_ref","heading","figures","icon","color","_jsx","children","className","_jsxs","style","backgroundColor","statistics","currentSessions","console","log","statsData","filter","session","is_verified","length","MdGroups","session_image_status","BsPersonBoundingBox","MdBarChart","width","marginBottom","display","map","data","index","Statscard","trainingSessions","setFilter","selectedProject","_useState","useState","_useState2","_slicedToArray","filtSessions","setFiltSessions","columns","id","name","selector","row","num","sortable","grow","ts_module","ts_group","tns_id","farmer_trainer","total_males","total_females","Chip","label","variant","title","size","session_date","rows","trainingSession","ts_id","has_image","getProjectModules","useQuery","GET_TRAINING_MODULES_PER_PROJECT","variables","projectId","useEffect","_getProjectModules$da","projectModulesData","getTrainingModulesByProject","status","_projectModules$filte","currentModuleTitle","training_modules","module","tm_is_current","sort","a","b","Date","tm_date","tm_title","filteredSessions","Statsframe","totalParticipants","Table","tableRowItem"],"sourceRoot":""}