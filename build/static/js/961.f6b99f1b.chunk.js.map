{"version":3,"file":"static/js/961.f6b99f1b.chunk.js","mappings":"yWAgBMA,GAAUC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gSA8HnB,EA5Ge,SAAHC,GAA6B,IAADC,EAAtBC,EAAeF,EAAfE,gBAChBC,GAAiCC,EAAAA,EAAAA,GAASR,EAAS,CACjDS,UAAW,CAAEC,WAAYJ,KADnBK,EAAOJ,EAAPI,QAASC,EAAKL,EAALK,MAAOC,EAAIN,EAAJM,KAGxBC,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAsCL,EAAAA,EAAAA,UAAS,QAAOM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,GAAYC,EAAAA,EAAAA,QAAO,OAEzBC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACd,GAAIH,EAAUI,UAAe,OAAJf,QAAI,IAAJA,GAAwB,QAApBc,EAAJd,EAAMgB,0BAAkB,IAAAF,OAApB,EAAJA,EAA0Bd,KAAKiB,QAAS,EAAG,CAClE,IAAMC,EAAqBC,KAAKC,IAAGC,MAARF,MAAIG,EAAAA,EAAAA,IACzBtB,EAAKgB,mBAAmBhB,MAAQ,IAAIuB,KAAI,SAACC,GAAE,OAAsB,EAAjBA,EAAGC,KAAKR,MAAU,MAExEP,EAAe,GAADgB,OAAIR,EAAkB,MACtC,CACF,GAAG,CAAClB,IA6BJ,OACE2B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOC,SAAC,kCACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLH,UAAU,SACVI,QAAa,OAAJhC,QAAI,IAAJA,GAAwB,QAApBR,EAAJQ,EAAMgB,0BAAkB,IAAAxB,OAApB,EAAJA,EAA0BQ,KAAKuB,KAAI,SAACC,GAAE,MAAM,CACnDS,MAAOT,EAAGC,KACVS,MAAOV,EAAGW,GACX,IACDC,SArCe,SAACC,GAAoB,IAADC,EACnCC,EAAqB,OAAJvC,QAAI,IAAJA,GAAwB,QAApBsC,EAAJtC,EAAMgB,0BAAkB,IAAAsB,OAApB,EAAJA,EAA0BtC,KAAKwC,MACpD,SAAChB,GAAE,OAAKA,EAAGW,KAAOE,EAAeH,KAAK,IAExC5B,EAAciC,EAChB,EAiCQE,YAAY,gCACZP,MACE7B,EAAa,CAAE4B,MAAO5B,EAAWoB,KAAMS,MAAO7B,EAAW8B,IAAO,KAElEO,OAAQ,CACNC,WAAY,SAACC,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEE,OAAQ,MAAI,GAEhDC,iBAAkBC,SAASC,KAC3BC,cAAc,OACdC,MAAO1C,EACP2C,IAAKzC,KAEPgB,EAAAA,EAAAA,MAAA,UAAQC,UAAU,gBAAgByB,QA3ClB,WAAO,IAADC,EAEpBC,EAAS,GACX,OAAJvD,QAAI,IAAJA,GAAwB,QAApBsD,EAAJtD,EAAMgB,0BAAkB,IAAAsC,GAAxBA,EAA0BtD,KAAKwD,SAAQ,SAAChC,GACtCA,EAAGiC,cAAcD,SAAQ,SAACE,GACxBH,EAAOI,KAAK,CACVC,KAAMpC,EAAGC,KACToC,KAAMH,EAAGI,KACT,YAAaJ,EAAGK,SAChB,iBAAkBL,EAAGM,eAEzB,GACF,IAEA,IAAMC,EAAKC,EAAAA,GAAWC,cAAcZ,GAC9Ba,EAAKF,EAAAA,GAAWG,WACtBH,EAAAA,GAAWI,kBAAkBF,EAAIH,EAAI,kBACrCC,EAAAA,GAAeE,EAhBE,2BAiBnB,EAyB+DvC,SAAA,EACvDC,EAAAA,EAAAA,KAACyC,EAAAA,IAAU,IAAG,yBAGjBlE,IACCyB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,CAAC,yBACHxB,EAAWoB,SAEpCE,EAAAA,EAAAA,MAAC6C,EAAAA,EAAS,CAACrB,MAAO,IAAKsB,OAAQ,IAAKzE,KAAMK,EAAWoD,cAAc5B,SAAA,EACjEC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAa,CAACC,gBAAgB,SAC/B7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACC,QAAQ,OAAOC,KAAM,CAAEC,SAAU,OACxCjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAK,CACJ/C,MAAO,CAAEC,MAAO,QAAS+C,OAAQ,GAAIC,SAAU,cAC/CC,MAAO,CAAC,EAAG,GAAI,GAAI,OAErBrD,EAAAA,EAAAA,KAACsD,EAAAA,EAAO,KACRtD,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,KACPvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CACHC,KAAK,WACLV,QAAQ,gBACRpD,KAAK,wBACL+D,OAAO,aAET1D,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CACHC,KAAK,WACLV,QAAQ,WACRpD,KAAK,yBACL+D,OAAO,oBAMhB1F,IAAWgC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAiBC,SAAC,eAC1C9B,IAAS4B,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,UAAQ9B,EAAM0F,aAG3D,C","sources":["pages/AAPerformance.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport \"./AAList.css\";\r\n\r\nconst GET_AAS = gql`\r\n  query GetAAs($project_id: String!) {\r\n    getPerformanceByAA(project_id: $project_id) {\r\n      message\r\n      status\r\n      data {\r\n        id\r\n        name\r\n        monthlyCounts {\r\n          date\r\n          trainingCount\r\n          dpoCount\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst AAList = ({ selectedProject }) => {\r\n  const { loading, error, data } = useQuery(GET_AAS, {\r\n    variables: { project_id: selectedProject },\r\n  });\r\n  const [selectedAA, setSelectedAA] = useState(null);\r\n  const [selectWidth, setSelectWidth] = useState(\"auto\");\r\n  const selectRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (selectRef.current && data?.getPerformanceByAA?.data.length > 0) {\r\n      const longestOptionWidth = Math.max(\r\n        ...(data.getPerformanceByAA.data || []).map((aa) => aa.name.length * 8)\r\n      );\r\n      setSelectWidth(`${longestOptionWidth}px`);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleAASelect = (selectedOption) => {\r\n    const selectedAAData = data?.getPerformanceByAA?.data.find(\r\n      (aa) => aa.id === selectedOption.value\r\n    );\r\n    setSelectedAA(selectedAAData);\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const fileName = \"AA_Performance_Data.xlsx\";\r\n    const wsData = [];\r\n    data?.getPerformanceByAA?.data.forEach((aa) => {\r\n      aa.monthlyCounts.forEach((mc) => {\r\n        wsData.push({\r\n          Name: aa.name,\r\n          Date: mc.date,\r\n          \"DPO Count\": mc.dpoCount,\r\n          \"Training Count\": mc.trainingCount,\r\n        });\r\n      });\r\n    });\r\n\r\n    const ws = XLSX.utils.json_to_sheet(wsData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"AA_Performance\");\r\n    XLSX.writeFile(wb, fileName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"aa-list-container\">\r\n      <h1 className=\"title\">Agronomy Advisor Performance</h1>\r\n      <div className=\"select-export-container\">\r\n        <Select\r\n          className=\"select\"\r\n          options={data?.getPerformanceByAA?.data.map((aa) => ({\r\n            label: aa.name,\r\n            value: aa.id,\r\n          }))}\r\n          onChange={handleAASelect}\r\n          placeholder=\"Select an Agronomy Advisor...\"\r\n          value={\r\n            selectedAA ? { label: selectedAA.name, value: selectedAA.id } : null\r\n          }\r\n          styles={{\r\n            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n          }}\r\n          menuPortalTarget={document.body}\r\n          menuPlacement=\"auto\"\r\n          width={selectWidth}\r\n          ref={selectRef}\r\n        />\r\n        <button className=\"export-button\" onClick={exportToExcel}>\r\n          <BsDownload /> Export to Excel\r\n        </button>\r\n      </div>\r\n      {selectedAA && (\r\n        <div className=\"graph-container\">\r\n          <div className=\"graph-aa\">\r\n            <h4 className=\"graph-title\">\r\n              Performance Chart for {selectedAA.name}\r\n            </h4>\r\n            <LineChart width={600} height={300} data={selectedAA.monthlyCounts}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" tick={{ fontSize: 12 }} />\r\n              <YAxis\r\n                label={{ value: \"Count\", angle: -90, position: \"insideLeft\" }}\r\n                ticks={[0, 20, 40, 60]}\r\n              />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"trainingCount\"\r\n                name=\"Training Observations\"\r\n                stroke=\"#007bff\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"dpoCount\"\r\n                name=\"Demo Plot Observations\"\r\n                stroke=\"#28a745\"\r\n              />\r\n            </LineChart>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {loading && <p className=\"loading-message\">Loading...</p>}\r\n      {error && <p className=\"error-message\">Error: {error.message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AAList;\r\n"],"names":["GET_AAS","gql","_templateObject","_taggedTemplateLiteral","_ref","_data$getPerformanceB4","selectedProject","_useQuery","useQuery","variables","project_id","loading","error","data","_useState","useState","_useState2","_slicedToArray","selectedAA","setSelectedAA","_useState3","_useState4","selectWidth","setSelectWidth","selectRef","useRef","useEffect","_data$getPerformanceB","current","getPerformanceByAA","length","longestOptionWidth","Math","max","apply","_toConsumableArray","map","aa","name","concat","_jsxs","className","children","_jsx","Select","options","label","value","id","onChange","selectedOption","_data$getPerformanceB2","selectedAAData","find","placeholder","styles","menuPortal","base","_objectSpread","zIndex","menuPortalTarget","document","body","menuPlacement","width","ref","onClick","_data$getPerformanceB3","wsData","forEach","monthlyCounts","mc","push","Name","Date","date","dpoCount","trainingCount","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","BsDownload","LineChart","height","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fontSize","YAxis","angle","position","ticks","Tooltip","Legend","Line","type","stroke","message"],"sourceRoot":""}