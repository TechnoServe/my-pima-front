{"version":3,"file":"static/js/754.89789b51.chunk.js","mappings":"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","sources":["graphql/queries/farmVisitsRequests.js","utils/timezone.js","components/Table/Table.js","features/training-session/ts-detail/sessionimage/Imagecontainer.js","features/farm-visit/FarmVisit.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nconst GET_FARM_VISITS_PER_PROJECT = gql`\n  query GetFarmVisitsByProject($projectId: String!) {\n    getFarmVisitsByProject(project_id: $projectId) {\n      message\n      status\n      farmVisits {\n        fv_id\n        training_group\n        farmer_tns_id\n        household_tns_id\n        farm_visited\n        farmer_trainer\n        date_visited\n        pima_household_id\n        pima_farmer_id\n        gender\n      }\n    }\n  }\n`;\n\nconst GET_FARM_VISITS_PER_TG = gql`\n  query GetFarmVisitsByGroup($tgId: String!) {\n    getFarmVisitsByGroup(tg_id: $tgId) {\n      message\n      status\n      farmVisits {\n        fv_id\n        fv_name\n        training_group\n        training_session\n        tns_id\n        farm_visited\n        household_id\n        farmer_trainer\n        has_training\n        date_visited\n      }\n    }\n  }\n`;\n\nconst GET_FARM_VISITS_PER_TS = gql`\n  query GetFarmVisitsBySession($tsId: String!) {\n    getFarmVisitsBySession(ts_id: $tsId) {\n      message\n      status\n      farmVisits {\n        fv_id\n        fv_name\n        training_group\n        training_session\n        tns_id\n        farm_visited\n        household_id\n        farmer_trainer\n        has_training\n        date_visited\n      }\n    }\n  }\n`;\n\nconst GET_FARM_VISITS_PER_PART = gql`\n  query GetFarmVisitsByParticipant($partId: String!) {\n    getFarmVisitsByParticipant(part_id: $partId) {\n      message\n      status\n      farmVisits {\n        fv_id\n        fv_name\n        training_group\n        training_session\n        farmer_tns_id\n        farm_visited\n        household_id\n        farmer_trainer\n        has_training\n        date_visited\n      }\n    }\n  }\n`;\n\nconst GET_FARM_VISIT_QAs = gql`\n  query GetFVQAsByFarmVisits($fvId: String!) {\n    getFVQAsByFarmVisits(fv_id: $fvId) {\n      message\n      status\n      fvQAs {\n        bp_id\n        fv_id\n        qas {\n          practice_name_id\n          practice_name\n          questions\n          answers\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_QA_IMAGE = gql`\n  mutation UpdateFVQAImageStatus(\n    $bpId: String!\n    $fieldName: FieldNames!\n    $imageStatus: Status!\n  ) {\n    updateFVQAImageStatus(\n      bp_id: $bpId\n      field_name: $fieldName\n      image_status: $imageStatus\n    ) {\n      message\n      status\n    }\n  }\n`;\n\nconst GET_FVQAS_BY_PROJECT_FOR_REVIEW = gql`\n  query getFVQAsByProjectForReview(\n    $projectId: String!\n    $limit: Int!\n    $offset: Int!\n  ) {\n    getFVQAsByProjectForReview(\n      project_id: $projectId\n      limit: $limit\n      offset: $offset\n    ) {\n      message\n      status\n      farmVisits {\n        fv_id\n        training_group\n        training_session\n        tns_id\n        farm_visited\n        household_id\n        farmer_trainer\n        has_training\n        date_visited\n        status\n        qas {\n          practice_name_id\n          practice_name\n          questions\n          answers\n        }\n      }\n    }\n  }\n`;\n\nconst GET_FVQAS_BY_PROJECT_IN_EXCEL = gql`\n  query getFVQAsByProjectInExcel($projectId: String!, $practiceName: String!) {\n    getFVQAsByProjectInExcel(\n      project_id: $projectId\n      practice_name: $practiceName\n    ) {\n      message\n      status\n      file\n    }\n  }\n`;\n\nconst GET_OVERALL_REPORT = gql`\n  query getFVQAsByProjectInExcel($projectId: String!, $practiceName: String!) {\n    getFVQAsByProjectInExcel(\n      project_id: $projectId\n      practice_name: $practiceName\n    ) {\n      message\n      status\n      file\n    }\n  }\n`;\n\nconst UPLOAD_APPROVED_FV = gql`\n  mutation UploadParticipants($partsFile: Upload!) {\n    uploadParticipants(parts_file: $partsFile) {\n      message\n      status\n    }\n  }\n`;\n\nconst GET_SAMPLED_VISITS_STATS = gql`\n  query GetSampledVisitsStats($projectId: String!) {\n    getSampledVisitsStats(projectId: $projectId) {\n      totalSampledVisits\n      totalReviewed\n      remainingVisits\n    }\n  }\n`;\n\nconst GET_BEST_PRACTICE_STATS = gql`\n  query GetBestPracticeStats($projectId: String!, $practiceName: String!) {\n    getBestPracticeReviewStats(\n      projectId: $projectId\n      practiceName: $practiceName\n    ) {\n      reviewedVisits\n      remainingVisits\n      totalVisits\n    }\n  }\n`;\n\nconst GET_PAGINATED_REVIEWS = gql`\n  query GetPaginatedReviews(\n    $projectId: String!\n    $practiceName: String!\n    $page: Int!\n    $pageSize: Int!\n  ) {\n    getPaginatedReviews(\n      projectId: $projectId\n      practiceName: $practiceName\n      page: $page\n      pageSize: $pageSize\n    ) {\n      visit_id\n      sf_visit_id\n      farmer_name\n      farmer_pima_id\n      farmer_tns_id\n      date_visited\n      farmer_trainer\n      BestPractices {\n        practice_id\n        practice_name\n        image_url\n        sf_practice_id\n        question\n        answer\n      }\n    }\n  }\n`;\n\nconst GENERATE_FARM_VISIT_REPORT = gql`\n  query GenerateFarmVisitReport($projectId: String!) {\n    generateFarmVisitReport(projectId: $projectId) {\n      message\n      status\n      file\n    }\n  }\n`;\n\nconst SUBMIT_BATCH_APPROVED_VISITS = gql`\n  mutation SubmitBatch($input: [BatchInput!]!) {\n    submitBatch(input: $input) {\n      success\n      message\n    }\n  }\n`;\n\nconst SUBMIT_BATCH = gql`\n  mutation SubmitBatch($input: [BatchInput!]!) {\n    submitBatch(input: $input) {\n      success\n      message\n    }\n  }\n`;\n\nexport {\n  GET_FARM_VISITS_PER_PROJECT,\n  GET_FARM_VISITS_PER_TG,\n  GET_FARM_VISITS_PER_TS,\n  GET_FARM_VISITS_PER_PART,\n  GET_FARM_VISIT_QAs,\n  GET_FVQAS_BY_PROJECT_FOR_REVIEW,\n  GET_FVQAS_BY_PROJECT_IN_EXCEL,\n  GET_OVERALL_REPORT,\n  GET_PAGINATED_REVIEWS,\n  GET_BEST_PRACTICE_STATS,\n  GET_SAMPLED_VISITS_STATS,\n  GENERATE_FARM_VISIT_REPORT,\n  SUBMIT_BATCH_APPROVED_VISITS,\n  SUBMIT_BATCH,\n  UPLOAD_APPROVED_FV,\n  UPDATE_QA_IMAGE,\n};\n","const TimeZone = () => {\n  // Get the current date and time\n  const now = new Date();\n\n  // Get the user's timezone\n  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  // Format the date and time according to the user's timezone\n  const formattedDate = now.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  });\n\n  const formattedTime = now.toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    timeZone: userTimezone,\n  });\n\n  // Output the date and time\n  return `${formattedDate}_at_${formattedTime}`;\n};\n\nexport default TimeZone;\n","import { useState, useEffect } from \"react\";\nimport \"./table.css\";\n// import FilterContainer from \"../Filter/FilterContainer\";\nimport { useNavigate } from \"react-router-dom\";\nimport DataTable from \"react-data-table-component\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport { Button } from \"@mui/material\";\nimport { FaFileExport } from \"react-icons/fa\";\n// import { ExportToCsv, generateCsv } from \"export-to-csv\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { utils, writeFile } from \"xlsx\";\nimport { useQuery } from \"@apollo/client\";\nimport TimeZone from \"../../utils/timezone\";\n// import FVQAModal from \"../Modals/FVQAModal\";\nimport Imagecontainer from \"../../features/training-session/ts-detail/sessionimage/Imagecontainer\";\nimport { GET_TRAINING_SESSION_IMAGE } from \"../../graphql/queries/trainingSessionsRequests\";\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: \"30px\",\n      cursor: \"pointer\",\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: \"8px\",\n      paddingRight: \"8px\",\n      backgroundColor: \"#1b2a4e\" /* Matching sidebar color */,\n      color: \"white\",\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: \"5px\",\n      paddingRight: \"5px\",\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\",\n    },\n  },\n};\n\n// Export Buttons Component\nconst ExportButtons = ({\n  handleCSVExport,\n  handleExcelExport,\n  tableRowItem,\n}) => (\n  <div className=\"export-buttons\">\n    {tableRowItem !== \"trainsessionapprov\" && (\n      <Button\n        variant=\"outlined\"\n        sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\n        onClick={handleCSVExport}\n      >\n        <FaFileExport style={{ marginRight: \"5px\" }} /> CSV\n      </Button>\n    )}\n    <Button\n      variant=\"outlined\"\n      sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\n      onClick={handleExcelExport}\n    >\n      <FaFileExport style={{ marginRight: \"5px\" }} />\n      {tableRowItem !== \"trainsessionapprov\" ? \"Excel\" : \"Download Report\"}\n    </Button>\n  </div>\n);\n\nconst Table = ({\n  columns,\n  data,\n  filter,\n  // setFilter,\n  // setFilteredGroups,\n  // setFilteredSessions,\n  tableRowItem,\n  allAttendances,\n  // details,\n  selectedProject,\n}) => {\n  const pathName = tableRowItem || window.location.pathname.split(\"/\")[2];\n  const [rowDetails, setRowDetails] = useState({ ts_id: null });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [session_image, setSession_image] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [fvId, setFvId] = useState(null);\n  const navigate = useNavigate();\n\n  const imageData = useQuery(GET_TRAINING_SESSION_IMAGE, {\n    variables: { tsId: rowDetails && rowDetails.ts_id ? rowDetails.ts_id : \"\" },\n    skip: !rowDetails,\n  });\n\n  // Restore original filename variable\n  const filename =\n    pathName === \"traingroup\"\n      ? \"mypima_training_group\"\n      : pathName === \"trainsession\"\n      ? \"mypima_training_session\"\n      : pathName === \"participants\"\n      ? \"Participants Data\"\n      : pathName === \"farmvisit\"\n      ? \"mypima_farm_visit\"\n      : \"mypima_attendance\";\n\n  useEffect(() => {\n    if (\n      !imageData.loading &&\n      imageData.data?.trainingSessionImage?.status === 200\n    ) {\n      setLoading(false);\n      setSession_image(\n        imageData.data.trainingSessionImage.trainingSessionImage\n      );\n    }\n  }, [imageData]);\n\n  const handleOpenModal = () => {\n    setModalOpen(true);\n  };\n\n  // const handleCloseModal = () => {\n  //   setModalOpen(false);\n  // };\n\n  const handleRowClick = (row) => {\n    setRowDetails(row);\n\n    const idMapping = {\n      trainsession: row.ts_id,\n      traingroup: row.tg_id,\n      participants: row.p_id,\n      farmvisit: row.fv_ids,\n      trainsessionapprov: row.ts_id,\n    };\n\n    const id = idMapping[tableRowItem] || row.attendance_id;\n\n    if (tableRowItem !== \"farmvisit\" && tableRowItem !== \"trainsessionapprov\") {\n      navigate(`/in/${tableRowItem}/${id}`);\n    } else if (tableRowItem === \"farmvisit\") {\n      setFvId(row.fv_id);\n      handleOpenModal();\n    } else if (tableRowItem === \"trainsessionapprov\") {\n      setOpen(true);\n      setLoading(true);\n    }\n  };\n\n  const handleSearch = (e) => {\n    const value = e.target.value.toLowerCase();\n    const filteredItems = data.filter((item) =>\n      columns.some((column) => {\n        const field = item[column.id];\n        return field?.toString().toLowerCase().includes(value);\n      })\n    );\n    setFilteredData(filteredItems);\n    setSearchText(e.target.value);\n  };\n\n  const handleCSVExport = () => {\n    if (!data || data.length === 0) {\n      alert(\"No data available for export.\");\n      return;\n    }\n\n    let updatedColumns = [...columns];\n\n    // Add new columns if pathName is \"farmvisit\"\n    if (pathName === \"farmvisit\") {\n      const newColumns = [\n        { id: \"household_tns_id\" },\n        { id: \"pima_farmer_id\" },\n        { id: \"pima_household_id\" },\n      ];\n      updatedColumns = [...updatedColumns, ...newColumns];\n    }\n\n    const partsHeaders = [\n      \"num\",\n      \"Project\",\n      \"first_name\",\n      \"middle_name\",\n      \"last_name\",\n      \"gender\",\n      \"age\",\n      \"coffee_tree_numbers\",\n      \"number_of_coffee_plots\",\n      \"phone_number\",\n      selectedProject === \"a0EOj000002FMGnMAO\" ||\n      selectedProject === \"a0EOj000002C7ivMAC\"\n        ? \"national_identification_id\"\n        : selectedProject === \"a0EOj000003E0knMAC\"\n        ? \"growers_number\"\n        : \"coop_membership_number\",\n      \"location\",\n      \"farmer_sf_id\",\n      \"tns_id\",\n      \"hh_number\",\n      \"sf_household_id\",\n      \"farmer_number\",\n      \"ffg_id\",\n      \"training_group\",\n      \"status\",\n      \"farmer_trainer\",\n      selectedProject === \"a0EOj000003E0knMAC\"\n        ? \"agronomy_advisor\"\n        : \"business_advisor\",\n      \"create_in_commcare\",\n    ];\n\n    if (tableRowItem === \"participants\") {\n      const monthlyAttendanceMap = new Map();\n      const filteredAttendances = allAttendances.filter((attendance) =>\n        data.some(\n          (participant) => participant.p_id === attendance.participant_id\n        )\n      );\n\n      filteredAttendances.forEach((attendance) => {\n        const {\n          attendance_status,\n          participant_id,\n          module_number,\n          module_name,\n          module_id,\n        } = attendance;\n\n        const key = `${module_number}-${module_name}-${module_id}`;\n\n        if (!monthlyAttendanceMap.has(key)) {\n          monthlyAttendanceMap.set(key, {});\n        }\n\n        const monthlyAttendance = monthlyAttendanceMap.get(key);\n        monthlyAttendance[participant_id] =\n          attendance_status === \"Present\" ? \"1\" : \"0\";\n      });\n\n      for (const [monthKey] of monthlyAttendanceMap) {\n        partsHeaders.push(monthKey);\n      }\n\n      const csvRows =\n        searchText.length > 0\n          ? filteredData.map((participant) => {\n              const rowData = { ...participant };\n              for (const [\n                monthKey,\n                monthlyAttendance,\n              ] of monthlyAttendanceMap) {\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\n              }\n              return rowData;\n            })\n          : data.map((participant) => {\n              const rowData = { ...participant };\n              for (const [\n                monthKey,\n                monthlyAttendance,\n              ] of monthlyAttendanceMap) {\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\n              }\n              return rowData;\n            });\n\n      data = csvRows;\n    }\n\n    // Remove unnecessary keys from the data\n    const sanitizedData = data.map(\n      ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\n        rest\n    );\n\n    // Step 1: Create the configuration for CSV\n    const config = mkConfig({\n      // fieldSeparator: \",\",\n      // quoteStrings: '\"',\n      // decimalSeparator: \".\",\n      // showLabels: true,\n      // useBom: true,\n      filename: filename,\n      columnHeaders: tableRowItem === \"participants\" ? partsHeaders : updatedColumns.map((column) => column.id)\n    });\n\n    // Step 2: Generate CSV string content\n    const csvContent = generateCsv(config)(sanitizedData);\n\n    if (!csvContent) {\n      console.error(\"Output is empty. Is your data formatted correctly?\");\n      return;\n    }\n\n    // Step 3: Trigger CSV file download\n    download(config)(csvContent);\n    console.log(\"Download successful\");\n\n    console.log(\"Config:\", config);\n    console.log(\"Data:\", data);\n    console.log(\"CSV Content:\", csvContent);\n  };\n\n  const handleExcelExport = () => {\n    const sheetName = \"Sessions Data\";\n    const summarySheetName = \"Summary by Trainer\";\n\n    const sessionsData = {\n      header: columns.map((column) => column.id),\n      body: data.map(\n        ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\n          Object.values(rest)\n      ),\n    };\n\n    const trainerSummary = data.reduce(\n      (acc, { farmer_trainer, session_image_status }) => {\n        const key = `${farmer_trainer}_${session_image_status}`;\n        if (!acc[key]) {\n          acc[key] = { farmer_trainer, session_image_status, count: 0 };\n        }\n        acc[key].count += 1;\n        return acc;\n      },\n      {}\n    );\n\n    const summaryData = Object.values(trainerSummary);\n\n    const trainerSummaryData = {\n      header: [\"farmer_trainer\", \"session_image_status\", \"count\"],\n      body: summaryData.map((data) => Object.values(data)),\n    };\n\n    const workbook = utils.book_new();\n    const sessionsWorksheet = utils.json_to_sheet(\n      [sessionsData.header, ...sessionsData.body],\n      { skipHeader: true }\n    );\n    const summaryWorksheet = utils.json_to_sheet(\n      [trainerSummaryData.header, ...trainerSummaryData.body],\n      { skipHeader: true }\n    );\n\n    utils.book_append_sheet(workbook, summaryWorksheet, summarySheetName);\n    utils.book_append_sheet(workbook, sessionsWorksheet, sheetName);\n\n    writeFile(workbook, `${filename}_${TimeZone()}.xlsx`);\n  };\n\n  return (\n    <div>\n      <div className={`table-header-actions ${!filter ? \"no-filter\" : \"\"}`}>\n        {/* Filter Button (if filter exists) */}\n        {filter && <Button className=\"filter-button\">Filter</Button>}\n\n        {/* Search and Export Buttons */}\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n          }}\n        >\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchText}\n              onChange={handleSearch}\n            />\n            <span className=\"search-icon\">\n              <BiSearchAlt />\n            </span>\n          </div>\n\n          {/* Export Buttons */}\n          <ExportButtons\n            handleCSVExport={handleCSVExport}\n            handleExcelExport={handleExcelExport}\n            tableRowItem={tableRowItem}\n          />\n        </div>\n      </div>\n\n      <DataTable\n        columns={columns}\n        data={searchText.length > 0 ? filteredData : data}\n        onRowClicked={handleRowClick}\n        pagination\n        highlightOnHover\n        customStyles={customStyles}\n        className=\"table-container\"\n      />\n\n      {/* TODO: REIMPLEMENT THIS */}\n      {/* <FVQAModal\n        open={modalOpen}\n        handleClose={handleCloseModal}\n        fvId={fvId}\n        details={details}\n        rowDetails={rowDetails}\n      /> */}\n\n      {open && (\n        <Imagecontainer\n          open={open}\n          handleClose={() => setOpen(false)}\n          id={rowDetails.ts_id}\n          data={rowDetails}\n          isVerified={rowDetails.is_verified}\n          imageStatus={rowDetails.session_image_status}\n          sessionImageUrl={session_image}\n          selectedProject={selectedProject}\n          loading={loading}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  // Button,\n  DialogContent,\n  // DialogActions,\n  IconButton,\n  Typography,\n  Grid,\n  CircularProgress,\n} from \"@mui/material\";\nimport { MdClose, MdFullscreen, MdFullscreenExit } from \"react-icons/md\";\nimport { styled } from \"@mui/material/styles\";\n// import { useMutation, useQuery } from \"@apollo/client\";\n// import {\n//   GET_TRAINING_SESSIONS_PER_PROJECT,\n//   VALIDATE_TRAINING_SESSION,\n// } from \"../../../graphql/queries/trainingSessionsRequests\";\n// import { toast } from \"react-hot-toast\";\n// import { BeatLoader } from \"react-spinners\";\n\n// const StyledButton = styled(Button)(({ theme }) => ({\n//   marginBottom: \"10px\",\n//   marginRight: \"10px\",\n//   textTransform: \"initial\",\n//   backgroundColor: \"rgba(23, 177, 94, 1)\",\n//   color: \"#fff\",\n//   fontSize: \"12px\",\n\n//   \"&:hover\": {\n//     backgroundColor: \"rgba(23, 177, 94, 0.5)\",\n//     transition: \"background-color 0.3s ease-in-out\",\n//   },\n// }));\n\n// const StyledButton2 = styled(Button)(({ theme }) => ({\n//   marginBottom: \"10px\",\n//   marginRight: \"10px\",\n//   textTransform: \"initial\",\n//   fontSize: \"12px\",\n//   color: \"rgba(200, 27, 27, 1)\",\n//   borderColor: \"rgba(200, 27, 27, 1)\",\n\n//   \"&:hover\": {\n//     backgroundColor: \"rgba(235, 87, 87, 0.1)\",\n//     transition: \"background-color 0.3s ease-in-out\",\n//     borderColor: \"rgba(200, 27, 27, 1)\",\n//   },\n//   \".MuiButton-outlined\": {\n//     color: \"rgba(235, 87, 87, 1)\",\n//   },\n// }));\n\nconst LoadingOverlay = styled(\"div\")({\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n  zIndex: 9999,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nconst Imagecontainer = ({\n  open,\n  handleClose,\n  sessionImageUrl,\n  // id,\n  data,\n  // isVerified,\n  // imageStatus,\n  selectedProject,\n  loading,\n}) => {\n  console.log(data);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isLoading] = useState(false);\n  // const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\n\n  // const [validateSession] = useMutation(VALIDATE_TRAINING_SESSION);\n\n  // const trainingSessionsPerProject = useQuery(\n  //   GET_TRAINING_SESSIONS_PER_PROJECT,\n  //   {\n  //     variables: { sfProjectId: selectedProject },\n  //   }\n  // );\n\n  const toggleExpand = () => {\n    setIsExpanded((prev) => !prev);\n  };\n\n  // const handleSessionValidation = async (id, session_image_status) => {\n  //   setIsLoading(true);\n\n  //   try {\n  //     await validateSession({\n  //       variables: {\n  //         tsId: id,\n  //         status: session_image_status,\n  //       },\n  //     });\n\n  //     // refetch training sessions\n  //     trainingSessionsPerProject\n  //       .refetch()\n  //       .then(() => {\n  //         toast.success(\"Session validated successfully\");\n  //         setIsLoading(false);\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n\n  //         toast.error(\"Error validating session\");\n  //       });\n  //   } catch (error) {\n  //     console.log(error);\n\n  //     toast.error(\"Error validating session\");\n\n  //     setIsLoading(false);\n  //   }\n  // };\n\n  return (\n    <>\n      {loading ? (\n        <Dialog\n          open={open}\n          keepMounted\n          fullWidth\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <div style={{ margin: \"20px\" }}>\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              sx={{\n                position: \"absolute\",\n                right: 8,\n                top: 8,\n                color: \"#2b2b2b\",\n              }}\n            >\n              <MdClose />\n            </IconButton>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100%\",\n            }}\n          >\n            <CircularProgress />\n            <Typography variant=\"h6\" style={{ marginLeft: \"10px\" }}>\n              Loading Image...\n            </Typography>\n          </div>\n        </Dialog>\n      ) : (\n        <Dialog\n          open={open}\n          keepMounted\n          fullWidth\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          {isLoading && (\n            <LoadingOverlay>\n              <CircularProgress />\n            </LoadingOverlay>\n          )}\n          <div style={{ margin: \"20px\" }}>\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              sx={{\n                position: \"absolute\",\n                right: 8,\n                top: 8,\n                color: \"#2b2b2b\",\n              }}\n            >\n              <MdClose />\n            </IconButton>\n            <Typography variant=\"h6\">Session Image</Typography>\n          </div>\n\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body1\">\n                  <strong>Male Attendees:</strong> {data.total_males}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Female Attendees:</strong> {data.total_females}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Total Attendees:</strong>{\" \"}\n                  {data.total_males + data.total_females}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Session Date:</strong> {data.session_date}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Farmer Trainer:</strong> {data.farmer_trainer}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Session Module:</strong> {data.ts_module}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>FFG:</strong> {data.ts_group}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <div style={{ position: \"relative\" }}>\n                  <img\n                    src={sessionImageUrl}\n                    alt=\"session_pic\"\n                    style={{\n                      width: \"100%\",\n                      height: \"auto\",\n                      cursor: isExpanded ? \"zoom-out\" : \"zoom-in\",\n                    }}\n                    onClick={toggleExpand}\n                  />\n                  {isExpanded ? (\n                    <IconButton\n                      aria-label=\"shrink\"\n                      onClick={toggleExpand}\n                      sx={{\n                        position: \"absolute\",\n                        bottom: 8,\n                        right: 8,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <MdFullscreenExit />\n                    </IconButton>\n                  ) : (\n                    <IconButton\n                      aria-label=\"expand\"\n                      onClick={toggleExpand}\n                      sx={{\n                        position: \"absolute\",\n                        bottom: 8,\n                        right: 8,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <MdFullscreen />\n                    </IconButton>\n                  )}\n                </div>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          {/* <DialogActions>\n            {(userDetails?.role === \"super_admin\" ||\n              userDetails?.role === \"ci_leadership\" ||\n              userDetails?.role === \"project_manager\" ||\n              userDetails?.role === \"mel_analyst\") &&\n              (!isVerified || imageStatus === \"not_verified\") && (\n                <>\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"invalid\")} variant=\"outlined\" disabled={isLoading}>\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Invalid\"}\n                  </StyledButton2>\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"unclear\")} variant=\"outlined\" disabled={isLoading}>\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Unclear\"}\n                  </StyledButton2>\n                  <StyledButton onClick={() => handleSessionValidation(id, \"approved\")} disabled={isLoading}>\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Approve\"}\n                  </StyledButton>\n                </>\n              )}\n          </DialogActions> */}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default Imagecontainer;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_FARM_VISITS_PER_PROJECT } from \"../../graphql/queries/farmVisitsRequests\";\nimport Table from \"../../components/Table/Table\";\nimport { toast } from \"react-hot-toast\";\nimport { Typography } from \"@mui/material\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport { useOutletContext } from \"react-router-dom\";\n\nconst FarmVisit = () => {\n\n  const { activeProject } = useOutletContext();\n\n  const [farmVisits, setFarmVisits] = useState([]);\n  const { data, error, loading } = useQuery(GET_FARM_VISITS_PER_PROJECT, {\n    variables: { projectId: activeProject },\n  });\n\n  useEffect(() => {\n    if (data) {\n      const farmVisitsData = data.getFarmVisitsByProject;\n      setFarmVisits(\n        farmVisitsData.status === 200 ? farmVisitsData.farmVisits : []\n      );\n    }\n\n    if (error) {\n      toast.error(error.message);\n    }\n  }, [data, error]);\n\n  const columns = [\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\n    {\n      id: \"training_group\",\n      name: \"TG Name\",\n      selector: (row) => row.training_group,\n      sortable: true,\n    },\n    {\n      id: \"farmer_tns_id\",\n      name: \"TNS Farmer ID\",\n      selector: (row) => row.farmer_tns_id,\n      sortable: true,\n    },\n    {\n      id: \"farm_visited\",\n      name: \"Farm Visited\",\n      selector: (row) => row.farm_visited,\n      sortable: true,\n    },\n    {\n      id: \"gender\",\n      name: \"Gender\",\n      selector: (row) => row.gender,\n      sortable: true,\n    },\n    {\n      id: \"farmer_trainer\",\n      name: \"Farmer Trainer\",\n      selector: (row) => row.farmer_trainer,\n      sortable: true,\n    },\n    {\n      id: \"date_visited\",\n      name: \"Date Visited\",\n      selector: (row) => row.date_visited,\n      sortable: true,\n    },\n  ];\n  const tableRowItem = \"farmvisit\";\n\n  const rows = farmVisits\n    ? farmVisits.map((fv, index) => ({\n        num: index + 1,\n        fv_id: fv.fv_id,\n        fv_name: fv.fv_name,\n        training_group: fv.training_group,\n        training_session: fv.training_session,\n        tg_tns_id: fv.tg_tns_id,\n        farmer_tns_id: fv.farmer_tns_id,\n        household_tns_id: fv.household_tns_id,\n        pima_household_id: fv.pima_household_id,\n        pima_farmer_id: fv.pima_farmer_id,\n        farm_visited: fv.farm_visited,\n        household_id: fv.household_id,\n        farmer_trainer: fv.farmer_trainer,\n        has_training: fv.has_training,\n        date_visited: fv.date_visited,\n        gender: fv.gender,\n      }))\n    : [];\n\n  if (error)\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <Typography color=\"error\">Error loading data</Typography>\n      </div>\n    );\n\n  return (\n    <div className=\"page__container\">\n      <h1 className=\"module__heading\">Farm Visits View</h1>\n      {loading ? (\n        <LoadingScreen />\n      ) : farmVisits.length > 0 ? (\n        <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\n      ) : (\n        <div className=\"no__data\">\n          <h1 style={{ fontSize: \"20px\" }}>No Farm Visit Yet</h1>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FarmVisit;\n"],"names":["GET_FARM_VISITS_PER_PROJECT","gql","GET_FARM_VISITS_PER_TG","GET_FARM_VISITS_PER_PART","GET_SAMPLED_VISITS_STATS","GET_BEST_PRACTICE_STATS","GET_PAGINATED_REVIEWS","GENERATE_FARM_VISIT_REPORT","SUBMIT_BATCH","TimeZone","now","Date","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","second","customStyles","rows","style","minHeight","cursor","headCells","paddingLeft","paddingRight","backgroundColor","color","cells","paddingTop","paddingBottom","ExportButtons","_ref","handleCSVExport","handleExcelExport","tableRowItem","_jsxs","className","children","Button","variant","sx","borderColor","onClick","_jsx","FaFileExport","marginRight","_ref2","columns","data","filter","allAttendances","selectedProject","pathName","window","location","pathname","split","rowDetails","setRowDetails","useState","ts_id","open","setOpen","loading","setLoading","session_image","setSession_image","searchText","setSearchText","filteredData","setFilteredData","modalOpen","setModalOpen","fvId","setFvId","navigate","useNavigate","imageData","useQuery","GET_TRAINING_SESSION_IMAGE","variables","tsId","skip","filename","useEffect","_imageData$data","_imageData$data$train","trainingSessionImage","status","display","alignItems","justifyContent","width","type","placeholder","value","onChange","e","target","toLowerCase","filteredItems","item","some","column","field","id","toString","includes","BiSearchAlt","length","alert","updatedColumns","newColumns","partsHeaders","monthlyAttendanceMap","Map","attendance","participant","p_id","participant_id","forEach","attendance_status","module_number","module_name","module_id","key","has","set","get","monthKey","push","csvRows","map","rowData","monthlyAttendance","sanitizedData","_ref3","tg_id","attendance_id","fv_id","__typename","rest","config","mkConfig","columnHeaders","csvContent","generateCsv","download","console","log","error","sessionsData","header","body","_ref4","Object","values","trainerSummary","reduce","acc","_ref5","farmer_trainer","session_image_status","count","trainerSummaryData","workbook","utils","book_new","sessionsWorksheet","json_to_sheet","skipHeader","summaryWorksheet","book_append_sheet","writeFile","DataTable","onRowClicked","row","trainsession","traingroup","participants","farmvisit","fv_ids","trainsessionapprov","pagination","highlightOnHover","Imagecontainer","handleClose","isVerified","is_verified","imageStatus","sessionImageUrl","LoadingOverlay","styled","position","top","left","right","bottom","zIndex","isExpanded","setIsExpanded","isLoading","toggleExpand","prev","_Fragment","Dialog","keepMounted","fullWidth","margin","IconButton","MdClose","height","CircularProgress","Typography","marginLeft","DialogContent","Grid","container","spacing","xs","sm","total_males","total_females","session_date","ts_module","ts_group","src","alt","MdFullscreenExit","MdFullscreen","FarmVisit","activeProject","useOutletContext","farmVisits","setFarmVisits","projectId","farmVisitsData","getFarmVisitsByProject","toast","message","fv","index","num","fv_name","training_group","training_session","tg_tns_id","farmer_tns_id","household_tns_id","pima_household_id","pima_farmer_id","farm_visited","household_id","has_training","date_visited","gender","LoadingScreen","Table","name","selector","sortable","fontSize"],"sourceRoot":""}