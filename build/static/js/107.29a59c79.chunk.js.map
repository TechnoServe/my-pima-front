{"version":3,"file":"static/js/107.29a59c79.chunk.js","mappings":"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","sources":["utils/timezone.js","components/Table/Table.js","features/training-session/ts-detail/sessionimage/Imagecontainer.js","features/training-group/tgdetail/Detailscontent.js","features/training-group/tgdetail/Tgtabdetail.js","features/training-group/tgdetail/tstabtable.js","features/training-group/tgdetail/fvtabtable.js","features/training-group/tgdetail/partstabtable.js","features/training-group/tgdetail/Tgtabs.js","components/Breadcrumbs.js"],"sourcesContent":["const TimeZone = () => {\r\n  // Get the current date and time\r\n  const now = new Date();\r\n\r\n  // Get the user's timezone\r\n  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n  // Format the date and time according to the user's timezone\r\n  const formattedDate = now.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n\r\n  const formattedTime = now.toLocaleTimeString(\"en-US\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    timeZone: userTimezone,\r\n  });\r\n\r\n  // Output the date and time\r\n  return `${formattedDate}_at_${formattedTime}`;\r\n};\r\n\r\nexport default TimeZone;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./table.css\";\r\n// import FilterContainer from \"../Filter/FilterContainer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\nimport { Button } from \"@mui/material\";\r\nimport { FaFileExport } from \"react-icons/fa\";\r\n// import { ExportToCsv, generateCsv } from \"export-to-csv\";\r\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\r\nimport { utils, writeFile } from \"xlsx\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport TimeZone from \"../../utils/timezone\";\r\n// import FVQAModal from \"../Modals/FVQAModal\";\r\nimport Imagecontainer from \"../../features/training-session/ts-detail/sessionimage/Imagecontainer\";\r\nimport { GET_TRAINING_SESSION_IMAGE } from \"../../graphql/queries/trainingSessionsRequests\";\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: \"30px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\",\r\n      backgroundColor: \"#1b2a4e\" /* Matching sidebar color */,\r\n      color: \"white\",\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: \"5px\",\r\n      paddingRight: \"5px\",\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\",\r\n    },\r\n  },\r\n};\r\n\r\n// Export Buttons Component\r\nconst ExportButtons = ({\r\n  handleCSVExport,\r\n  handleExcelExport,\r\n  tableRowItem,\r\n}) => (\r\n  <div className=\"export-buttons\">\r\n    {tableRowItem !== \"trainsessionapprov\" && (\r\n      <Button\r\n        variant=\"outlined\"\r\n        sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\r\n        onClick={handleCSVExport}\r\n      >\r\n        <FaFileExport style={{ marginRight: \"5px\" }} /> CSV\r\n      </Button>\r\n    )}\r\n    <Button\r\n      variant=\"outlined\"\r\n      sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\r\n      onClick={handleExcelExport}\r\n    >\r\n      <FaFileExport style={{ marginRight: \"5px\" }} />\r\n      {tableRowItem !== \"trainsessionapprov\" ? \"Excel\" : \"Download Report\"}\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst Table = ({\r\n  columns,\r\n  data,\r\n  filter,\r\n  // setFilter,\r\n  // setFilteredGroups,\r\n  // setFilteredSessions,\r\n  tableRowItem,\r\n  allAttendances,\r\n  // details,\r\n  selectedProject,\r\n}) => {\r\n  const pathName = tableRowItem || window.location.pathname.split(\"/\")[2];\r\n  const [rowDetails, setRowDetails] = useState({ ts_id: null });\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [session_image, setSession_image] = useState(null);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [fvId, setFvId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const imageData = useQuery(GET_TRAINING_SESSION_IMAGE, {\r\n    variables: { tsId: rowDetails && rowDetails.ts_id ? rowDetails.ts_id : \"\" },\r\n    skip: !rowDetails,\r\n  });\r\n\r\n  // Restore original filename variable\r\n  const filename =\r\n    pathName === \"traingroup\"\r\n      ? \"mypima_training_group\"\r\n      : pathName === \"trainsession\"\r\n      ? \"mypima_training_session\"\r\n      : pathName === \"participants\"\r\n      ? \"Participants Data\"\r\n      : pathName === \"farmvisit\"\r\n      ? \"mypima_farm_visit\"\r\n      : \"mypima_attendance\";\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !imageData.loading &&\r\n      imageData.data?.trainingSessionImage?.status === 200\r\n    ) {\r\n      setLoading(false);\r\n      setSession_image(\r\n        imageData.data.trainingSessionImage.trainingSessionImage\r\n      );\r\n    }\r\n  }, [imageData]);\r\n\r\n  const handleOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // const handleCloseModal = () => {\r\n  //   setModalOpen(false);\r\n  // };\r\n\r\n  const handleRowClick = (row) => {\r\n    setRowDetails(row);\r\n\r\n    const idMapping = {\r\n      trainsession: row.ts_id,\r\n      traingroup: row.tg_id,\r\n      participants: row.p_id,\r\n      farmvisit: row.fv_ids,\r\n      trainsessionapprov: row.ts_id,\r\n    };\r\n\r\n    const id = idMapping[tableRowItem] || row.attendance_id;\r\n\r\n    if (tableRowItem !== \"farmvisit\" && tableRowItem !== \"trainsessionapprov\") {\r\n      navigate(`/in/${tableRowItem}/${id}`);\r\n    } else if (tableRowItem === \"farmvisit\") {\r\n      setFvId(row.fv_id);\r\n      handleOpenModal();\r\n    } else if (tableRowItem === \"trainsessionapprov\") {\r\n      setOpen(true);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value.toLowerCase();\r\n    const filteredItems = data.filter((item) =>\r\n      columns.some((column) => {\r\n        const field = item[column.id];\r\n        return field?.toString().toLowerCase().includes(value);\r\n      })\r\n    );\r\n    setFilteredData(filteredItems);\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const handleCSVExport = () => {\r\n    if (!data || data.length === 0) {\r\n      alert(\"No data available for export.\");\r\n      return;\r\n    }\r\n\r\n    let updatedColumns = [...columns];\r\n\r\n    // Add new columns if pathName is \"farmvisit\"\r\n    if (pathName === \"farmvisit\") {\r\n      const newColumns = [\r\n        { id: \"household_tns_id\" },\r\n        { id: \"pima_farmer_id\" },\r\n        { id: \"pima_household_id\" },\r\n      ];\r\n      updatedColumns = [...updatedColumns, ...newColumns];\r\n    }\r\n\r\n    const partsHeaders = [\r\n      \"num\",\r\n      \"Project\",\r\n      \"first_name\",\r\n      \"middle_name\",\r\n      \"last_name\",\r\n      \"gender\",\r\n      \"age\",\r\n      \"coffee_tree_numbers\",\r\n      \"number_of_coffee_plots\",\r\n      \"phone_number\",\r\n      selectedProject === \"a0EOj000002FMGnMAO\" ||\r\n      selectedProject === \"a0EOj000002C7ivMAC\"\r\n        ? \"national_identification_id\"\r\n        : selectedProject === \"a0EOj000003E0knMAC\"\r\n        ? \"growers_number\"\r\n        : \"coop_membership_number\",\r\n      \"location\",\r\n      \"farmer_sf_id\",\r\n      \"tns_id\",\r\n      \"hh_number\",\r\n      \"sf_household_id\",\r\n      \"farmer_number\",\r\n      \"ffg_id\",\r\n      \"training_group\",\r\n      \"status\",\r\n      \"farmer_trainer\",\r\n      selectedProject === \"a0EOj000003E0knMAC\"\r\n        ? \"agronomy_advisor\"\r\n        : \"business_advisor\",\r\n      \"create_in_commcare\",\r\n    ];\r\n\r\n    if (tableRowItem === \"participants\") {\r\n      const monthlyAttendanceMap = new Map();\r\n      const filteredAttendances = allAttendances.filter((attendance) =>\r\n        data.some(\r\n          (participant) => participant.p_id === attendance.participant_id\r\n        )\r\n      );\r\n\r\n      filteredAttendances.forEach((attendance) => {\r\n        const {\r\n          attendance_status,\r\n          participant_id,\r\n          module_number,\r\n          module_name,\r\n          module_id,\r\n        } = attendance;\r\n\r\n        const key = `${module_number}-${module_name}-${module_id}`;\r\n\r\n        if (!monthlyAttendanceMap.has(key)) {\r\n          monthlyAttendanceMap.set(key, {});\r\n        }\r\n\r\n        const monthlyAttendance = monthlyAttendanceMap.get(key);\r\n        monthlyAttendance[participant_id] =\r\n          attendance_status === \"Present\" ? \"1\" : \"0\";\r\n      });\r\n\r\n      for (const [monthKey] of monthlyAttendanceMap) {\r\n        partsHeaders.push(monthKey);\r\n      }\r\n\r\n      const csvRows =\r\n        searchText.length > 0\r\n          ? filteredData.map((participant) => {\r\n              const rowData = { ...participant };\r\n              for (const [\r\n                monthKey,\r\n                monthlyAttendance,\r\n              ] of monthlyAttendanceMap) {\r\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\r\n              }\r\n              return rowData;\r\n            })\r\n          : data.map((participant) => {\r\n              const rowData = { ...participant };\r\n              for (const [\r\n                monthKey,\r\n                monthlyAttendance,\r\n              ] of monthlyAttendanceMap) {\r\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\r\n              }\r\n              return rowData;\r\n            });\r\n\r\n      data = csvRows;\r\n    }\r\n\r\n    // Remove unnecessary keys from the data\r\n    const sanitizedData = data.map(\r\n      ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\r\n        rest\r\n    );\r\n\r\n    // Step 1: Create the configuration for CSV\r\n    const config = mkConfig({\r\n      // fieldSeparator: \",\",\r\n      // quoteStrings: '\"',\r\n      // decimalSeparator: \".\",\r\n      // showLabels: true,\r\n      // useBom: true,\r\n      filename: filename,\r\n      columnHeaders: tableRowItem === \"participants\" ? partsHeaders : updatedColumns.map((column) => column.id)\r\n    });\r\n\r\n    // Step 2: Generate CSV string content\r\n    const csvContent = generateCsv(config)(sanitizedData);\r\n\r\n    if (!csvContent) {\r\n      console.error(\"Output is empty. Is your data formatted correctly?\");\r\n      return;\r\n    }\r\n\r\n    // Step 3: Trigger CSV file download\r\n    download(config)(csvContent);\r\n  };\r\n\r\n  const handleExcelExport = () => {\r\n    const sheetName = \"Sessions Data\";\r\n    const summarySheetName = \"Summary by Trainer\";\r\n\r\n    const sessionsData = {\r\n      header: columns.map((column) => column.id),\r\n      body: data.map(\r\n        ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\r\n          Object.values(rest)\r\n      ),\r\n    };\r\n\r\n    const trainerSummary = data.reduce(\r\n      (acc, { farmer_trainer, session_image_status }) => {\r\n        const key = `${farmer_trainer}_${session_image_status}`;\r\n        if (!acc[key]) {\r\n          acc[key] = { farmer_trainer, session_image_status, count: 0 };\r\n        }\r\n        acc[key].count += 1;\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n\r\n    const summaryData = Object.values(trainerSummary);\r\n\r\n    const trainerSummaryData = {\r\n      header: [\"farmer_trainer\", \"session_image_status\", \"count\"],\r\n      body: summaryData.map((data) => Object.values(data)),\r\n    };\r\n\r\n    const workbook = utils.book_new();\r\n    const sessionsWorksheet = utils.json_to_sheet(\r\n      [sessionsData.header, ...sessionsData.body],\r\n      { skipHeader: true }\r\n    );\r\n    const summaryWorksheet = utils.json_to_sheet(\r\n      [trainerSummaryData.header, ...trainerSummaryData.body],\r\n      { skipHeader: true }\r\n    );\r\n\r\n    utils.book_append_sheet(workbook, summaryWorksheet, summarySheetName);\r\n    utils.book_append_sheet(workbook, sessionsWorksheet, sheetName);\r\n\r\n    writeFile(workbook, `${filename}_${TimeZone()}.xlsx`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`table-header-actions ${!filter ? \"no-filter\" : \"\"}`}>\r\n        {/* Filter Button (if filter exists) */}\r\n        {filter && <Button className=\"filter-button\">Filter</Button>}\r\n\r\n        {/* Search and Export Buttons */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              value={searchText}\r\n              onChange={handleSearch}\r\n            />\r\n            <span className=\"search-icon\">\r\n              <BiSearchAlt />\r\n            </span>\r\n          </div>\r\n\r\n          {/* Export Buttons */}\r\n          <ExportButtons\r\n            handleCSVExport={handleCSVExport}\r\n            handleExcelExport={handleExcelExport}\r\n            tableRowItem={tableRowItem}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <DataTable\r\n        columns={columns}\r\n        data={searchText.length > 0 ? filteredData : data}\r\n        onRowClicked={handleRowClick}\r\n        pagination\r\n        highlightOnHover\r\n        customStyles={customStyles}\r\n        className=\"table-container\"\r\n      />\r\n\r\n      {/* TODO: REIMPLEMENT THIS */}\r\n      {/* <FVQAModal\r\n        open={modalOpen}\r\n        handleClose={handleCloseModal}\r\n        fvId={fvId}\r\n        details={details}\r\n        rowDetails={rowDetails}\r\n      /> */}\r\n\r\n      {open && (\r\n        <Imagecontainer\r\n          open={open}\r\n          handleClose={() => setOpen(false)}\r\n          id={rowDetails.ts_id}\r\n          data={rowDetails}\r\n          isVerified={rowDetails.is_verified}\r\n          imageStatus={rowDetails.session_image_status}\r\n          sessionImageUrl={session_image}\r\n          selectedProject={selectedProject}\r\n          loading={loading}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  // Button,\r\n  DialogContent,\r\n  // DialogActions,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { MdClose, MdFullscreen, MdFullscreenExit } from \"react-icons/md\";\r\nimport { styled } from \"@mui/material/styles\";\r\n// import { useMutation, useQuery } from \"@apollo/client\";\r\n// import {\r\n//   GET_TRAINING_SESSIONS_PER_PROJECT,\r\n//   VALIDATE_TRAINING_SESSION,\r\n// } from \"../../../graphql/queries/trainingSessionsRequests\";\r\n// import { toast } from \"react-hot-toast\";\r\n// import { BeatLoader } from \"react-spinners\";\r\n\r\n// const StyledButton = styled(Button)(({ theme }) => ({\r\n//   marginBottom: \"10px\",\r\n//   marginRight: \"10px\",\r\n//   textTransform: \"initial\",\r\n//   backgroundColor: \"rgba(23, 177, 94, 1)\",\r\n//   color: \"#fff\",\r\n//   fontSize: \"12px\",\r\n\r\n//   \"&:hover\": {\r\n//     backgroundColor: \"rgba(23, 177, 94, 0.5)\",\r\n//     transition: \"background-color 0.3s ease-in-out\",\r\n//   },\r\n// }));\r\n\r\n// const StyledButton2 = styled(Button)(({ theme }) => ({\r\n//   marginBottom: \"10px\",\r\n//   marginRight: \"10px\",\r\n//   textTransform: \"initial\",\r\n//   fontSize: \"12px\",\r\n//   color: \"rgba(200, 27, 27, 1)\",\r\n//   borderColor: \"rgba(200, 27, 27, 1)\",\r\n\r\n//   \"&:hover\": {\r\n//     backgroundColor: \"rgba(235, 87, 87, 0.1)\",\r\n//     transition: \"background-color 0.3s ease-in-out\",\r\n//     borderColor: \"rgba(200, 27, 27, 1)\",\r\n//   },\r\n//   \".MuiButton-outlined\": {\r\n//     color: \"rgba(235, 87, 87, 1)\",\r\n//   },\r\n// }));\r\n\r\nconst LoadingOverlay = styled(\"div\")({\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"rgba(255, 255, 255, 0.7)\",\r\n  zIndex: 9999,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n});\r\n\r\nconst Imagecontainer = ({\r\n  open,\r\n  handleClose,\r\n  sessionImageUrl,\r\n  // id,\r\n  data,\r\n  // isVerified,\r\n  // imageStatus,\r\n  selectedProject,\r\n  loading,\r\n}) => {\r\n  console.log(data);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [isLoading] = useState(false);\r\n  // const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\r\n\r\n  // const [validateSession] = useMutation(VALIDATE_TRAINING_SESSION);\r\n\r\n  // const trainingSessionsPerProject = useQuery(\r\n  //   GET_TRAINING_SESSIONS_PER_PROJECT,\r\n  //   {\r\n  //     variables: { sfProjectId: selectedProject },\r\n  //   }\r\n  // );\r\n\r\n  const toggleExpand = () => {\r\n    setIsExpanded((prev) => !prev);\r\n  };\r\n\r\n  // const handleSessionValidation = async (id, session_image_status) => {\r\n  //   setIsLoading(true);\r\n\r\n  //   try {\r\n  //     await validateSession({\r\n  //       variables: {\r\n  //         tsId: id,\r\n  //         status: session_image_status,\r\n  //       },\r\n  //     });\r\n\r\n  //     // refetch training sessions\r\n  //     trainingSessionsPerProject\r\n  //       .refetch()\r\n  //       .then(() => {\r\n  //         toast.success(\"Session validated successfully\");\r\n  //         setIsLoading(false);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n\r\n  //         toast.error(\"Error validating session\");\r\n  //       });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n\r\n  //     toast.error(\"Error validating session\");\r\n\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Dialog\r\n          open={open}\r\n          keepMounted\r\n          fullWidth\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <div style={{ margin: \"20px\" }}>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: \"#2b2b2b\",\r\n              }}\r\n            >\r\n              <MdClose />\r\n            </IconButton>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n            <Typography variant=\"h6\" style={{ marginLeft: \"10px\" }}>\r\n              Loading Image...\r\n            </Typography>\r\n          </div>\r\n        </Dialog>\r\n      ) : (\r\n        <Dialog\r\n          open={open}\r\n          keepMounted\r\n          fullWidth\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          {isLoading && (\r\n            <LoadingOverlay>\r\n              <CircularProgress />\r\n            </LoadingOverlay>\r\n          )}\r\n          <div style={{ margin: \"20px\" }}>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: \"#2b2b2b\",\r\n              }}\r\n            >\r\n              <MdClose />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">Session Image</Typography>\r\n          </div>\r\n\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Male Attendees:</strong> {data.total_males}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Female Attendees:</strong> {data.total_females}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Total Attendees:</strong>{\" \"}\r\n                  {data.total_males + data.total_females}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Session Date:</strong> {data.session_date}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Farmer Trainer:</strong> {data.farmer_trainer}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Session Module:</strong> {data.ts_module}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>FFG:</strong> {data.ts_group}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <div style={{ position: \"relative\" }}>\r\n                  <img\r\n                    src={sessionImageUrl}\r\n                    alt=\"session_pic\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"auto\",\r\n                      cursor: isExpanded ? \"zoom-out\" : \"zoom-in\",\r\n                    }}\r\n                    onClick={toggleExpand}\r\n                  />\r\n                  {isExpanded ? (\r\n                    <IconButton\r\n                      aria-label=\"shrink\"\r\n                      onClick={toggleExpand}\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        bottom: 8,\r\n                        right: 8,\r\n                        color: \"#fff\",\r\n                      }}\r\n                    >\r\n                      <MdFullscreenExit />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <IconButton\r\n                      aria-label=\"expand\"\r\n                      onClick={toggleExpand}\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        bottom: 8,\r\n                        right: 8,\r\n                        color: \"#fff\",\r\n                      }}\r\n                    >\r\n                      <MdFullscreen />\r\n                    </IconButton>\r\n                  )}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          {/* <DialogActions>\r\n            {(userDetails?.role === \"super_admin\" ||\r\n              userDetails?.role === \"ci_leadership\" ||\r\n              userDetails?.role === \"project_manager\" ||\r\n              userDetails?.role === \"mel_analyst\") &&\r\n              (!isVerified || imageStatus === \"not_verified\") && (\r\n                <>\r\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"invalid\")} variant=\"outlined\" disabled={isLoading}>\r\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Invalid\"}\r\n                  </StyledButton2>\r\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"unclear\")} variant=\"outlined\" disabled={isLoading}>\r\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Unclear\"}\r\n                  </StyledButton2>\r\n                  <StyledButton onClick={() => handleSessionValidation(id, \"approved\")} disabled={isLoading}>\r\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Approve\"}\r\n                  </StyledButton>\r\n                </>\r\n              )}\r\n          </DialogActions> */}\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imagecontainer;\r\n","import React from 'react'\r\nimport './tgdetail.css'\r\nimport { LiaCircleSolid } from 'react-icons/lia'\r\n\r\nconst Detailscontent = ({ heading, paragraph }) => {\r\n  return (\r\n    <div className='details__content'>\r\n      <LiaCircleSolid color='#3A57E8' />\r\n      <div className='details__content2'>\r\n        <p className='details__para'>{heading}</p>\r\n        <p className='details__para2'>{paragraph}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detailscontent\r\n","import React from 'react'\r\nimport { Paper } from '@mui/material'\r\nimport './tgdetail.css'\r\nimport Detailscontent from './Detailscontent'\r\n\r\nconst Tgtabdetail = ({ details }) => {\r\n  return (\r\n    <div>\r\n      <Paper elevation={1} sx={{ maxWidth: '30%' }}>\r\n        <div className='details__title'>{details.tg_name}</div>\r\n        <div style={{ padding: '10px', paddingLeft: '20px' }}>\r\n          <Detailscontent\r\n            heading={'# of Registered Farmers'}\r\n            paragraph={details.total_participants !== null ? details.total_participants : 'N/A'}\r\n          />\r\n\r\n          <Detailscontent heading={'Business Advisor'} paragraph={details.business_advisor} />\r\n          <Detailscontent heading={'Farmer Trainer'} paragraph={details.farmer_trainer} />\r\n          <Detailscontent heading={'TNS ID'} paragraph={details.tns_id || 'N/A'} />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tgtabdetail\r\n","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../../components/Table/Table\";\r\n\r\nconst Tstabtable = ({ trainingSessions }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"ts_module\",\r\n      name: \"Session Name\",\r\n      grow: 2,\r\n      selector: (row) => row.ts_module,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"ts_module\",\r\n    //   name: \"Training Month\",\r\n    //   grow: 2,\r\n    //   selector: (row) => row.ts_module,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_males\",\r\n      name: \"MA\",\r\n      selector: (row) => row.total_males,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_females\",\r\n      name: \"FA\",\r\n      selector: (row) => row.total_females,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"is_verified\",\r\n      name: \"Is Session Verified?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.is_verified ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_image_status\",\r\n      name: \"Session Image Status\",\r\n      grow: 2,\r\n      selector: (row) => (\r\n        <div>\r\n          {!row.is_verified ? (\r\n            <Chip\r\n              label={\"not_verified\"}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              title={\"not_verified\"}\r\n            />\r\n          ) : row.session_image_status === \"approved\" ? (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          ) : (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"error\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_date\",\r\n      name: \"Session Date\",\r\n      selector: (row) => row.session_date,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"trainsession\";\r\n\r\n  const rows = trainingSessions\r\n    ? trainingSessions.map((trainingSession, index) => ({\r\n        num: index + 1,\r\n        ts_id: trainingSession.ts_id,\r\n        ts_name: trainingSession.ts_name,\r\n        ts_module: trainingSession.ts_module,\r\n        tns_id: trainingSession.tns_id || \"N/A\",\r\n        farmer_trainer: trainingSession.farmer_trainer || \"N/A\",\r\n        ts_status: trainingSession.ts_status,\r\n        total_males: trainingSession.total_males,\r\n        total_females: trainingSession.total_females,\r\n        has_image: trainingSession.has_image,\r\n        is_verified: trainingSession.is_verified,\r\n        session_image_status: trainingSession.session_image_status,\r\n        session_date: trainingSession.session_date || \"N/A\",\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabtable;\r\n","import React from \"react\";\r\nimport Table from \"../../../components/Table/Table\";\r\n\r\nconst FvTabTable = ({ details, farmVisits }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"FFG Name\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farm_visited\",\r\n      name: \"Farm Visited\",\r\n      selector: (row) => row.farm_visited,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"household_id\",\r\n    //   name: \"Household Id\",\r\n    //   selector: (row) => row.household_id,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"date_visited\",\r\n      name: \"Date Visited\",\r\n      selector: (row) => row.date_visited,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"farmvisit\";\r\n\r\n  const rows = farmVisits\r\n    ? farmVisits.map((fv, index) => ({\r\n        num: index + 1,\r\n        fv_id: fv.fv_id,\r\n        fv_name: fv.fv_name,\r\n        training_group: fv.training_group,\r\n        training_session: fv.training_session,\r\n        tns_id: fv.tns_id,\r\n        farm_visited: fv.farm_visited,\r\n        household_id: fv.household_id,\r\n        farmer_trainer: fv.farmer_trainer,\r\n        has_training: fv.has_training,\r\n        date_visited: fv.date_visited,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={rows}\r\n        tableRowItem={tableRowItem}\r\n        details={details}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FvTabTable;\r\n","import React from \"react\";\r\nimport Table from \"../../../components/Table/Table\";\r\n\r\nconst PartsTabTable = ({ participants }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"full_name\",\r\n      name: \"Full Name\",\r\n      selector: (row) => row.full_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"gender\",\r\n      name: \"Gender\",\r\n      selector: (row) => row.gender,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"location\",\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"business_advisor\",\r\n      name: \"Business Advisor\",\r\n      selector: (row) => row.business_advisor,\r\n      sortable: true,\r\n    },\r\n  ];\r\n  const tableRowItem = \"participants\";\r\n\r\n  const rows = participants\r\n    ? participants.map((participant, index) => ({\r\n        num: index + 1,\r\n        p_id: participant.p_id,\r\n        full_name: `${participant.first_name} ${\r\n          participant.middle_name !== 'null' ? participant.middle_name : \" \"\r\n        } ${participant.last_name}`,\r\n        gender: participant.gender === \"m\"? \"Male\" : \"Female\",\r\n        location: participant.location,\r\n        tns_id: participant.tns_id,\r\n        status: participant.status,\r\n        farmer_trainer: participant.farmer_trainer,\r\n        business_advisor: participant.business_advisor,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartsTabTable;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport Tgtabdetail from \"./Tgtabdetail\";\r\nimport Tstabtable from \"./tstabtable\";\r\nimport FvTabTable from \"./fvtabtable\";\r\nimport PartsTabTable from \"./partstabtable\";\r\n\r\nexport function CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Tgtabs({\r\n  details,\r\n  trainingSessions,\r\n  farmVisits,\r\n  participants,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab label=\"FFG Details\" {...a11yProps(0)} />\r\n          <Tab label=\"FFG sessions\" {...a11yProps(1)} />\r\n          <Tab label=\"FFG Farm Visits\" {...a11yProps(2)} />\r\n          <Tab label=\"FFG Participants\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <CustomTabPanel value={value} index={0}>\r\n        <Tgtabdetail details={details} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <Tstabtable trainingSessions={trainingSessions} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={2}>\r\n        <FvTabTable farmVisits={farmVisits} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={3}>\r\n        <PartsTabTable participants={participants} />\r\n      </CustomTabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Breadcrumbs } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst CustomLink = styled(Link)(({ theme }) => ({\r\n  textDecoration: \"none\",\r\n  color: \"inherit\",\r\n  transition: \"color 0.3s ease-in-out\",\r\n  \"&:hover\": {\r\n    color: \"#25245D\",\r\n    fontWeight: \"600\",\r\n  },\r\n}));\r\n\r\nconst Breadcrumb = ({ name, firstItem, linkTo }) => {\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        sx={{ fontSize: \"12px\", cursor: \"pointer\" }}\r\n      >\r\n        <CustomLink to={`/in/${linkTo}`}>{firstItem}</CustomLink>\r\n        <CustomLink href=\"\" aria-current=\"page\">\r\n          {name\r\n            .split(\" \")\r\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join(\" \")}\r\n        </CustomLink>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"names":["TimeZone","now","Date","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","second","customStyles","rows","style","minHeight","cursor","headCells","paddingLeft","paddingRight","backgroundColor","color","cells","paddingTop","paddingBottom","ExportButtons","_ref","handleCSVExport","handleExcelExport","tableRowItem","_jsxs","className","children","Button","variant","sx","borderColor","onClick","_jsx","FaFileExport","marginRight","_ref2","columns","data","filter","allAttendances","selectedProject","pathName","window","location","pathname","split","rowDetails","setRowDetails","useState","ts_id","open","setOpen","loading","setLoading","session_image","setSession_image","searchText","setSearchText","filteredData","setFilteredData","modalOpen","setModalOpen","fvId","setFvId","navigate","useNavigate","imageData","useQuery","GET_TRAINING_SESSION_IMAGE","variables","tsId","skip","filename","useEffect","_imageData$data","_imageData$data$train","trainingSessionImage","status","display","alignItems","justifyContent","width","type","placeholder","value","onChange","e","target","toLowerCase","filteredItems","item","some","column","field","id","toString","includes","BiSearchAlt","length","alert","updatedColumns","newColumns","partsHeaders","monthlyAttendanceMap","Map","attendance","participant","p_id","participant_id","forEach","attendance_status","module_number","module_name","module_id","key","has","set","get","monthKey","push","csvRows","map","rowData","monthlyAttendance","sanitizedData","_ref3","tg_id","attendance_id","fv_id","__typename","rest","config","mkConfig","columnHeaders","csvContent","generateCsv","download","console","error","sessionsData","header","body","_ref4","Object","values","trainerSummary","reduce","acc","_ref5","farmer_trainer","session_image_status","count","trainerSummaryData","workbook","utils","book_new","sessionsWorksheet","json_to_sheet","skipHeader","summaryWorksheet","book_append_sheet","writeFile","DataTable","onRowClicked","row","trainsession","traingroup","participants","farmvisit","fv_ids","trainsessionapprov","pagination","highlightOnHover","Imagecontainer","handleClose","isVerified","is_verified","imageStatus","sessionImageUrl","LoadingOverlay","styled","position","top","left","right","bottom","zIndex","log","isExpanded","setIsExpanded","isLoading","toggleExpand","prev","_Fragment","Dialog","keepMounted","fullWidth","margin","IconButton","MdClose","height","CircularProgress","Typography","marginLeft","DialogContent","Grid","container","spacing","xs","sm","total_males","total_females","session_date","ts_module","ts_group","src","alt","MdFullscreenExit","MdFullscreen","heading","paragraph","LiaCircleSolid","details","Paper","elevation","maxWidth","tg_name","padding","Detailscontent","total_participants","business_advisor","tns_id","trainingSessions","name","selector","num","sortable","grow","Chip","label","title","trainingSession","index","ts_name","ts_status","has_image","Table","farmVisits","fv","fv_name","training_group","training_session","farm_visited","household_id","has_training","date_visited","full_name","first_name","middle_name","last_name","gender","CustomTabPanel","props","other","role","hidden","Box","p","a11yProps","Tgtabs","setValue","marginTop","borderBottom","Tabs","handleChange","event","newValue","Tab","Tgtabdetail","Tstabtable","FvTabTable","PartsTabTable","CustomLink","Link","theme","textDecoration","transition","fontWeight","firstItem","linkTo","Breadcrumbs","fontSize","to","href","word","charAt","toUpperCase","slice","join"],"sourceRoot":""}