{"version":3,"file":"static/js/815.2c74f284.chunk.js","mappings":"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","sources":["graphql/queries/usersRequests.js","graphql/queries/rolesRequests.js","components/Modals/AssignModal.js","components/AssignProjects.js","components/UsersList.js","components/UsersForm.js","pages/Users.js","components/RolesList.js","components/PermissionsList.js","pages/Permissions.js","graphql/queries/permissionsRequests.js","pages/Management.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst GET_ALL_USERS = gql`\r\n  query GetUsers {\r\n    getUsers {\r\n      message\r\n      status\r\n      users {\r\n        user_id\r\n        sf_user_id\r\n        user_name\r\n        user_email\r\n        mobile_no\r\n        account_status\r\n        role {\r\n          role_id\r\n          role_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ADD_USER = gql`\r\n  mutation AddUser(\r\n    $userName: String!\r\n    $userEmail: String!\r\n    $mobileNo: String!\r\n    $userPassword: String!\r\n    $roleId: ID\r\n  ) {\r\n    addUser(\r\n      user_name: $userName\r\n      user_email: $userEmail\r\n      mobile_no: $mobileNo\r\n      user_password: $userPassword\r\n      role_id: $roleId\r\n    ) {\r\n      message\r\n      status\r\n      user {\r\n        user_id\r\n        sf_user_id\r\n        user_name\r\n        user_email\r\n        mobile_no\r\n        role_id\r\n        role {\r\n          role_desc\r\n          role_id\r\n          role_name\r\n          role_status\r\n        }\r\n        account_status\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation UpdateUser(\r\n    $userId: ID!\r\n    $accountStatus: String\r\n    $userEmail: String\r\n    $mobileNo: String\r\n    $userName: String\r\n    $roleId: ID\r\n  ) {\r\n    updateUser(\r\n      user_id: $userId\r\n      account_status: $accountStatus\r\n      user_email: $userEmail\r\n      mobile_no: $mobileNo\r\n      user_name: $userName\r\n      role_id: $roleId\r\n    ) {\r\n      message\r\n      status\r\n      user {\r\n        user_id\r\n        sf_user_id\r\n        user_name\r\n        user_email\r\n        mobile_no\r\n        role_id\r\n        account_status\r\n        role {\r\n          role_id\r\n          role_name\r\n          role_desc\r\n          permissions\r\n          is_default\r\n          role_status\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ALL_USERS, ADD_USER, UPDATE_USER };\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_ALL_ROLES = gql`\r\n  query GetRoles {\r\n    getRoles {\r\n      message\r\n      status\r\n      roles {\r\n        role_id\r\n        role_name\r\n        role_desc\r\n        permissions\r\n        is_default\r\n        role_status\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_USER_ROLE = gql`\r\n  query GetRole($roleId: ID!) {\r\n    getRole(role_id: $roleId) {\r\n      message\r\n      status\r\n      role {\r\n        role_id\r\n        role_desc\r\n        role_name\r\n        role_status\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_ROLE = gql`\r\n  mutation UpdateRole($roleId: ID!, $permissions: [String]) {\r\n    updateRole(role_id: $roleId, permissions: $permissions) {\r\n      message\r\n      status\r\n      role {\r\n        permissions\r\n        role_id\r\n        role_desc\r\n        role_name\r\n        role_status\r\n        is_default\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ALL_ROLES, GET_USER_ROLE, UPDATE_ROLE };\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  FormControl,\r\n  InputBase,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  alpha,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\r\nimport { BiSearchAlt, BiSolidPencil } from \"react-icons/bi\";\r\nimport Select from \"react-select\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  GET_ALL_USERS,\r\n  UPDATE_USER,\r\n} from \"../../graphql/queries/usersRequests\";\r\nimport { GET_ALL_ROLES } from \"../../graphql/queries/rolesRequests\";\r\nimport toast from \"react-hot-toast\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { ADD_PROJECT_ROLE } from \"../../graphql/queries/projectsRequests\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst AssignModal = ({ open, handleClose, title, data, selectedProject }) => {\r\n  const [toggleAdd, setToggleAdd] = useState(false);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedRole, setSelectedRole] = useState(null);\r\n  const [isBeingUpdated, setIsBeingUpdated] = useState(false);\r\n  const [isNew, setIsNew] = useState(false);\r\n  const getAllUsers = useQuery(GET_ALL_USERS);\r\n  const getAllRoles = useQuery(GET_ALL_ROLES);\r\n  const [addProjectRole] = useMutation(ADD_PROJECT_ROLE);\r\n\r\n  const [updateUser] = useMutation(UPDATE_USER);\r\n\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n\r\n    const filtered = data.filter(\r\n      (item) =>\r\n        item.user.user_name.toLowerCase().includes(value.toLowerCase()) ||\r\n        item.role.role_name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n\r\n    setFilteredData(filtered);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredData(data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (getAllUsers.data) {\r\n      setUsers(getAllUsers.data.getUsers.users);\r\n    }\r\n  }, [getAllUsers.data]);\r\n\r\n  useEffect(() => {\r\n    if (getAllRoles.data) {\r\n      setRoles(getAllRoles.data.getRoles.roles);\r\n    }\r\n  }, [getAllRoles.data]);\r\n\r\n  const handleAddUser = async () => {\r\n    if (selectedUser && selectedRole) {\r\n      setIsBeingUpdated(true);\r\n      const { data } = await addProjectRole({\r\n        variables: {\r\n          userId: selectedUser,\r\n          projectId: selectedProject,\r\n          roleId: selectedRole,\r\n        },\r\n      });\r\n\r\n      if (data.addProjectRole.status === 200) {\r\n        toast.success(data.addProjectRole.message);\r\n        setSelectedUser(null);\r\n        setSelectedRole(null);\r\n        setIsBeingUpdated(false);\r\n        setToggleAdd(false);\r\n      } else {\r\n        setIsBeingUpdated(false);\r\n        toast.error(data.addProjectRole.message);\r\n      }\r\n    } else {\r\n      toast.error(\"Please select user and role\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = async () => {\r\n    if (selectedUser && selectedRole) {\r\n      setIsBeingUpdated(true);\r\n      const { data } = await updateUser({\r\n        variables: {\r\n          userId: selectedUser,\r\n          roleId: selectedRole,\r\n        },\r\n      });\r\n\r\n      if (data.updateUser.status === 200) {\r\n        toast.success(data.updateUser.message);\r\n        setSelectedUser(null);\r\n        setSelectedRole(null);\r\n        setIsBeingUpdated(false);\r\n        setToggleAdd(false);\r\n      } else {\r\n        setIsBeingUpdated(false);\r\n        toast.error(data.updateUser.message);\r\n      }\r\n    } else {\r\n      toast.error(\"Please select user and role\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle fontSize={\"18px\"}>\r\n        <Chip\r\n          label={data.length}\r\n          style={{\r\n            color: \"#333\",\r\n          }}\r\n          variant=\"contained\"\r\n        />{\" \"}\r\n        Users Assigned to{\" \"}\r\n        <Chip label={title} color=\"primary\" variant=\"contained\" />\r\n        <Divider />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {toggleAdd ? (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FormControl sx={{ width: \"100%\" }}>\r\n              <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\r\n                Select User\r\n              </Typography>\r\n              <Select\r\n                name=\"user\"\r\n                defaultValue={\r\n                  !isNew\r\n                    ? {\r\n                        value: selectedUser,\r\n                        label: users.find(\r\n                          (item) => item.user_id === selectedUser\r\n                        ).user_name,\r\n                      }\r\n                    : null\r\n                }\r\n                options={\r\n                  users.length > 0\r\n                    ? users.map((item) => ({\r\n                        value: item.user_id,\r\n                        label: item.user_name,\r\n                      }))\r\n                    : []\r\n                }\r\n                onChange={(e) => {\r\n                  setSelectedUser(e.value);\r\n                }}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n              />\r\n            </FormControl>\r\n            <FormControl sx={{ width: \"100%\", marginTop: \"10px\" }}>\r\n              <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\r\n                Select Role\r\n              </Typography>\r\n              <Select\r\n                name=\"role\"\r\n                defaultValue={\r\n                  !isNew\r\n                    ? {\r\n                        value: selectedRole,\r\n                        label: roles.find(\r\n                          (item) => item.role_id === selectedRole\r\n                        ).role_name,\r\n                      }\r\n                    : null\r\n                }\r\n                options={\r\n                  roles.length > 0\r\n                    ? roles.map((item) => ({\r\n                        value: item.role_id,\r\n                        label: item.role_name,\r\n                      }))\r\n                    : []\r\n                }\r\n                onChange={(e) => {\r\n                  setSelectedRole(e.value);\r\n                }}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n              />\r\n            </FormControl>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                width: \"100%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ marginTop: \"10px\", marginRight: \"10px\" }}\r\n                onClick={isNew ? handleAddUser : handleUpdateUser}\r\n                disabled={isBeingUpdated}\r\n              >\r\n                {isBeingUpdated ? (\r\n                  <BeatLoader color={\"#fff\"} loading={true} size={10} />\r\n                ) : isNew ? (\r\n                  \"Save\"\r\n                ) : (\r\n                  \"Modify\"\r\n                )}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                sx={{ marginTop: \"10px\" }}\r\n                onClick={() => {\r\n                  setSelectedUser(null);\r\n                  setSelectedRole(null);\r\n                  setToggleAdd(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <List>\r\n            {/* add search field */}\r\n            <ListItem\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                padding: \"5px 0\",\r\n              }}\r\n            >\r\n              <Search onChange={handleSearch}>\r\n                <SearchIconWrapper>\r\n                  <BiSearchAlt />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                  placeholder=\"Search any…\"\r\n                  inputProps={{ \"aria-label\": \"search\" }}\r\n                />\r\n              </Search>\r\n            </ListItem>\r\n\r\n            {filteredData.length > 0 ? (\r\n              filteredData.map((item, index) => (\r\n                <ListItem\r\n                  key={index}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    padding: \"5px 0\",\r\n                  }}\r\n                >\r\n                  <ListItemText\r\n                    primary={item.user ? item.user.user_name : \"N/A\"}\r\n                  />\r\n                  <Chip\r\n                    label={item.role ? item.role.role_name : \"N/A\"}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    sx={{ marginRight: \"10px\" }}\r\n                  />\r\n                  <ListItemIcon\r\n                    children={\r\n                      <BiSolidPencil\r\n                        size={20}\r\n                        color={\"gray\"}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setSelectedUser(item.user.user_id);\r\n                          setSelectedRole(item.role.role_id);\r\n                          setToggleAdd(true);\r\n                          setIsNew(false);\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                  <ListItemIcon\r\n                    children={<AiOutlineMinusCircle size={20} color={\"red\"} />}\r\n                  />\r\n                </ListItem>\r\n              ))\r\n            ) : (\r\n              <Typography\r\n                style={{\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                No users assigned to this project\r\n              </Typography>\r\n            )}\r\n          </List>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {!toggleAdd && (\r\n          <Button\r\n            onClick={() => {\r\n              setToggleAdd(true);\r\n              setIsNew(true);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Add New\r\n          </Button>\r\n        )}\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AssignModal;\r\n","import React, { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { CardActionArea, CardActions, Grid } from \"@mui/material\";\r\nimport { GrFormView } from \"react-icons/gr\";\r\nimport AssignModal from \"./Modals/AssignModal\";\r\nimport { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GET_PROJECT_ROLES_BY_PROJECT_ID } from \"../graphql/queries/projectsRequests\";\r\n\r\nconst Styles = {\r\n  marginTop: \"15px\",\r\n  fontWeight: \"400\",\r\n  color: \"rgba(125, 127, 136, 1)\",\r\n  fontSize: \"12px\",\r\n  maxWidth: \"80%\",\r\n};\r\n\r\nconst AssignProjects = ({ allProjects }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n  const [getProjectRolesByProjectId, { data }] = useLazyQuery(\r\n    GET_PROJECT_ROLES_BY_PROJECT_ID\r\n  );\r\n\r\n  const handleOpenModal = async (project) => {\r\n    await getProjectRolesByProjectId({\r\n      variables: {\r\n        projectId: project.project_id,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.getProjectRolesByProjectId) {\r\n      const { project_role } = data.getProjectRolesByProjectId;\r\n      setList(project_role);\r\n      setTitle(project_role[0].project.project_name);\r\n      setSelectedProject(project_role[0].project.project_id);\r\n      setOpen(true);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: \"10px 0 15px 0\" }}>\r\n        <h1>Projects Assignment</h1>\r\n        <p style={Styles}>\r\n          In the project assignment page you can assign projects to users.\r\n        </p>\r\n      </div>\r\n      {allProjects && allProjects.length > 0 ? (\r\n        <Grid container spacing={2}>\r\n          {allProjects.map((project) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={project.project_id}>\r\n              <Card sx={{ maxWidth: 250 }}>\r\n                <CardActionArea>\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"div\">\r\n                      {project.project_name}\r\n                    </Typography>\r\n                    <Typography variant=\"body4\" color=\"text.secondary\">\r\n                      SF Id: <em>{project.sf_project_id}</em>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <GrFormView\r\n                    size={30}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => handleOpenModal(project)}\r\n                  />\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <p>No projects found</p>\r\n      )}\r\n\r\n      <AssignModal\r\n        open={open}\r\n        handleClose={() => setOpen(false)}\r\n        data={list}\r\n        title={title}\r\n        selectedProject={selectedProject}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignProjects;\r\n","// UsersList.js\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Divider,\r\n  InputBase,\r\n  Typography,\r\n  alpha,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst UsersList = ({ users, onSelect }) => {\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n\r\n    const filtered = users.filter(\r\n      (item) =>\r\n        item.user_name.toLowerCase().includes(value.toLowerCase()) ||\r\n        (item.user_email &&\r\n          item.user_email.toLowerCase().includes(value.toLowerCase())) ||\r\n        (item.mobile_no &&\r\n          item.mobile_no.toLowerCase().includes(value.toLowerCase())) ||\r\n        (item.sf_user_id &&\r\n          item.sf_user_id.toLowerCase().includes(value.toLowerCase())) ||\r\n        (item.role.role_name &&\r\n          item.role.role_name.toLowerCase().includes(value.toLowerCase()))\r\n    );\r\n\r\n    setFilteredUsers(filtered);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(users);\r\n  }, [users]);\r\n\r\n  return (\r\n    <>\r\n      <Search onChange={handleSearch}>\r\n        <SearchIconWrapper>\r\n          <BiSearchAlt />\r\n        </SearchIconWrapper>\r\n        <StyledInputBase\r\n          placeholder=\"Search user…\"\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </Search>\r\n      <div\r\n        style={{\r\n          height: \"calc(100vh - 200px)\",\r\n          overflowY: \"scroll\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        {filteredUsers.length > 0 ? (\r\n          filteredUsers.map((user) => (\r\n            <Card key={user.id} sx={{ marginBottom: 2 }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">\r\n                  {user.user_name}\r\n                  <Chip\r\n                    label={user.role.role_name}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    sx={{ marginLeft: \"10px\" }}\r\n                  />\r\n                  {user.account_status !== \"active\" && (\r\n                    <Chip\r\n                      label={user.account_status}\r\n                      color={\"error\"}\r\n                      variant=\"contained\"\r\n                      sx={{ marginLeft: \"5px\" }}\r\n                    />\r\n                  )}\r\n                </Typography>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"subtitle2\">Email:</Typography>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {user.user_email || \"N/A\"}\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"subtitle2\">Mobile No.:</Typography>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {user.mobile_no || \"N/A\"}\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"subtitle2\">SF Id:</Typography>\r\n                  <Typography variant=\"subtitle1\">{user.sf_user_id}</Typography>\r\n                </Box>\r\n                {/* <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"subtitle2\">\r\n                    Project Belongs To:\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\">{user.project}</Typography>\r\n                </Box> */}\r\n                <Divider />\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <BsPencilSquare\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    title=\"Edit User\"\r\n                    onClick={() => onSelect(user)}\r\n                  />\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"em\" align=\"center\">\r\n            Please wait while we fetch users...\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","// UsersForm.js\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { ADD_USER, UPDATE_USER } from \"../graphql/queries/usersRequests\";\r\nimport { GET_ALL_ROLES } from \"../graphql/queries/rolesRequests\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst UsersForm = ({ onSubmit, selectedUser, onSelect }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [selectedRole, setSelectedRole] = useState(null);\r\n  const [userInfo, setUserInfo] = useState({\r\n    userName: \"\",\r\n    userEmail: \"\",\r\n    mobileNo: \"\",\r\n    roleId: \"\",\r\n    accountStatus: \"active\",\r\n  });\r\n\r\n  const [updateUser] = useMutation(UPDATE_USER);\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const getRoles = useQuery(GET_ALL_ROLES);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getRoles.data &&\r\n      getRoles.data.getRoles &&\r\n      getRoles.data.getRoles.roles &&\r\n      getRoles.data.getRoles.roles.length > 0\r\n    ) {\r\n      const roles = getRoles.data.getRoles.roles.map((role) => {\r\n        return {\r\n          value: role.role_id,\r\n          label: role.role_name,\r\n        };\r\n      });\r\n\r\n      setRoles(roles);\r\n\r\n      if (selectedUser) {\r\n        const selectedRole = roles.find(\r\n          (role) => role.value === selectedUser.role.role_id\r\n        );\r\n\r\n        setSelectedRole(selectedRole);\r\n      }\r\n    }\r\n  }, [getRoles.data]);\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      setUserInfo({\r\n        userName: selectedUser.user_name,\r\n        userEmail: selectedUser.user_email || \"\",\r\n        mobileNo: selectedUser.mobile_no || \"\",\r\n        roleId: selectedUser.role.role_id,\r\n        accountStatus: selectedUser.account_status,\r\n      });\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    if (selectedUser) {\r\n      const { data } = await updateUser({\r\n        variables: {\r\n          userId: selectedUser.user_id,\r\n          accountStatus: userInfo.accountStatus,\r\n          userEmail: userInfo.userEmail,\r\n          mobileNo: userInfo.mobileNo,\r\n          userName: userInfo.userName,\r\n          roleId: userInfo.roleId,\r\n        },\r\n      });\r\n\r\n      if (data && data.updateUser && data.updateUser.status === 200) {\r\n        toast.success(\"User updated successfully\");\r\n\r\n        onSubmit(data.updateUser.user);\r\n      } else {\r\n        toast.error(data.updateUser.message);\r\n      }\r\n    } else {\r\n      const { data } = await addUser({\r\n        variables: {\r\n          userEmail: userInfo.userEmail,\r\n          mobileNo: userInfo.mobileNo,\r\n          userName: userInfo.userName,\r\n          roleId: userInfo.roleId,\r\n          userPassword: \"MP@1234\",\r\n        },\r\n      });\r\n\r\n      if (data && data.addUser && data.addUser.status === 201) {\r\n        toast.success(\"User added successfully\");\r\n        onSubmit(data.addUser.user);\r\n      } else {\r\n        toast.error(data.addUser.message);\r\n      }\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h5\" sx={{ marginBottom: \"20px\" }}>\r\n        {selectedUser ? \"Edit User\" : \"Add User\"}\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          value={userInfo.userName}\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, userName: e.target.value })\r\n          }\r\n          variant=\"standard\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          value={userInfo.userEmail}\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, userEmail: e.target.value })\r\n          }\r\n          variant=\"standard\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Mobile No.\"\r\n          value={userInfo.mobileNo}\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, mobileNo: e.target.value })\r\n          }\r\n          variant=\"standard\"\r\n          fullWidth\r\n        />\r\n        <Box sx={{ marginTop: \"10px\" }}>\r\n          <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\r\n            Role\r\n          </Typography>\r\n          <Select\r\n            name=\"role\"\r\n            value={selectedRole}\r\n            options={roles}\r\n            onChange={(e) => {\r\n              setSelectedRole(e);\r\n              setUserInfo({ ...userInfo, roleId: e.value });\r\n            }}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n        </Box>\r\n        {selectedUser && (\r\n          <Box sx={{ marginTop: \"10px\" }}>\r\n            <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\r\n              Account Status\r\n            </Typography>\r\n            <Select\r\n              name=\"status\"\r\n              value={{\r\n                value: userInfo.accountStatus,\r\n                label: userInfo.accountStatus,\r\n              }}\r\n              options={[\r\n                { value: \"active\", label: \"Active\" },\r\n                { value: \"inactive\", label: \"Inactive\" },\r\n              ]}\r\n              onChange={(e) =>\r\n                setUserInfo({ ...userInfo, accountStatus: e.value })\r\n              }\r\n              className=\"basic-multi-select\"\r\n              classNamePrefix=\"select\"\r\n            />\r\n          </Box>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{\r\n            marginTop: \"20px\",\r\n          }}\r\n          disabled={isLoading || !userInfo.userName || !userInfo.roleId}\r\n        >\r\n          {selectedUser ? \"Modify\" : \"Save New\"}\r\n        </Button>\r\n        {selectedUser && (\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"standard\"\r\n            color=\"secondary\"\r\n            style={{\r\n              marginTop: \"20px\",\r\n              marginLeft: \"20px\",\r\n            }}\r\n            onClick={() => {\r\n              onSelect(null);\r\n              setUserInfo({\r\n                userName: \"\",\r\n                userEmail: \"\",\r\n                mobileNo: \"\",\r\n                roleId: \"\",\r\n                accountStatus: \"active\",\r\n              });\r\n            }}\r\n            disabled={isLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UsersForm;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport UsersForm from \"../components/UsersForm\";\r\n\r\nconst Users = ({ users, setUsers }) => {\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  const handleUserSelect = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleUserSubmit = (user) => {\r\n    if (user.user_id) {\r\n      const updatedUsers = users.map((u) => {\r\n        if (u.user_id === user.user_id) {\r\n          return user;\r\n        }\r\n\r\n        return u;\r\n      });\r\n\r\n      setUsers(updatedUsers);\r\n    } else {\r\n      const newUsers = [...users, user];\r\n      setUsers(newUsers);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        {!users || users.length < 1 ? (\r\n          <Typography variant=\"h6\">No users found</Typography>\r\n        ) : (\r\n          <UsersList users={users} onSelect={handleUserSelect} />\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={1} />\r\n      <Grid item xs={5}>\r\n        <UsersForm\r\n          onSubmit={handleUserSubmit}\r\n          selectedUser={selectedUser}\r\n          onSelect={handleUserSelect}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\nconst RolesList = ({ roles, onSelectRole }) => {\r\n  const [selectedRole, setSelectedRole] = useState(0);\r\n\r\n  const handleRoleChange = (event, newValue) => {\r\n    setSelectedRole(newValue);\r\n    onSelectRole(roles[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      orientation=\"vertical\"\r\n      variant=\"scrollable\"\r\n      value={selectedRole}\r\n      onChange={handleRoleChange}\r\n    >\r\n      {roles.map((role, index) => (\r\n        <Tab\r\n          key={index}\r\n          label={role.role_name\r\n            .replace(/_/g, \" \")\r\n            .replace(/\\b\\w/g, (l) => l.toUpperCase())}\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            fontSize: \".8rem\",\r\n          }}\r\n          title={role.role_desc}\r\n        />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default RolesList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@mui/material\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { UPDATE_ROLE } from \"../graphql/queries/rolesRequests\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst PermissionsList = ({ roles, role, permissions, setRoles }) => {\r\n  const [selectedPermission, setSelectedPermission] = useState(\r\n    role.permissions[0]\r\n  );\r\n\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n  const [updateRole] = useMutation(UPDATE_ROLE);\r\n\r\n  const handlePermissionChange = (event) => {\r\n    setSelectedPermission(event.target.value);\r\n  };\r\n\r\n  const handlePermissionsUpdate = async () => {\r\n    setSaveLoading(true);\r\n\r\n    await updateRole({\r\n      variables: {\r\n        roleId: role.role_id,\r\n        permissions: [selectedPermission],\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.updateRole.status === 200) {\r\n          setRoles((prevRoles) => {\r\n            const newRoles = [...prevRoles];\r\n            const index = newRoles.findIndex(\r\n              (newRole) => newRole.role_id === role.role_id\r\n            );\r\n\r\n            role.permissions = [selectedPermission];\r\n            newRoles[index] = role;\r\n\r\n            return newRoles;\r\n          });\r\n\r\n          setSaveLoading(false);\r\n\r\n          toast.success(\"Permissions updated successfully!\");\r\n        } else {\r\n          setSaveLoading(false);\r\n\r\n          toast.error(\"Something went wrong! Please try again.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n        toast.error(\"Something went wrong! Please try again.\");\r\n        setSaveLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedPermission(role.permissions[0]);\r\n  }, [role]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <FormControl>\r\n        <FormLabel\r\n          id=\"demo-radio-buttons-group-label\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1rem\",\r\n            color: \"#000000\",\r\n          }}\r\n        >\r\n          Permissions for{\" \"}\r\n          {role.role_name\r\n            .replace(/_/g, \" \")\r\n            .replace(/\\b\\w/g, (l) => l.toUpperCase())}\r\n        </FormLabel>\r\n        <RadioGroup\r\n          aria-labelledby=\"demo-radio-buttons-group-label\"\r\n          name=\"radio-buttons-group\"\r\n        >\r\n          {permissions &&\r\n            permissions.length > 0 &&\r\n            permissions.map((permission) => (\r\n              <FormControlLabel\r\n                key={permission.perm_id}\r\n                value={permission.perm_id}\r\n                control={\r\n                  <Radio\r\n                    onChange={handlePermissionChange}\r\n                    name={permission.perm_name}\r\n                    checked={selectedPermission === permission.perm_id}\r\n                  />\r\n                }\r\n                label={permission.perm_name}\r\n              />\r\n            ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        sx={{ width: \"150px\", mt: 5 }}\r\n        onClick={handlePermissionsUpdate}\r\n        disabled={selectedPermission === role.permissions[0] || saveLoading}\r\n      >\r\n        Save Changes\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PermissionsList;\r\n","// Permissions.js\r\nimport React, { useState } from \"react\";\r\nimport RolesList from \"../components/RolesList\";\r\nimport PermissionsList from \"../components/PermissionsList\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst Permissions = ({ permissions, roles, setRoles }) => {\r\n  const [selectedRole, setSelectedRole] = useState(roles[0]);\r\n\r\n  const handleRoleSelect = (role) => {\r\n    setSelectedRole(role);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={3}>\r\n        <RolesList roles={roles} onSelectRole={handleRoleSelect} />\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <PermissionsList\r\n          roles={roles}\r\n          setRoles={setRoles}\r\n          role={selectedRole}\r\n          permissions={permissions}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Permissions;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_ALL_PERMISSIONS = gql`\r\n  query GetPermissions {\r\n    getPermissions {\r\n      message\r\n      status\r\n      permissions {\r\n        perm_id\r\n        perm_name\r\n        perm_desc\r\n        perm_status\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ALL_PERMISSIONS };\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport AssignProjects from \"../components/AssignProjects\";\r\nimport Users from \"./Users\";\r\nimport Permissions from \"./Permissions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_ALL_USERS } from \"../graphql/queries/usersRequests\";\r\nimport { GET_ALL_PERMISSIONS } from \"../graphql/queries/permissionsRequests\";\r\nimport { GET_ALL_ROLES } from \"../graphql/queries/rolesRequests\";\r\n\r\nexport function CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Management({ allProjects }) {\r\n  const [value, setValue] = useState(0);\r\n  const [users, setUsers] = useState([]);\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\r\n\r\n  const getAllUsers = useQuery(GET_ALL_USERS);\r\n\r\n  const getAllPermissions = useQuery(GET_ALL_PERMISSIONS);\r\n\r\n  const getAllRoles = useQuery(GET_ALL_ROLES);\r\n\r\n  useEffect(() => {\r\n    if (getAllUsers.data) {\r\n      setUsers(getAllUsers.data.getUsers.users);\r\n    }\r\n  }, [getAllUsers.data]);\r\n\r\n  useEffect(() => {\r\n    if (getAllPermissions.data) {\r\n      setPermissions(getAllPermissions.data.getPermissions.permissions);\r\n    }\r\n  }, [getAllPermissions.data]);\r\n\r\n  useEffect(() => {\r\n    if (getAllRoles.data) {\r\n      setRoles(getAllRoles.data.getRoles.roles);\r\n    }\r\n  }, [getAllRoles.data]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userDetails.role !== \"super_admin\" &&\r\n      userDetails.role !== \"ci_leadership\" ? (\r\n        <Typography variant=\"h4\" component=\"h2\" sx={{ marginTop: \"20px\" }}>\r\n          You are not authorized to access this page.\r\n        </Typography>\r\n      ) : (\r\n        <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"management tabs\"\r\n            >\r\n              <Tab label=\"Assign Projects\" {...a11yProps(0)} />\r\n              <Tab label=\"Assign Permissions\" {...a11yProps(1)} />\r\n              <Tab label=\"Users\" {...a11yProps(2)} />\r\n            </Tabs>\r\n          </Box>\r\n          <CustomTabPanel value={value} index={0}>\r\n            <AssignProjects allProjects={allProjects} />\r\n          </CustomTabPanel>\r\n          <CustomTabPanel value={value} index={1}>\r\n            <Permissions\r\n              permissions={permissions}\r\n              roles={roles}\r\n              setRoles={setRoles}\r\n            />\r\n          </CustomTabPanel>\r\n          <CustomTabPanel value={value} index={2}>\r\n            <Users users={users} setUsers={setUsers} />\r\n          </CustomTabPanel>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["GET_ALL_USERS","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","UPDATE_USER","_templateObject3","GET_ALL_ROLES","UPDATE_ROLE","Search","styled","_ref","theme","_defineProperty","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","color","paddingLeft","concat","transition","transitions","create","_ref5","_ref6","_ref7","open","handleClose","title","data","selectedProject","_useState","useState","_useState2","_slicedToArray","toggleAdd","setToggleAdd","_useState3","_useState4","filteredData","setFilteredData","_useState5","_useState6","users","setUsers","_useState7","_useState8","roles","setRoles","_useState9","_useState10","selectedUser","setSelectedUser","_useState11","_useState12","selectedRole","setSelectedRole","_useState13","_useState14","isBeingUpdated","setIsBeingUpdated","_useState15","_useState16","isNew","setIsNew","getAllUsers","useQuery","getAllRoles","_useMutation","useMutation","ADD_PROJECT_ROLE","addProjectRole","_useMutation3","updateUser","useEffect","getUsers","getRoles","_jsxs","Dialog","onClose","children","DialogTitle","fontSize","_jsx","Chip","label","length","style","variant","Divider","DialogContent","Box","sx","flexDirection","FormControl","Typography","marginBottom","Select","name","defaultValue","value","find","item","user_id","user_name","options","map","onChange","e","className","classNamePrefix","marginTop","role_id","role_name","Button","marginRight","onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addProjectRole","_data","wrap","_context","prev","next","variables","userId","projectId","roleId","sent","status","toast","success","message","error","stop","apply","arguments","_callee2","_yield$updateUser","_data2","_context2","disabled","BeatLoader","loading","size","List","ListItem","target","filtered","filter","user","toLowerCase","includes","role","BiSearchAlt","placeholder","inputProps","index","ListItemText","primary","ListItemIcon","BiSolidPencil","cursor","AiOutlineMinusCircle","alignSelf","DialogActions","Styles","fontWeight","maxWidth","_ref2","allProjects","setOpen","list","setList","setTitle","setSelectedProject","_useLazyQuery","useLazyQuery","GET_PROJECT_ROLES_BY_PROJECT_ID","_useLazyQuery2","getProjectRolesByProjectId","project_role","project","project_name","project_id","_Fragment","margin","Grid","container","xs","sm","md","lg","Card","CardActionArea","CardContent","gutterBottom","component","sf_project_id","CardActions","GrFormView","_x","handleOpenModal","AssignModal","onSelect","filteredUsers","setFilteredUsers","user_email","mobile_no","sf_user_id","overflowY","account_status","BsPencilSquare","id","align","onSubmit","isLoading","setIsLoading","userName","userEmail","mobileNo","accountStatus","userInfo","setUserInfo","addUser","_yield$addUser","preventDefault","userPassword","TextField","_objectSpread","fullWidth","type","handleUserSelect","UsersList","UsersForm","updatedUsers","u","newUsers","_toConsumableArray","onSelectRole","Tabs","orientation","event","newValue","Tab","replace","l","toUpperCase","role_desc","permissions","selectedPermission","setSelectedPermission","saveLoading","setSaveLoading","updateRole","handlePermissionChange","FormLabel","RadioGroup","permission","FormControlLabel","perm_id","control","Radio","perm_name","checked","mt","then","res","prevRoles","newRoles","findIndex","newRole","catch","err","console","log","RolesList","PermissionsList","GET_ALL_PERMISSIONS","CustomTabPanel","props","other","_objectWithoutProperties","_excluded","hidden","p","a11yProps","Management","setValue","setPermissions","userDetails","JSON","parse","window","localStorage","getItem","getAllPermissions","getPermissions","borderBottom","borderColor","AssignProjects","Permissions","Users"],"sourceRoot":""}