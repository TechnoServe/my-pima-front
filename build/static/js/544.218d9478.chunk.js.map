{"version":3,"file":"static/js/544.218d9478.chunk.js","mappings":"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","sources":["graphql/queries/usersRequests.js","graphql/queries/wetmillVisit.js","features/sustainabilityDashboard/hooks/useDashboardData.js","features/sustainabilityDashboard/components/DashboardGraphs.js","features/sustainabilityDashboard/index.jsx"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst GET_ALL_USERS = gql`\r\n  query GetUsers {\r\n    getUsers {\r\n      message\r\n      status\r\n      users {\r\n        user_id\r\n        sf_user_id\r\n        user_name\r\n        user_email\r\n        mobile_no\r\n        account_status\r\n        role {\r\n          role_id\r\n          role_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ADD_USER = gql`\r\n  mutation AddUser(\r\n    $userName: String!\r\n    $userEmail: String!\r\n    $mobileNo: String!\r\n    $userPassword: String!\r\n    $roleId: ID\r\n  ) {\r\n    addUser(\r\n      user_name: $userName\r\n      user_email: $userEmail\r\n      mobile_no: $mobileNo\r\n      user_password: $userPassword\r\n      role_id: $roleId\r\n    ) {\r\n      message\r\n      status\r\n      user {\r\n        user_id\r\n        sf_user_id\r\n        user_name\r\n        user_email\r\n        mobile_no\r\n        role_id\r\n        role {\r\n          role_desc\r\n          role_id\r\n          role_name\r\n          role_status\r\n        }\r\n        account_status\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation UpdateUser(\r\n    $userId: ID!\r\n    $accountStatus: String\r\n    $userEmail: String\r\n    $mobileNo: String\r\n    $userName: String\r\n    $roleId: ID\r\n  ) {\r\n    updateUser(\r\n      user_id: $userId\r\n      account_status: $accountStatus\r\n      user_email: $userEmail\r\n      mobile_no: $mobileNo\r\n      user_name: $userName\r\n      role_id: $roleId\r\n    ) {\r\n      message\r\n      status\r\n      user {\r\n        user_id\r\n        sf_user_id\r\n        user_name\r\n        user_email\r\n        mobile_no\r\n        role_id\r\n        account_status\r\n        role {\r\n          role_id\r\n          role_name\r\n          role_desc\r\n          permissions\r\n          is_default\r\n          role_status\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_WETMILL_BAS = gql`\r\n  query GetWetmillBas($sfProjectId: String!) {\r\n    getWetMillBusinessAdvisors(sfProjectId: $sfProjectId) {\r\n      advisors {\r\n        id\r\n        name\r\n        wetmillId\r\n      }\r\n      message\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport { GET_ALL_USERS, ADD_USER, UPDATE_USER, GET_WETMILL_BAS};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_WETMILL_VISITS = gql`\r\n  query GetWetmillVisits($program: String!) {\r\n    getVisits(program: $program) {\r\n      message\r\n      status\r\n      visits {\r\n        id\r\n        visited_at\r\n        wetmillId\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { useMemo } from \"react\";\r\nimport { GET_WETMILLS } from \"../../../graphql/queries/wetmills\";\r\nimport { GET_WETMILL_VISITS } from \"../../../graphql/queries/wetmillVisit\";\r\nimport { GET_WETMILL_BAS } from \"../../../graphql/queries/usersRequests\";\r\nimport { de } from \"date-fns/locale\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nlet DEFAULT_SF_PROJECT_ID = \"a0EOj000004XC1hMAG\"; // Default project ID for Ethiopia Regrow USDA\r\n\r\n\r\n\r\nexport const useDashboardData = () => {\r\n\r\n  const { program } = useOutletContext();\r\n\r\n  console.log(\"Program in useDashboardData:\", program);\r\n\r\n  if (program === \"Ethiopia Regrow USDA\") {\r\n    DEFAULT_SF_PROJECT_ID = \"a0EOj000004XC1hMAG\";\r\n  }\r\n  else if (program === \"Ethiopia CREW GAC\") {\r\n    DEFAULT_SF_PROJECT_ID = \"a0EOj000004XC3JMAW\";\r\n\r\n  }\r\n  else if (program === \"Ethiopia Nespresso\") {\r\n    DEFAULT_SF_PROJECT_ID = \"a0EOj000004XC4vMAG\";\r\n\r\n  }\r\n  else {\r\n    DEFAULT_SF_PROJECT_ID = \"a0EOj000004FvmrMAC\";\r\n  }\r\n\r\n  const {\r\n    data: millsData,\r\n    loading: millsLoading,\r\n    error: millsError,\r\n  } = useQuery(GET_WETMILLS, {\r\n    variables: { program }\r\n  });\r\n  const {\r\n    data: baData,\r\n    loading: baLoading,\r\n    error: baError,\r\n  } = useQuery(GET_WETMILL_BAS, {\r\n    variables: { sfProjectId: DEFAULT_SF_PROJECT_ID },\r\n  });\r\n  const {\r\n    data: visitsData,\r\n    loading: visitsLoading,\r\n    error: visitsError,\r\n  } = useQuery(GET_WETMILL_VISITS, { variables: { program: program } });\r\n\r\n  const wetmills = millsData?.getWetmills?.wetmills || [];\r\n  const businessAdvisors = baData?.getWetMillBusinessAdvisors?.advisors || [];\r\n  const visits = visitsData?.getVisits?.visits || [];\r\n\r\n  console.log(\"Visits Data:\", visits);\r\n\r\n  const millsCount = wetmills.length;\r\n  const basCount = businessAdvisors.length;\r\n\r\n  const visitsPerWeekData = useMemo(() => {\r\n    const map = {};\r\n\r\n    visits.forEach((v) => {\r\n      const date = new Date(v.visited_at);\r\n\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth(); // 0-based\r\n      const day = date.getDate();\r\n\r\n      const firstDayOfMonth = new Date(year, month, 1);\r\n      const week = Math.ceil((day + firstDayOfMonth.getDay()) / 7); // Week of the month\r\n      const monthLabel = date.toLocaleString(\"default\", { month: \"short\" }); // \"Apr\"\r\n\r\n      const label = `${monthLabel} W${week}`;\r\n\r\n      // Use first day of that week as a consistent timestamp\r\n      const sortKey = new Date(year, month, (week - 1) * 7 + 1).getTime();\r\n\r\n      if (!map[label]) {\r\n        map[label] = { count: 0, sortKey };\r\n      }\r\n\r\n      map[label].count += 1;\r\n    });\r\n\r\n    return Object.entries(map)\r\n      .map(([week, { count, sortKey }]) => ({ week, count, sortKey }))\r\n      .sort((a, b) => a.sortKey - b.sortKey) // Oldest first\r\n      .map(({ week, count }) => ({ week, count })); // Strip sortKey\r\n  }, [visits]);\r\n\r\n  const ownershipData = useMemo(() => {\r\n    const map = {};\r\n    wetmills.forEach((w) => {\r\n      const key = w.mill_status || \"Unknown\";\r\n      map[key] = (map[key] || 0) + 1;\r\n    });\r\n    return Object.entries(map).map(([label, count]) => ({ label, count }));\r\n  }, [wetmills]);\r\n\r\n  const exportingStatusData = useMemo(() => {\r\n    const map = {};\r\n    wetmills.forEach((w) => {\r\n      const key = w.exporting_status ? \"Exporter\" : \"Non-exporter\";\r\n      map[key] = (map[key] || 0) + 1;\r\n    });\r\n    return Object.entries(map).map(([label, count]) => ({ label, count }));\r\n  }, [wetmills]);\r\n\r\n  const registrationTimelineData = useMemo(() => {\r\n    const map = {};\r\n    wetmills.forEach((w) => {\r\n      const year = new Date(w.created_at).getFullYear();\r\n      map[year] = (map[year] || 0) + 1;\r\n    });\r\n    return Object.entries(map)\r\n      .map(([year, count]) => ({ year, count }))\r\n      .sort((a, b) => a.year - b.year);\r\n  }, [wetmills]);\r\n\r\n  return {\r\n    loading: millsLoading || baLoading || visitsLoading,\r\n    error: millsError || baError || visitsError,\r\n    millsCount,\r\n    basCount,\r\n    visitsPerWeekData,\r\n    ownershipData,\r\n    exportingStatusData,\r\n    registrationTimelineData,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Pie, Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  LineElement,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport \"../dashboard.css\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  LineElement,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DashboardGraphs = ({\r\n  millsCount,\r\n  basCount,\r\n  visitsPerWeekData,\r\n  ownershipData,\r\n  exportingStatusData,\r\n}) => {\r\n  return (\r\n    <>\r\n      {/* Summary stats */}\r\n      <div className=\"graphs__stats\">\r\n        <div className=\"stat-card\">\r\n          <h2>Total Registered Wet Mills</h2>\r\n          <p>{millsCount}</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h2>Total BAs</h2>\r\n          <p>{basCount}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Visits per week */}\r\n      <div className=\"sustain__card sustain__full\">\r\n        <h3 className=\"sustain__cardTitle\">Wet Mill Visits per Week</h3>\r\n        <Line\r\n          data={{\r\n            labels: visitsPerWeekData.map((d) => d.week),\r\n            datasets: [\r\n              {\r\n                label: \"Wet Mill Visits\",\r\n                data: visitsPerWeekData.map((d) => d.count),\r\n                fill: true,\r\n                borderColor: \"#087c8f\",\r\n                backgroundColor: \"rgba(8, 124, 143, 0.15)\",\r\n                tension: 0.4,\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: { legend: { position: \"top\" } },\r\n            scales: {\r\n              x: { grid: { display: false } }, y: {\r\n                ticks: {\r\n                  // Force integer ticks\r\n                  callback: function (value) {\r\n                    return Number.isInteger(value) ? value : '';\r\n                  },\r\n                  stepSize: 1, // Optional: ensures spacing is in whole numbers\r\n                }\r\n              }\r\n            },\r\n          }}\r\n          height={200}\r\n        />\r\n      </div>\r\n\r\n      {/* Four-grid charts */}\r\n      <div className=\"sustain__grid\">\r\n        {/* Ownership Type */}\r\n        <div className=\"sustain__card\">\r\n          <h3 className=\"sustain__cardTitle\">Ownership Type</h3>\r\n          <Pie\r\n            data={{\r\n              labels: ownershipData.map((d) => d.label),\r\n              datasets: [\r\n                {\r\n                  data: ownershipData.map((d) => d.count),\r\n                  backgroundColor: [\"#087c8f\", \"#cccccc\"],\r\n                  borderColor: \"#ffffff\",\r\n                  borderWidth: 2,\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              plugins: { legend: { position: \"top\" } },\r\n            }}\r\n            height={200}\r\n          />\r\n        </div>\r\n\r\n        {/* Exporter Status */}\r\n        <div className=\"sustain__card\">\r\n          <h3 className=\"sustain__cardTitle\">Exporter Status</h3>\r\n          <Pie\r\n            data={{\r\n              labels: exportingStatusData.map((d) => d.label),\r\n              datasets: [\r\n                {\r\n                  data: exportingStatusData.map((d) => d.count),\r\n                  backgroundColor: [\"#f7931e\", \"#333333\"],\r\n                  borderColor: \"#ffffff\",\r\n                  borderWidth: 2,\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              plugins: { legend: { position: \"top\" } },\r\n            }}\r\n            height={200}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardGraphs;\r\n","// sustainabilityDashboard/index.jsx\r\n\r\nimport React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useDashboardData } from \"./hooks/useDashboardData\";\r\nimport DashboardGraphs from \"./components/DashboardGraphs\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport \"./dashboard.css\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nconst SustainabilityDashboard = () => {\r\n\r\n  const {\r\n    loading,\r\n    error,\r\n    millsCount,\r\n    basCount,\r\n    visitsPerWeekData,\r\n    ownershipData,\r\n    exportingStatusData,\r\n    registrationTimelineData,\r\n  } = useDashboardData();\r\n\r\n  // 1. If we’re still loading…\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  // 2. If there’s an error, this block renders\r\n  if (error)\r\n    return (\r\n      <div className=\"sustain__error\">\r\n        <Typography variant=\"h6\" color=\"error\">\r\n          Failed to load summary data\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {error.message}\r\n        </Typography>\r\n      </div>\r\n    );\r\n\r\n  // 3. Otherwise render the summary\r\n  return (\r\n    <div className=\"sustain__container\">\r\n      <header className=\"sustain__header\">\r\n        <h1>Summary Page</h1>\r\n      </header>\r\n      <DashboardGraphs\r\n        millsCount={millsCount}\r\n        basCount={basCount}\r\n        visitsPerWeekData={visitsPerWeekData}\r\n        ownershipData={ownershipData}\r\n        exportingStatusData={exportingStatusData}\r\n        registrationTimelineData={registrationTimelineData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SustainabilityDashboard;\r\n"],"names":["GET_ALL_USERS","gql","ADD_USER","UPDATE_USER","GET_WETMILL_BAS","GET_WETMILL_VISITS","DEFAULT_SF_PROJECT_ID","ChartJS","register","CategoryScale","LinearScale","ArcElement","LineElement","PointElement","Tooltip","Legend","_ref","millsCount","basCount","visitsPerWeekData","ownershipData","exportingStatusData","_jsxs","_Fragment","children","className","_jsx","Line","data","labels","map","d","week","datasets","label","count","fill","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","plugins","legend","position","scales","x","grid","display","y","ticks","callback","value","Number","isInteger","stepSize","height","Pie","borderWidth","SustainabilityDashboard","loading","error","registrationTimelineData","useDashboardData","_millsData$getWetmill","_baData$getWetMillBus","_visitsData$getVisits","program","useOutletContext","console","log","millsData","millsLoading","millsError","useQuery","GET_WETMILLS","variables","baData","baLoading","baError","sfProjectId","visitsData","visitsLoading","visitsError","wetmills","getWetmills","businessAdvisors","getWetMillBusinessAdvisors","advisors","visits","getVisits","length","useMemo","forEach","v","date","Date","visited_at","year","getFullYear","month","getMonth","day","getDate","firstDayOfMonth","Math","ceil","getDay","toLocaleString","sortKey","getTime","Object","entries","sort","a","b","_ref2","w","key","mill_status","_ref3","exporting_status","_ref4","created_at","_ref5","LoadingScreen","Typography","variant","color","message","DashboardGraphs"],"sourceRoot":""}