{"version":3,"file":"static/js/557.073da009.chunk.js","mappings":"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","sources":["components/Modals/UploadParticipantsModal.js","graphql/queries/attendancesRequests.js","features/participants/Participants.js","features/participants/hooks/useOutboxProgress.js","utils/timezone.js","components/Table/Table.js","features/training-session/ts-detail/sessionimage/Imagecontainer.js","graphql/queries/participantsRequests.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  DialogActions,\r\n  Chip,\r\n  Alert,\r\n  Paper,\r\n  Stack,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { BiErrorAlt } from \"react-icons/bi\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  UPLOAD_PARTICIPANTS,\r\n} from \"../../graphql/queries/participantsRequests\";\r\n\r\nconst BRAND = { navy: \"#1b2a4e\", teal: \"#087c8f\" };\r\n\r\nconst requiredColumns = [\r\n  \"Project\",\"first_name\",\"last_name\",\"gender\",\"age\",\"coffee_tree_numbers\",\r\n  \"farmer_sf_id\",\"tns_id\",\"hh_number\",\"sf_household_id\",\"farmer_number\",\r\n  \"ffg_id\",\"training_group\",\"status\",\r\n];\r\n\r\nconst UploadParticipantsModal = ({ open, setOpen, navigatedProject, sfProjectId }) => {\r\n  const [fileInfo, setFileInfo] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [loadedColumns, setLoadedColumns] = useState([]);\r\n  const [distinctProjects, setDistinctProjects] = useState([]);\r\n  const [uploadResult, setUploadResult] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const [uploadParticipants] = useMutation(UPLOAD_PARTICIPANTS);\r\n  const participantsPerProject = useQuery(GET_PARTICIPANTS_PER_PROJECT, {\r\n    variables: { projectId: sfProjectId },\r\n    skip: !sfProjectId,\r\n  });\r\n\r\n  const handleChange = (f) => {\r\n    setFile(f);\r\n    setUploadResult(null);\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const lines = e.target.result.split(/\\r\\n|\\n/);\r\n      const rows = lines.map((row) => row.split(\",\").map((c) => c.replace(/^\"(.*)\"$/, \"$1\")));\r\n      setFileInfo({\r\n        filename: f.name,\r\n        size: f.size,\r\n        type: f.type,\r\n        data: rows.length > 0 ? rows : lines,\r\n      });\r\n      setLoadedColumns(rows[0] || []);\r\n    };\r\n    reader.readAsText(f);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!fileInfo?.data || fileInfo.data.length < 2) return;\r\n    const idx = loadedColumns.indexOf(\"Project\");\r\n    const values = fileInfo.data.map((r) => r[idx]).filter(Boolean);\r\n    setDistinctProjects([...new Set(values)]);\r\n  }, [fileInfo, loadedColumns]);\r\n\r\n  const reset = () => {\r\n    setFileInfo(null);\r\n    setFile(null);\r\n    setLoadedColumns([]);\r\n    setDistinctProjects([]);\r\n    setUploadResult(null);\r\n    setIsProcessing(false);\r\n    setOpen(false);\r\n  };\r\n\r\n  const validColumnsCount = loadedColumns.filter((c) => requiredColumns.includes(c)).length;\r\n  const showRequiredColsError = fileInfo && validColumnsCount !== requiredColumns.length;\r\n  const emptyFile = fileInfo && fileInfo.data && fileInfo.data.length - 2 < 1;\r\n  const projectMismatch = fileInfo && distinctProjects.length > 0 && !distinctProjects.includes(navigatedProject);\r\n\r\n  const recordCountForActiveProject = useMemo(() => {\r\n    if (!fileInfo || !loadedColumns.length) return 0;\r\n    const idx = loadedColumns.indexOf(\"Project\");\r\n    return Math.max(0, fileInfo.data.filter((r) => r[idx] === navigatedProject).length - 1);\r\n  }, [fileInfo, loadedColumns, navigatedProject]);\r\n\r\n  const createProjectSpecificFile = () => {\r\n    const idx = loadedColumns.indexOf(\"Project\");\r\n    const rows = fileInfo.data.filter((r) => r[idx] === navigatedProject);\r\n    const csv = `${loadedColumns.join(\",\")}\\n${rows.map((r) => r.join(\",\")).join(\"\\n\")}`;\r\n    return new File([csv], fileInfo.filename, { type: \"text/csv\" });\r\n    };\r\n\r\n  const handleUpload = async () => {\r\n    if (isProcessing || !fileInfo) return;\r\n    setIsProcessing(true);\r\n    setUploadResult(null);\r\n    try {\r\n      const newFile = createProjectSpecificFile();\r\n      const res = await uploadParticipants({ variables: { partsFile: newFile, projectId: sfProjectId } });\r\n      await participantsPerProject.refetch();\r\n      setUploadResult(res.data.uploadParticipants);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setUploadResult({ status: 500, message: \"Something went wrong. Please try again.\" });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadErrors = () => {\r\n    if (!uploadResult?.file) return;\r\n    const bin = atob(uploadResult.file);\r\n    const bytes = new Uint8Array([...bin].map((c) => c.charCodeAt(0)));\r\n    const blob = new Blob([bytes], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\r\n    saveAs(blob, \"errors.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={(_, r) => (r === \"backdropClick\" || r === \"escapeKeyDown\" ? null : reset())} fullWidth maxWidth=\"sm\">\r\n      <DialogTitle sx={{ pb: 1, color: BRAND.navy }}>Upload Participants</DialogTitle>\r\n      <DialogContent sx={{ pt: 0 }}>\r\n        {!fileInfo ? (\r\n          <Paper elevation={0} sx={{ p: 2, border: \"1px dashed #cfd8dc\", borderRadius: 2, bgcolor: \"#fff\" }}>\r\n            <FileUploader\r\n              label=\"Drag & drop or browse a CSV\"\r\n              handleChange={handleChange}\r\n              name=\"file\"\r\n              types={[\"csv\"]}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">Accepted format: .csv</Typography>\r\n          </Paper>\r\n        ) : uploadResult ? (\r\n          <Paper elevation={0} sx={{ p: 2 }}>\r\n            <Alert severity={uploadResult.status === 200 ? \"success\" : \"error\"} sx={{ mb: 2 }}>\r\n              {uploadResult.message}\r\n            </Alert>\r\n            {uploadResult.status !== 200 && uploadResult.file && (\r\n              <Button onClick={handleDownloadErrors} variant=\"contained\" sx={{ bgcolor: BRAND.teal, \"&:hover\": { bgcolor: \"#066d79\" } }}>\r\n                Download Error File\r\n              </Button>\r\n            )}\r\n          </Paper>\r\n        ) : showRequiredColsError ? (\r\n          <Paper elevation={0} sx={{ p: 2 }}>\r\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n              <BiErrorAlt size={22} color=\"#B90101\" />\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 600, color: BRAND.navy }}>\r\n                Missing required columns\r\n              </Typography>\r\n            </Stack>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              File must contain all of the following columns:\r\n            </Typography>\r\n            <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5, mb: 2 }}>\r\n              {requiredColumns\r\n                .filter((c) => !loadedColumns.includes(c))\r\n                .map((c) => (\r\n                  <Chip key={c} label={c} size=\"small\" variant=\"outlined\" />\r\n                ))}\r\n            </Box>\r\n            <Button startIcon={<AiOutlineCloseCircle />} onClick={() => setFileInfo(null)}>Choose another file</Button>\r\n          </Paper>\r\n        ) : emptyFile ? (\r\n          <Paper elevation={0} sx={{ p: 2 }}>\r\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n              <BiErrorAlt size={22} color=\"#B90101\" />\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 600, color: BRAND.navy }}>\r\n                No records found in the file\r\n              </Typography>\r\n            </Stack>\r\n            <Button startIcon={<AiOutlineCloseCircle />} onClick={() => setFileInfo(null)}>Choose another file</Button>\r\n          </Paper>\r\n        ) : projectMismatch ? (\r\n          <Paper elevation={0} sx={{ p: 2 }}>\r\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n              <BiErrorAlt size={22} color=\"#B90101\" />\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 600, color: BRAND.navy }}>\r\n                Project mismatch\r\n              </Typography>\r\n            </Stack>\r\n            <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n              Uploaded file contains projects that don’t match: <b>{navigatedProject}</b>.\r\n            </Typography>\r\n            <Button startIcon={<AiOutlineCloseCircle />} onClick={() => setFileInfo(null)}>Choose another file</Button>\r\n          </Paper>\r\n        ) : (\r\n          <Paper elevation={0} sx={{ p: 2 }}>\r\n            <Stack spacing={1} sx={{ mb: 1 }}>\r\n              <Typography variant=\"body2\"><b>Name:</b> {fileInfo.filename}</Typography>\r\n              <Typography variant=\"body2\">\r\n                <b>Size:</b> {fileInfo.size > 1_000_000 ? `${(fileInfo.size / 1_000_000).toFixed(2)} MB` : `${(fileInfo.size / 1_000).toFixed(2)} KB`}\r\n              </Typography>\r\n              <Typography variant=\"body2\"><b>Records for {navigatedProject}:</b> {recordCountForActiveProject}</Typography>\r\n            </Stack>\r\n            <Divider sx={{ my: 1 }} />\r\n            <Stack direction=\"row\" spacing={1.5} sx={{ mt: 1 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<AiOutlineCloseCircle />}\r\n                onClick={() => setFileInfo(null)}\r\n                disabled={isProcessing}\r\n                sx={{ color: BRAND.navy, borderColor: BRAND.navy }}\r\n              >\r\n                Choose another file\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<FaCloudUploadAlt />}\r\n                onClick={handleUpload}\r\n                disabled={isProcessing}\r\n                sx={{ bgcolor: BRAND.teal, \"&:hover\": { bgcolor: \"#066d79\" } }}\r\n              >\r\n                {isProcessing ? \"Processing...\" : \"Process & Upload\"}\r\n              </Button>\r\n            </Stack>\r\n          </Paper>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={reset} disabled={isProcessing}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadParticipantsModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\n// const GET_ALL_ATTENDANCES = gql`\r\n//   query GetAttendances($projectId: String!) {\r\n//     getAttendances(project_id: $projectId) {\r\n//       message\r\n//       status\r\n//       attendance {\r\n//         attendance_id\r\n//         participant_id\r\n//         attendance_name\r\n//         attendance_date\r\n//         attendance_status\r\n//         session_id\r\n//         module_name\r\n//         module_number\r\n//         module_id\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst GET_ALL_ATTENDANCES = gql`\r\n  query GetAttendances($projectId: String!) {\r\n    getAttendances(project_id: $projectId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_status\r\n        module_name\r\n        module_number\r\n        module_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ALL_ATTENDANCES };\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  LinearProgress,\r\n  Tooltip,\r\n  Chip,\r\n  Stack,\r\n  Divider,\r\n  Collapse,\r\n  Link,\r\n  IconButton,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport {\r\n  AiOutlineFileText,\r\n  AiOutlineWarning,\r\n  AiOutlineCaretDown,\r\n  AiOutlineCaretUp,\r\n} from \"react-icons/ai\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport UploadParticipantsModal from \"../../components/Modals/UploadParticipantsModal\";\r\nimport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\r\n} from \"../../graphql/queries/participantsRequests\";\r\nimport { GET_ALL_ATTENDANCES } from \"../../graphql/queries/attendancesRequests\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport useOutboxProgress from \"./hooks/useOutboxProgress\";\r\nimport \"./partdetail/partsstyles.css\";\r\n\r\nconst BRAND = { navy: \"#1b2a4e\", teal: \"#087c8f\" };\r\n\r\nconst Participants = () => {\r\n  const { activeProject, trainingGroups, projects } = useOutletContext();\r\n  const [open, setOpen] = useState(false);\r\n  const [sendToCcCount, setSendToCcCount] = useState(0);\r\n  const [isSyncingCommCare, setIsSyncingCommCare] = useState(false);\r\n  const [showFailed, setShowFailed] = useState(false);\r\n\r\n  // Live outbox progress (Salesforce push)\r\n  const { isSyncing, overallPercent, phaseList, totals, run, failedRows } =\r\n    useOutboxProgress(activeProject);\r\n\r\n  const {\r\n    data: participantData,\r\n    loading: participantsLoading,\r\n    error: participantsError,\r\n    refetch: refetchParticipants,\r\n  } = useQuery(GET_PARTICIPANTS_PER_PROJECT, {\r\n    variables: { projectId: activeProject },\r\n    skip: !activeProject,\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    data: attendanceData,\r\n    loading: attendanceLoading,\r\n    error: attendanceError,\r\n  } = useQuery(GET_ALL_ATTENDANCES, {\r\n    variables: { projectId: activeProject },\r\n    skip: !activeProject,\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [SyncParticipants] = useMutation(SYNC_PARTICIPANTS_WITH_COMMCARE);\r\n\r\n  const userDetails = useMemo(() => {\r\n    try {\r\n      return JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (participantData?.getParticipantsByProject?.status === 200) {\r\n      const pending =\r\n        participantData.getParticipantsByProject.participants.filter(\r\n          (p) => String(p.create_in_commcare).toLowerCase() === \"false\"\r\n        );\r\n      setSendToCcCount(pending.length);\r\n    }\r\n  }, [participantData]);\r\n\r\n  const handleSendToCommCare = async () => {\r\n    if (!activeProject) return;\r\n    setIsSyncingCommCare(true);\r\n    try {\r\n      await SyncParticipants({ variables: { projectId: activeProject } });\r\n      await refetchParticipants();\r\n    } finally {\r\n      setIsSyncingCommCare(false);\r\n    }\r\n  };\r\n\r\n  const participants =\r\n    participantData?.getParticipantsByProject?.participants ?? [];\r\n  const allAttendances = attendanceData?.getAttendances?.attendance ?? [];\r\n\r\n  const canUpload =\r\n    (userDetails?.role === \"super_admin\" ||\r\n      userDetails?.role === \"ci_leadership\" ||\r\n      userDetails?.role === \"senior_business_advisor\" ||\r\n      userDetails?.role === \"project_manager\" ||\r\n      userDetails?.role === \"mel_analyst\") &&\r\n    !isSyncing; // hide upload while syncing to Salesforce\r\n\r\n  // Build rows for your Table comp\r\n  const rows = useMemo(\r\n    () =>\r\n      participants.map((participant, index) => {\r\n        const row = {\r\n          num: index + 1,\r\n          Project: projects.find((p) => p.sf_project_id === activeProject)\r\n            ?.project_name,\r\n          p_id: participant.p_id,\r\n          first_name: participant.first_name,\r\n          middle_name: participant.middle_name || \"\",\r\n          last_name: participant.last_name || \"\",\r\n          gender: participant.gender,\r\n          age: participant.age,\r\n          coffee_tree_numbers: participant.coffee_tree_numbers,\r\n          phone_number: participant.phone_number,\r\n          farmer_sf_id: participant.p_id,\r\n          hh_number: participant.hh_number,\r\n          sf_household_id: participant.household_id,\r\n          ffg_id: participant.ffg_id,\r\n          location: participant.location,\r\n          tns_id: participant.tns_id,\r\n          training_group:\r\n            trainingGroups?.find(\r\n              (tg) => tg.tg_id === participant.training_group\r\n            )?.tg_name || \"N/A\",\r\n          farmer_number: participant.primary_household_member,\r\n          status: participant.status,\r\n          farmer_trainer: participant.farmer_trainer,\r\n          create_in_commcare: participant.create_in_commcare,\r\n          number_of_coffee_plots: participant.number_of_coffee_plots,\r\n          business_advisor: participant.business_advisor,\r\n        };\r\n        if (activeProject === \"a0EOj000003E0knMAC\") {\r\n          row.agronomy_advisor = participant.business_advisor;\r\n        }\r\n\r\n        if (activeProject === \"a0EOj000003E0knMAC\") {\r\n          row.growers_number = participant.coop_membership_number;\r\n        }\r\n\r\n        if (\r\n          activeProject === \"a0EOj000002FMGnMAO\" ||\r\n          activeProject === \"a0EOj000002C7ivMAC\"\r\n        ) {\r\n          row.national_identification_id = participant.coop_membership_number;\r\n        }\r\n\r\n        return row;\r\n      }),\r\n    [participants, projects, activeProject, trainingGroups]\r\n  );\r\n\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"full_name\",\r\n      name: \"Full Name\",\r\n      selector: (row) => row.first_name + \" \" + row.last_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"gender\",\r\n      name: \"Gender\",\r\n      selector: (row) => (row.gender === \"m\" ? \"Male\" : \"Female\"),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"location\",\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"Training Group\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"household_id\",\r\n      name: \"HH Number\",\r\n      selector: (row) => row.hh_number,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"primary_household_member\",\r\n      name: \"Primary HouseHold Member\",\r\n      selector: (row) => (\r\n        <Chip\r\n          label={row.farmer_number === \"1\" ? \"1\" : \"2\"}\r\n          color={row.farmer_number === \"1\" ? \"success\" : \"error\"}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"business_advisor\",\r\n      name: \"Business Advisor\",\r\n      selector: (row) => row.business_advisor,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      {/* Hero */}\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          p: 2.5,\r\n          borderRadius: 2,\r\n          background: `linear-gradient(135deg, ${BRAND.navy} 0%, ${BRAND.teal} 100%)`,\r\n          color: \"#fff\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            gap: 2,\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 800, lineHeight: 1 }}>\r\n              Registered Farmers\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ opacity: 0.95 }}>\r\n              Project:&nbsp;\r\n              {projects.find((p) => p.sf_project_id === activeProject)\r\n                ?.project_name || \"—\"}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Stack direction=\"row\" spacing={1.5} alignItems=\"center\">\r\n            {!isSyncing && (\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{\r\n                  bgcolor: \"#fff\",\r\n                  color: BRAND.navy,\r\n                  \"&:hover\": { bgcolor: \"#f3f4f6\" },\r\n                }}\r\n                onClick={handleSendToCommCare}\r\n                disabled={isSyncingCommCare || sendToCcCount === 0}\r\n              >\r\n                {isSyncingCommCare\r\n                  ? \"Sending...\"\r\n                  : `Send to CommCare (${sendToCcCount})`}\r\n              </Button>\r\n            )}\r\n\r\n            {canUpload && (\r\n              <Tooltip title=\"Upload New Participants\">\r\n                <Button\r\n                  onClick={() => setOpen(true)}\r\n                  startIcon={<FaCloudUploadAlt />}\r\n                  sx={{\r\n                    color: \"#fff\",\r\n                    borderColor: \"#fff\",\r\n                    borderWidth: 1,\r\n                    borderStyle: \"solid\",\r\n                    \"&:hover\": { bgcolor: \"rgba(255,255,255,0.12)\" },\r\n                  }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </Tooltip>\r\n            )}\r\n          </Stack>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Progress Panel */}\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          p: 2.5,\r\n          borderRadius: 2,\r\n          borderLeft: `4px solid ${isSyncing ? BRAND.teal : BRAND.navy}`,\r\n          bgcolor: isSyncing ? \"#f0f9fb\" : \"#f5f7fb\",\r\n        }}\r\n      >\r\n        <Stack spacing={1.5}>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Box>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                sx={{ fontWeight: 800, color: BRAND.navy }}\r\n              >\r\n                {isSyncing ? \"Salesforce Sync in Progress\" : \"No Active Sync\"}\r\n              </Typography>\r\n              {run?.fileName && (\r\n                <Stack\r\n                  direction=\"row\"\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                  sx={{ mt: 0.5 }}\r\n                >\r\n                  <AiOutlineFileText />\r\n                  {run.fileUrl ? (\r\n                    <Link\r\n                      href={run.fileUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener\"\r\n                      underline=\"hover\"\r\n                      color={BRAND.teal}\r\n                    >\r\n                      {run.fileName}\r\n                    </Link>\r\n                  ) : (\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {run.fileName}\r\n                    </Typography>\r\n                  )}\r\n                </Stack>\r\n              )}\r\n            </Box>\r\n\r\n            <Stack direction=\"row\" spacing={1.5}>\r\n              <Chip\r\n                size=\"small\"\r\n                label={`Total: ${totals.total}`}\r\n                sx={{ bgcolor: \"#fff\" }}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                label={`Sent: ${totals.sent}`}\r\n                sx={{ bgcolor: \"#fff\" }}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                color={totals.failed > 0 ? \"error\" : \"default\"}\r\n                label={`Failed: ${totals.failed}`}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                label={`Left: ${totals.leftToSend}`}\r\n                sx={{ bgcolor: \"#fff\" }}\r\n                variant=\"outlined\"\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n\r\n          {/* Overall Progress */}\r\n          <Box sx={{ mt: 0.5 }}>\r\n            {isSyncing ? (\r\n              <>\r\n                <LinearProgress\r\n                  variant={\r\n                    overallPercent != null ? \"determinate\" : \"indeterminate\"\r\n                  }\r\n                  value={overallPercent ?? undefined}\r\n                  sx={{ height: 10, borderRadius: 6 }}\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    mt: 0.5,\r\n                  }}\r\n                >\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {overallPercent != null\r\n                      ? `${overallPercent}% complete`\r\n                      : \"Working…\"}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    Started:{\" \"}\r\n                    {run?.startedAt\r\n                      ? new Date(run.startedAt).toLocaleString()\r\n                      : \"—\"}\r\n                  </Typography>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {sendToCcCount > 0\r\n                    ? `You have ${sendToCcCount} participant${\r\n                        sendToCcCount === 1 ? \"\" : \"s\"\r\n                      } pending for CommCare.`\r\n                    : \"All participants are already sent to CommCare.\"}\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleSendToCommCare}\r\n                    disabled={isSyncingCommCare || sendToCcCount === 0}\r\n                    sx={{\r\n                      bgcolor: BRAND.teal,\r\n                      \"&:hover\": { bgcolor: \"#066d79\" },\r\n                    }}\r\n                  >\r\n                    {isSyncingCommCare ? \"Sending...\" : \"Send to CommCare\"}\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={() => refetchParticipants()}\r\n                    sx={{ color: BRAND.navy, borderColor: BRAND.navy }}\r\n                  >\r\n                    Refresh\r\n                  </Button>\r\n                </Stack>\r\n              </Stack>\r\n            )}\r\n          </Box>\r\n\r\n          {isSyncing && (\r\n            <>\r\n              {/* Phase Cards */}\r\n              <Grid container spacing={1.5} sx={{ mt: 0.5 }}>\r\n                {phaseList.map((p) => {\r\n                  const pct = p.total\r\n                    ? Math.round((p.sent / p.total) * 100)\r\n                    : 0;\r\n                  return (\r\n                    <Grid item xs={12} md={4} key={p.key}>\r\n                      <Paper\r\n                        variant=\"outlined\"\r\n                        sx={{ p: 1.5, borderRadius: 2, bgcolor: \"#fff\" }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          sx={{ fontWeight: 700, color: BRAND.navy }}\r\n                        >\r\n                          {p.name}\r\n                        </Typography>\r\n                        <LinearProgress\r\n                          variant=\"determinate\"\r\n                          value={pct}\r\n                          sx={{ height: 6, borderRadius: 6, mt: 1 }}\r\n                        />\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          spacing={2}\r\n                          sx={{ mt: 1 }}\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {p.sent}/{p.total} sent\r\n                          </Typography>\r\n                          <Chip\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            label={`Pending: ${p.pending + p.processing}`}\r\n                          />\r\n                          <Chip\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            icon={p.failed > 0 ? <AiOutlineWarning /> : null}\r\n                            color={p.failed > 0 ? \"error\" : \"default\"}\r\n                            label={`Failed: ${p.failed}`}\r\n                          />\r\n                        </Stack>\r\n                      </Paper>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n\r\n              {/* Failed Rows (current upload) */}\r\n              <Box>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                  sx={{ mt: 1 }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{ fontWeight: 700, color: BRAND.navy }}\r\n                  >\r\n                    Failed Records (current upload)\r\n                  </Typography>\r\n                  <Chip\r\n                    size=\"small\"\r\n                    color={failedRows.length ? \"error\" : \"default\"}\r\n                    label={failedRows.length}\r\n                  />\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => setShowFailed((s) => !s)}\r\n                    sx={{ ml: -0.5 }}\r\n                  >\r\n                    {showFailed ? <AiOutlineCaretUp /> : <AiOutlineCaretDown />}\r\n                  </IconButton>\r\n                </Stack>\r\n\r\n                <Collapse in={showFailed} unmountOnExit>\r\n                  {failedRows.length === 0 ? (\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"text.secondary\"\r\n                      sx={{ mt: 1 }}\r\n                    >\r\n                      No failed items for this upload.\r\n                    </Typography>\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        mt: 1,\r\n                        border: \"1px solid #e5e7eb\",\r\n                        borderRadius: 2,\r\n                        overflow: \"hidden\",\r\n                        bgcolor: \"#fff\",\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          display: \"grid\",\r\n                          gridTemplateColumns: \"120px 1fr 1fr\",\r\n                          gap: 1,\r\n                          py: 1,\r\n                          px: 1.5,\r\n                          bgcolor: \"#f9fafb\",\r\n                          borderBottom: \"1px solid #e5e7eb\",\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          sx={{ fontWeight: 700, color: BRAND.navy }}\r\n                        >\r\n                          Type\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          sx={{ fontWeight: 700, color: BRAND.navy }}\r\n                        >\r\n                          Identifiers\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          sx={{ fontWeight: 700, color: BRAND.navy }}\r\n                        >\r\n                          Error\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      {failedRows.slice(0, 20).map((r) => (\r\n                        <Box\r\n                          key={r.id}\r\n                          sx={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"120px 1fr 1fr\",\r\n                            gap: 1,\r\n                            py: 1,\r\n                            px: 1.5,\r\n                            borderBottom: \"1px solid #f1f5f9\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            sx={{ textTransform: \"capitalize\" }}\r\n                          >\r\n                            {r.type}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                            sx={{ pr: 2 }}\r\n                          >\r\n                            {r.type === \"household\" && (\r\n                              <>\r\n                                <b>FFG:</b> {r.ffgId || \"—\"} &nbsp; <b>HH:</b>{\" \"}\r\n                                {r.householdComposite || \"—\"} &nbsp; <b>SF:</b>{\" \"}\r\n                                {r.sfId || \"—\"}\r\n                              </>\r\n                            )}\r\n                            {r.type === \"participant\" && (\r\n                              <>\r\n                                <b>TNS:</b> {r.tnsId || \"—\"} &nbsp; <b>FFG:</b>{\" \"}\r\n                                {r.ffgId || \"—\"} &nbsp; <b>HH:</b>{\" \"}\r\n                                {r.householdComposite || \"—\"}\r\n                              </>\r\n                            )}\r\n                            {r.type === \"attendance\" && (\r\n                              <>\r\n                                <b>FFG:</b> {r.ffgId || \"—\"} &nbsp;{\" \"}\r\n                                <b>Module:</b> {r.moduleId || \"—\"} &nbsp;{\" \"}\r\n                                <b>Part SF:</b>{\" \"}\r\n                                {r.participantSalesforceId || \"—\"} &nbsp;{\" \"}\r\n                                <b>Part TNS:</b> {r.participantTnsId || \"—\"}\r\n                              </>\r\n                            )}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            sx={{\r\n                              color: \"#b91c1c\",\r\n                              whiteSpace: \"nowrap\",\r\n                              overflow: \"hidden\",\r\n                              textOverflow: \"ellipsis\",\r\n                            }}\r\n                            title={r.lastError || \"\"}\r\n                          >\r\n                            {r.lastError || \"—\"}\r\n                          </Typography>\r\n                        </Box>\r\n                      ))}\r\n\r\n                      {failedRows.length > 20 && (\r\n                        <Box\r\n                          sx={{\r\n                            py: 1,\r\n                            textAlign: \"center\",\r\n                            bgcolor: \"#f9fafb\",\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            Showing first 20 of {failedRows.length} failed rows\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                  )}\r\n                </Collapse>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Stack>\r\n      </Paper>\r\n\r\n      {/* Table card */}\r\n      <Paper\r\n        elevation={0}\r\n        sx={{ p: 2.5, borderRadius: 2, bgcolor: \"rgba(8,124,143,0.06)\" }}\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{ mb: 1 }}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            sx={{ fontWeight: 800, color: BRAND.navy }}\r\n          >\r\n            Participants Table\r\n          </Typography>\r\n          {(participantsLoading || attendanceLoading) && (\r\n            <Box sx={{ width: 280 }}>\r\n              <LinearProgress />\r\n            </Box>\r\n          )}\r\n        </Stack>\r\n        <Divider sx={{ mb: 2 }} />\r\n\r\n        {participantsError || attendanceError ? (\r\n          <Box className=\"no__data\">\r\n            <Typography color=\"error\">\r\n              {participantsError?.message || attendanceError?.message}\r\n            </Typography>\r\n          </Box>\r\n        ) : participants.length > 0 ? (\r\n          <Table\r\n            columns={columns}\r\n            data={rows}\r\n            tableRowItem={\"participants\"}\r\n            allAttendances={allAttendances}\r\n            selectedProject={activeProject}\r\n          />\r\n        ) : (\r\n          <div className=\"no__data\">\r\n            <h1 style={{ fontSize: 18, color: BRAND.navy }}>\r\n              No Registered Farmers Yet\r\n            </h1>\r\n          </div>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Upload modal */}\r\n      <UploadParticipantsModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        navigatedProject={\r\n          projects.find((p) => p.sf_project_id === activeProject)?.project_name\r\n        }\r\n        sfProjectId={activeProject}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Participants;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\n\r\n/**\r\n * Polls /api/outbox/progress/:projectId[?runId=...]\r\n * Returns the raw API + convenient derived fields for the UI.\r\n */\r\nexport default function useOutboxProgress(projectId, { intervalMs = 4000, runId } = {}) {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(null);\r\n  const timer = useRef(null);\r\n\r\n  const fetchOnce = async (signal) => {\r\n    if (!projectId) return;\r\n    try {\r\n      setLoading(true);\r\n      setErr(null);\r\n      const url =\r\n        `${process.env.REACT_APP_API_URL}/api/outbox/progress/${encodeURIComponent(projectId)}` +\r\n        (runId ? `?runId=${encodeURIComponent(runId)}` : \"\");\r\n      const res = await fetch(url, { signal });\r\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n      const json = await res.json();\r\n      setData(json);\r\n    } catch (e) {\r\n      if (e.name !== \"AbortError\") {\r\n        console.error(\"outbox/progress error:\", e);\r\n        setErr(e);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ctrl = new AbortController();\r\n    fetchOnce(ctrl.signal);\r\n    timer.current = setInterval(() => fetchOnce(ctrl.signal), intervalMs);\r\n    return () => {\r\n      ctrl.abort();\r\n      if (timer.current) clearInterval(timer.current);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [projectId, runId, intervalMs]);\r\n\r\n  // Derived helpers for the UI\r\n  const derived = useMemo(() => {\r\n    const s = data?.summary || {};\r\n    const phases = data?.phases || {};\r\n    const phaseOrder = [\"households\", \"participants\", \"attendance\"];\r\n    const niceName = {\r\n      households: \"Households\",\r\n      participants: \"Participants\",\r\n      attendance: \"Attendance\",\r\n    };\r\n\r\n    const phaseList = phaseOrder.map((k) => ({\r\n      key: k,\r\n      name: niceName[k],\r\n      ...phases[k],\r\n    }));\r\n\r\n    return {\r\n      isSyncing: Boolean(s.isSyncing),\r\n      overallPercent: typeof s.percent === \"number\" ? s.percent : null,\r\n      totals: {\r\n        total: s.total ?? 0,\r\n        sent: s.sent ?? 0,\r\n        failed: s.failed ?? 0,\r\n        leftToSend: s.leftToSend ?? 0,\r\n      },\r\n      run: data?.run || null,\r\n      failedRows: data?.failed || [],\r\n      phaseList,\r\n      raw: data,\r\n    };\r\n  }, [data]);\r\n\r\n  return {\r\n    loading,\r\n    error: err,\r\n    ...derived,\r\n    refetch: () => fetchOnce(), // convenience\r\n  };\r\n}\r\n","const TimeZone = () => {\r\n  // Get the current date and time\r\n  const now = new Date();\r\n\r\n  // Get the user's timezone\r\n  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n  // Format the date and time according to the user's timezone\r\n  const formattedDate = now.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n\r\n  const formattedTime = now.toLocaleTimeString(\"en-US\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    timeZone: userTimezone,\r\n  });\r\n\r\n  // Output the date and time\r\n  return `${formattedDate}_at_${formattedTime}`;\r\n};\r\n\r\nexport default TimeZone;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./table.css\";\r\n// import FilterContainer from \"../Filter/FilterContainer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\nimport { Button } from \"@mui/material\";\r\nimport { FaFileExport } from \"react-icons/fa\";\r\n// import { ExportToCsv, generateCsv } from \"export-to-csv\";\r\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\r\nimport { utils, writeFile } from \"xlsx\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport TimeZone from \"../../utils/timezone\";\r\n// import FVQAModal from \"../Modals/FVQAModal\";\r\nimport Imagecontainer from \"../../features/training-session/ts-detail/sessionimage/Imagecontainer\";\r\nimport { GET_TRAINING_SESSION_IMAGE } from \"../../graphql/queries/trainingSessionsRequests\";\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: \"30px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\",\r\n      backgroundColor: \"#1b2a4e\" /* Matching sidebar color */,\r\n      color: \"white\",\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: \"5px\",\r\n      paddingRight: \"5px\",\r\n      paddingTop: \"5px\",\r\n      paddingBottom: \"5px\",\r\n    },\r\n  },\r\n};\r\n\r\n// Export Buttons Component\r\nconst ExportButtons = ({\r\n  handleCSVExport,\r\n  handleExcelExport,\r\n  tableRowItem,\r\n}) => (\r\n  <div className=\"export-buttons\">\r\n    {tableRowItem !== \"trainsessionapprov\" && (\r\n      <Button\r\n        variant=\"outlined\"\r\n        sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\r\n        onClick={handleCSVExport}\r\n      >\r\n        <FaFileExport style={{ marginRight: \"5px\" }} /> CSV\r\n      </Button>\r\n    )}\r\n    <Button\r\n      variant=\"outlined\"\r\n      sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\r\n      onClick={handleExcelExport}\r\n    >\r\n      <FaFileExport style={{ marginRight: \"5px\" }} />\r\n      {tableRowItem !== \"trainsessionapprov\" ? \"Excel\" : \"Download Report\"}\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst Table = ({\r\n  columns,\r\n  data,\r\n  filter,\r\n  // setFilter,\r\n  // setFilteredGroups,\r\n  // setFilteredSessions,\r\n  tableRowItem,\r\n  allAttendances,\r\n  // details,\r\n  selectedProject,\r\n}) => {\r\n  const pathName = tableRowItem || window.location.pathname.split(\"/\")[2];\r\n  const [rowDetails, setRowDetails] = useState({ ts_id: null });\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [session_image, setSession_image] = useState(null);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [fvId, setFvId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const imageData = useQuery(GET_TRAINING_SESSION_IMAGE, {\r\n    variables: { tsId: rowDetails && rowDetails.ts_id ? rowDetails.ts_id : \"\" },\r\n    skip: !rowDetails,\r\n  });\r\n\r\n  // Restore original filename variable\r\n  const filename =\r\n    pathName === \"traingroup\"\r\n      ? \"mypima_training_group\"\r\n      : pathName === \"trainsession\"\r\n      ? \"mypima_training_session\"\r\n      : pathName === \"participants\"\r\n      ? \"Participants Data\"\r\n      : pathName === \"farmvisit\"\r\n      ? \"mypima_farm_visit\"\r\n      : \"mypima_attendance\";\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !imageData.loading &&\r\n      imageData.data?.trainingSessionImage?.status === 200\r\n    ) {\r\n      setLoading(false);\r\n      setSession_image(\r\n        imageData.data.trainingSessionImage.trainingSessionImage\r\n      );\r\n    }\r\n  }, [imageData]);\r\n\r\n  const handleOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // const handleCloseModal = () => {\r\n  //   setModalOpen(false);\r\n  // };\r\n\r\n  const handleRowClick = (row) => {\r\n    setRowDetails(row);\r\n\r\n    const idMapping = {\r\n      trainsession: row.ts_id,\r\n      traingroup: row.tg_id,\r\n      participants: row.p_id,\r\n      farmvisit: row.fv_ids,\r\n      trainsessionapprov: row.ts_id,\r\n    };\r\n\r\n    const id = idMapping[tableRowItem] || row.attendance_id;\r\n\r\n    if (tableRowItem !== \"farmvisit\" && tableRowItem !== \"trainsessionapprov\") {\r\n      navigate(`/in/${tableRowItem}/${id}`);\r\n    } else if (tableRowItem === \"farmvisit\") {\r\n      setFvId(row.fv_id);\r\n      handleOpenModal();\r\n    } else if (tableRowItem === \"trainsessionapprov\") {\r\n      setOpen(true);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value.toLowerCase();\r\n    const filteredItems = data.filter((item) =>\r\n      columns.some((column) => {\r\n        const field = item[column.id];\r\n        return field?.toString().toLowerCase().includes(value);\r\n      })\r\n    );\r\n    setFilteredData(filteredItems);\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const handleCSVExport = () => {\r\n    if (!data || data.length === 0) {\r\n      alert(\"No data available for export.\");\r\n      return;\r\n    }\r\n\r\n    let updatedColumns = [...columns];\r\n\r\n    // Add new columns if pathName is \"farmvisit\"\r\n    if (pathName === \"farmvisit\") {\r\n      const newColumns = [\r\n        { id: \"household_tns_id\" },\r\n        { id: \"pima_farmer_id\" },\r\n        { id: \"pima_household_id\" },\r\n      ];\r\n      updatedColumns = [...updatedColumns, ...newColumns];\r\n    }\r\n\r\n    const partsHeaders = [\r\n      \"num\",\r\n      \"Project\",\r\n      \"first_name\",\r\n      \"middle_name\",\r\n      \"last_name\",\r\n      \"gender\",\r\n      \"age\",\r\n      \"coffee_tree_numbers\",\r\n      \"number_of_coffee_plots\",\r\n      \"phone_number\",\r\n      selectedProject === \"a0EOj000002FMGnMAO\" ||\r\n      selectedProject === \"a0EOj000002C7ivMAC\"\r\n        ? \"national_identification_id\"\r\n        : selectedProject === \"a0EOj000003E0knMAC\"\r\n        ? \"growers_number\"\r\n        : \"coop_membership_number\",\r\n      \"location\",\r\n      \"farmer_sf_id\",\r\n      \"tns_id\",\r\n      \"hh_number\",\r\n      \"sf_household_id\",\r\n      \"farmer_number\",\r\n      \"ffg_id\",\r\n      \"training_group\",\r\n      \"status\",\r\n      \"farmer_trainer\",\r\n      selectedProject === \"a0EOj000003E0knMAC\"\r\n        ? \"agronomy_advisor\"\r\n        : \"business_advisor\",\r\n      \"create_in_commcare\",\r\n    ];\r\n\r\n    if (tableRowItem === \"participants\") {\r\n      const monthlyAttendanceMap = new Map();\r\n      const filteredAttendances = allAttendances.filter((attendance) =>\r\n        data.some(\r\n          (participant) => participant.p_id === attendance.participant_id\r\n        )\r\n      );\r\n\r\n      filteredAttendances.forEach((attendance) => {\r\n        const {\r\n          attendance_status,\r\n          participant_id,\r\n          module_number,\r\n          module_name,\r\n          module_id,\r\n        } = attendance;\r\n\r\n        const key = `${module_number}-${module_name}-${module_id}`;\r\n\r\n        if (!monthlyAttendanceMap.has(key)) {\r\n          monthlyAttendanceMap.set(key, {});\r\n        }\r\n\r\n        const monthlyAttendance = monthlyAttendanceMap.get(key);\r\n        monthlyAttendance[participant_id] =\r\n          attendance_status === \"Present\" ? \"1\" : \"0\";\r\n      });\r\n\r\n      for (const [monthKey] of monthlyAttendanceMap) {\r\n        partsHeaders.push(monthKey);\r\n      }\r\n\r\n      const csvRows =\r\n        searchText.length > 0\r\n          ? filteredData.map((participant) => {\r\n              const rowData = { ...participant };\r\n              for (const [\r\n                monthKey,\r\n                monthlyAttendance,\r\n              ] of monthlyAttendanceMap) {\r\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\r\n              }\r\n              return rowData;\r\n            })\r\n          : data.map((participant) => {\r\n              const rowData = { ...participant };\r\n              for (const [\r\n                monthKey,\r\n                monthlyAttendance,\r\n              ] of monthlyAttendanceMap) {\r\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\r\n              }\r\n              return rowData;\r\n            });\r\n\r\n      data = csvRows;\r\n    }\r\n\r\n    // Remove unnecessary keys from the data\r\n    const sanitizedData = data.map(\r\n      ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\r\n        rest\r\n    );\r\n\r\n    // Step 1: Create the configuration for CSV\r\n    const config = mkConfig({\r\n      // fieldSeparator: \",\",\r\n      // quoteStrings: '\"',\r\n      // decimalSeparator: \".\",\r\n      // showLabels: true,\r\n      // useBom: true,\r\n      filename: filename,\r\n      columnHeaders: tableRowItem === \"participants\" ? partsHeaders : updatedColumns.map((column) => column.id)\r\n    });\r\n\r\n    // Step 2: Generate CSV string content\r\n    const csvContent = generateCsv(config)(sanitizedData);\r\n\r\n    if (!csvContent) {\r\n      console.error(\"Output is empty. Is your data formatted correctly?\");\r\n      return;\r\n    }\r\n\r\n    // Step 3: Trigger CSV file download\r\n    download(config)(csvContent);\r\n  };\r\n\r\n  const handleExcelExport = () => {\r\n    const sheetName = \"Sessions Data\";\r\n    const summarySheetName = \"Summary by Trainer\";\r\n\r\n    const sessionsData = {\r\n      header: columns.map((column) => column.id),\r\n      body: data.map(\r\n        ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\r\n          Object.values(rest)\r\n      ),\r\n    };\r\n\r\n    const trainerSummary = data.reduce(\r\n      (acc, { farmer_trainer, session_image_status }) => {\r\n        const key = `${farmer_trainer}_${session_image_status}`;\r\n        if (!acc[key]) {\r\n          acc[key] = { farmer_trainer, session_image_status, count: 0 };\r\n        }\r\n        acc[key].count += 1;\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n\r\n    const summaryData = Object.values(trainerSummary);\r\n\r\n    const trainerSummaryData = {\r\n      header: [\"farmer_trainer\", \"session_image_status\", \"count\"],\r\n      body: summaryData.map((data) => Object.values(data)),\r\n    };\r\n\r\n    const workbook = utils.book_new();\r\n    const sessionsWorksheet = utils.json_to_sheet(\r\n      [sessionsData.header, ...sessionsData.body],\r\n      { skipHeader: true }\r\n    );\r\n    const summaryWorksheet = utils.json_to_sheet(\r\n      [trainerSummaryData.header, ...trainerSummaryData.body],\r\n      { skipHeader: true }\r\n    );\r\n\r\n    utils.book_append_sheet(workbook, summaryWorksheet, summarySheetName);\r\n    utils.book_append_sheet(workbook, sessionsWorksheet, sheetName);\r\n\r\n    writeFile(workbook, `${filename}_${TimeZone()}.xlsx`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`table-header-actions ${!filter ? \"no-filter\" : \"\"}`}>\r\n        {/* Filter Button (if filter exists) */}\r\n        {filter && <Button className=\"filter-button\">Filter</Button>}\r\n\r\n        {/* Search and Export Buttons */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              value={searchText}\r\n              onChange={handleSearch}\r\n            />\r\n            <span className=\"search-icon\">\r\n              <BiSearchAlt />\r\n            </span>\r\n          </div>\r\n\r\n          {/* Export Buttons */}\r\n          <ExportButtons\r\n            handleCSVExport={handleCSVExport}\r\n            handleExcelExport={handleExcelExport}\r\n            tableRowItem={tableRowItem}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <DataTable\r\n        columns={columns}\r\n        data={searchText.length > 0 ? filteredData : data}\r\n        onRowClicked={handleRowClick}\r\n        pagination\r\n        highlightOnHover\r\n        customStyles={customStyles}\r\n        className=\"table-container\"\r\n      />\r\n\r\n      {/* TODO: REIMPLEMENT THIS */}\r\n      {/* <FVQAModal\r\n        open={modalOpen}\r\n        handleClose={handleCloseModal}\r\n        fvId={fvId}\r\n        details={details}\r\n        rowDetails={rowDetails}\r\n      /> */}\r\n\r\n      {open && (\r\n        <Imagecontainer\r\n          open={open}\r\n          handleClose={() => setOpen(false)}\r\n          id={rowDetails.ts_id}\r\n          data={rowDetails}\r\n          isVerified={rowDetails.is_verified}\r\n          imageStatus={rowDetails.session_image_status}\r\n          sessionImageUrl={session_image}\r\n          selectedProject={selectedProject}\r\n          loading={loading}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  // Button,\r\n  DialogContent,\r\n  // DialogActions,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { MdClose, MdFullscreen, MdFullscreenExit } from \"react-icons/md\";\r\nimport { styled } from \"@mui/material/styles\";\r\n// import { useMutation, useQuery } from \"@apollo/client\";\r\n// import {\r\n//   GET_TRAINING_SESSIONS_PER_PROJECT,\r\n//   VALIDATE_TRAINING_SESSION,\r\n// } from \"../../../graphql/queries/trainingSessionsRequests\";\r\n// import { toast } from \"react-hot-toast\";\r\n// import { BeatLoader } from \"react-spinners\";\r\n\r\n// const StyledButton = styled(Button)(({ theme }) => ({\r\n//   marginBottom: \"10px\",\r\n//   marginRight: \"10px\",\r\n//   textTransform: \"initial\",\r\n//   backgroundColor: \"rgba(23, 177, 94, 1)\",\r\n//   color: \"#fff\",\r\n//   fontSize: \"12px\",\r\n\r\n//   \"&:hover\": {\r\n//     backgroundColor: \"rgba(23, 177, 94, 0.5)\",\r\n//     transition: \"background-color 0.3s ease-in-out\",\r\n//   },\r\n// }));\r\n\r\n// const StyledButton2 = styled(Button)(({ theme }) => ({\r\n//   marginBottom: \"10px\",\r\n//   marginRight: \"10px\",\r\n//   textTransform: \"initial\",\r\n//   fontSize: \"12px\",\r\n//   color: \"rgba(200, 27, 27, 1)\",\r\n//   borderColor: \"rgba(200, 27, 27, 1)\",\r\n\r\n//   \"&:hover\": {\r\n//     backgroundColor: \"rgba(235, 87, 87, 0.1)\",\r\n//     transition: \"background-color 0.3s ease-in-out\",\r\n//     borderColor: \"rgba(200, 27, 27, 1)\",\r\n//   },\r\n//   \".MuiButton-outlined\": {\r\n//     color: \"rgba(235, 87, 87, 1)\",\r\n//   },\r\n// }));\r\n\r\nconst LoadingOverlay = styled(\"div\")({\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"rgba(255, 255, 255, 0.7)\",\r\n  zIndex: 9999,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n});\r\n\r\nconst Imagecontainer = ({\r\n  open,\r\n  handleClose,\r\n  sessionImageUrl,\r\n  // id,\r\n  data,\r\n  // isVerified,\r\n  // imageStatus,\r\n  selectedProject,\r\n  loading,\r\n}) => {\r\n  console.log(data);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [isLoading] = useState(false);\r\n  // const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\r\n\r\n  // const [validateSession] = useMutation(VALIDATE_TRAINING_SESSION);\r\n\r\n  // const trainingSessionsPerProject = useQuery(\r\n  //   GET_TRAINING_SESSIONS_PER_PROJECT,\r\n  //   {\r\n  //     variables: { sfProjectId: selectedProject },\r\n  //   }\r\n  // );\r\n\r\n  const toggleExpand = () => {\r\n    setIsExpanded((prev) => !prev);\r\n  };\r\n\r\n  // const handleSessionValidation = async (id, session_image_status) => {\r\n  //   setIsLoading(true);\r\n\r\n  //   try {\r\n  //     await validateSession({\r\n  //       variables: {\r\n  //         tsId: id,\r\n  //         status: session_image_status,\r\n  //       },\r\n  //     });\r\n\r\n  //     // refetch training sessions\r\n  //     trainingSessionsPerProject\r\n  //       .refetch()\r\n  //       .then(() => {\r\n  //         toast.success(\"Session validated successfully\");\r\n  //         setIsLoading(false);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n\r\n  //         toast.error(\"Error validating session\");\r\n  //       });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n\r\n  //     toast.error(\"Error validating session\");\r\n\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Dialog\r\n          open={open}\r\n          keepMounted\r\n          fullWidth\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <div style={{ margin: \"20px\" }}>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: \"#2b2b2b\",\r\n              }}\r\n            >\r\n              <MdClose />\r\n            </IconButton>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n            <Typography variant=\"h6\" style={{ marginLeft: \"10px\" }}>\r\n              Loading Image...\r\n            </Typography>\r\n          </div>\r\n        </Dialog>\r\n      ) : (\r\n        <Dialog\r\n          open={open}\r\n          keepMounted\r\n          fullWidth\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          {isLoading && (\r\n            <LoadingOverlay>\r\n              <CircularProgress />\r\n            </LoadingOverlay>\r\n          )}\r\n          <div style={{ margin: \"20px\" }}>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: \"#2b2b2b\",\r\n              }}\r\n            >\r\n              <MdClose />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">Session Image</Typography>\r\n          </div>\r\n\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Male Attendees:</strong> {data.total_males}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Female Attendees:</strong> {data.total_females}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Total Attendees:</strong>{\" \"}\r\n                  {data.total_males + data.total_females}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Session Date:</strong> {data.session_date}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Farmer Trainer:</strong> {data.farmer_trainer}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Session Module:</strong> {data.ts_module}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>FFG:</strong> {data.ts_group}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <div style={{ position: \"relative\" }}>\r\n                  <img\r\n                    src={sessionImageUrl}\r\n                    alt=\"session_pic\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"auto\",\r\n                      cursor: isExpanded ? \"zoom-out\" : \"zoom-in\",\r\n                    }}\r\n                    onClick={toggleExpand}\r\n                  />\r\n                  {isExpanded ? (\r\n                    <IconButton\r\n                      aria-label=\"shrink\"\r\n                      onClick={toggleExpand}\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        bottom: 8,\r\n                        right: 8,\r\n                        color: \"#fff\",\r\n                      }}\r\n                    >\r\n                      <MdFullscreenExit />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <IconButton\r\n                      aria-label=\"expand\"\r\n                      onClick={toggleExpand}\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        bottom: 8,\r\n                        right: 8,\r\n                        color: \"#fff\",\r\n                      }}\r\n                    >\r\n                      <MdFullscreen />\r\n                    </IconButton>\r\n                  )}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          {/* <DialogActions>\r\n            {(userDetails?.role === \"super_admin\" ||\r\n              userDetails?.role === \"ci_leadership\" ||\r\n              userDetails?.role === \"project_manager\" ||\r\n              userDetails?.role === \"mel_analyst\") &&\r\n              (!isVerified || imageStatus === \"not_verified\") && (\r\n                <>\r\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"invalid\")} variant=\"outlined\" disabled={isLoading}>\r\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Invalid\"}\r\n                  </StyledButton2>\r\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"unclear\")} variant=\"outlined\" disabled={isLoading}>\r\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Unclear\"}\r\n                  </StyledButton2>\r\n                  <StyledButton onClick={() => handleSessionValidation(id, \"approved\")} disabled={isLoading}>\r\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Approve\"}\r\n                  </StyledButton>\r\n                </>\r\n              )}\r\n          </DialogActions> */}\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imagecontainer;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT = gql`\r\n  query GetParticipantsAttendanceByProject($projectId: String!) {\r\n    getParticipantsByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        age\r\n        coffee_tree_numbers\r\n        coop_membership_number\r\n        phone_number\r\n        hh_number\r\n        ffg_id\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n        create_in_commcare\r\n      }\r\n    }\r\n    getAttendances(project_id: $projectId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_name\r\n        attendance_date\r\n        attendance_status\r\n        session_id\r\n        module_name\r\n        module_number\r\n        module_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANTS_PER_PROJECT = gql`\r\n  query GetParticipantsAttendanceByProject($projectId: String!) {\r\n    getParticipantsByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        age\r\n        coffee_tree_numbers\r\n        number_of_coffee_plots\r\n        coop_membership_number\r\n        phone_number\r\n        hh_number\r\n        ffg_id\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n        create_in_commcare\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANTS_PER_TG = gql`\r\n  query GetParticipantsByGroup($tgId: String!) {\r\n    getParticipantsByGroup(tg_id: $tgId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANT_BY_ID = gql`\r\n  query GetParticipantsById($id: String!) {\r\n    getParticipantsById(p_id: $id) {\r\n      message\r\n      status\r\n      participant {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ATTENDANCE_PER_PARTICIPANT = gql`\r\n  query GetAttendanceByParticipant($participantId: String!) {\r\n    getAttendanceByParticipant(participant_id: $participantId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_name\r\n        attendance_date\r\n        attendance_status\r\n        module_name\r\n        session_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPLOAD_PARTICIPANTS = gql`\r\n  mutation UploadParticipants($partsFile: Upload!, $projectId: String!) {\r\n    uploadParticipants(parts_file: $partsFile, project_id: $projectId) {\r\n      message\r\n      status\r\n      file\r\n    }\r\n  }\r\n`;\r\n\r\nconst SYNC_PARTICIPANTS_WITH_COMMCARE = gql`\r\n  mutation SyncParticipantsWithCOMMCARE($projectId: String!) {\r\n    syncParticipantsWithCOMMCARE(project_id: $projectId) {\r\n      message\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  GET_PARTICIPANTS_PER_TG,\r\n  GET_ATTENDANCE_PER_PARTICIPANT,\r\n  UPLOAD_PARTICIPANTS,\r\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\r\n  GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT,\r\n  GET_PARTICIPANT_BY_ID\r\n};\r\n"],"names":["BRAND","requiredColumns","_ref","open","setOpen","navigatedProject","sfProjectId","fileInfo","setFileInfo","useState","file","setFile","loadedColumns","setLoadedColumns","distinctProjects","setDistinctProjects","uploadResult","setUploadResult","isProcessing","setIsProcessing","uploadParticipants","useMutation","UPLOAD_PARTICIPANTS","participantsPerProject","useQuery","GET_PARTICIPANTS_PER_PROJECT","variables","projectId","skip","useEffect","data","length","idx","indexOf","values","map","r","filter","Boolean","Set","reset","validColumnsCount","c","includes","showRequiredColsError","emptyFile","projectMismatch","recordCountForActiveProject","useMemo","Math","max","_jsxs","Dialog","onClose","_","fullWidth","maxWidth","children","_jsx","DialogTitle","sx","pb","color","DialogContent","pt","Paper","elevation","p","Alert","severity","status","mb","message","Button","onClick","handleDownloadErrors","bin","atob","bytes","Uint8Array","charCodeAt","blob","Blob","type","saveAs","variant","bgcolor","Stack","direction","spacing","alignItems","BiErrorAlt","size","Typography","fontWeight","Box","display","flexWrap","gap","Chip","label","startIcon","AiOutlineCloseCircle","filename","toFixed","Divider","my","mt","disabled","borderColor","FaCloudUploadAlt","async","newFile","createProjectSpecificFile","rows","csv","join","File","res","partsFile","refetch","e","console","error","border","borderRadius","FileUploader","handleChange","f","reader","FileReader","onload","lines","target","result","split","row","replace","name","readAsText","types","DialogActions","GET_ALL_ATTENDANCES","gql","Participants","_participantData$getP2","_participantData$getP3","_attendanceData$getAt","_attendanceData$getAt2","_projects$find2","_projects$find3","activeProject","trainingGroups","projects","useOutletContext","sendToCcCount","setSendToCcCount","isSyncingCommCare","setIsSyncingCommCare","showFailed","setShowFailed","isSyncing","overallPercent","phaseList","totals","run","failedRows","intervalMs","runId","arguments","undefined","setData","loading","setLoading","err","setErr","timer","useRef","fetchOnce","url","encodeURIComponent","fetch","signal","ok","Error","json","ctrl","AbortController","current","setInterval","abort","clearInterval","_s$total","_s$sent","_s$failed","_s$leftToSend","s","summary","phases","niceName","households","participants","attendance","k","key","percent","total","sent","failed","leftToSend","raw","useOutboxProgress","participantData","participantsLoading","participantsError","refetchParticipants","fetchPolicy","attendanceData","attendanceLoading","attendanceError","SyncParticipants","SYNC_PARTICIPANTS_WITH_COMMCARE","userDetails","JSON","parse","window","localStorage","getItem","_participantData$getP","getParticipantsByProject","pending","String","create_in_commcare","toLowerCase","handleSendToCommCare","allAttendances","getAttendances","canUpload","role","participant","index","_projects$find","_trainingGroups$find","num","Project","find","sf_project_id","project_name","p_id","first_name","middle_name","last_name","gender","age","coffee_tree_numbers","phone_number","farmer_sf_id","hh_number","sf_household_id","household_id","ffg_id","location","tns_id","training_group","tg","tg_id","tg_name","farmer_number","primary_household_member","farmer_trainer","number_of_coffee_plots","business_advisor","agronomy_advisor","growers_number","coop_membership_number","national_identification_id","columns","id","selector","sortable","flexDirection","background","justifyContent","lineHeight","opacity","Tooltip","title","borderWidth","borderStyle","borderLeft","fileName","AiOutlineFileText","fileUrl","Link","href","rel","underline","_Fragment","LinearProgress","value","height","startedAt","Date","toLocaleString","Grid","container","pct","round","item","xs","md","processing","icon","AiOutlineWarning","IconButton","ml","AiOutlineCaretUp","AiOutlineCaretDown","Collapse","in","unmountOnExit","overflow","gridTemplateColumns","py","px","borderBottom","slice","textTransform","pr","ffgId","householdComposite","sfId","tnsId","moduleId","participantSalesforceId","participantTnsId","whiteSpace","textOverflow","lastError","textAlign","width","className","Table","tableRowItem","selectedProject","style","fontSize","UploadParticipantsModal","TimeZone","now","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","second","customStyles","minHeight","cursor","headCells","paddingLeft","paddingRight","backgroundColor","cells","paddingTop","paddingBottom","ExportButtons","handleCSVExport","handleExcelExport","FaFileExport","marginRight","_ref2","pathName","pathname","rowDetails","setRowDetails","ts_id","session_image","setSession_image","searchText","setSearchText","filteredData","setFilteredData","modalOpen","setModalOpen","fvId","setFvId","navigate","useNavigate","imageData","GET_TRAINING_SESSION_IMAGE","tsId","_imageData$data","_imageData$data$train","trainingSessionImage","placeholder","onChange","filteredItems","some","column","field","toString","BiSearchAlt","alert","updatedColumns","newColumns","partsHeaders","monthlyAttendanceMap","Map","participant_id","forEach","attendance_status","module_number","module_name","module_id","has","set","get","monthKey","push","csvRows","rowData","monthlyAttendance","sanitizedData","_ref3","attendance_id","fv_id","__typename","rest","config","mkConfig","columnHeaders","csvContent","generateCsv","download","sessionsData","header","body","_ref4","Object","trainerSummary","reduce","acc","_ref5","session_image_status","count","trainerSummaryData","workbook","utils","book_new","sessionsWorksheet","json_to_sheet","skipHeader","summaryWorksheet","book_append_sheet","writeFile","DataTable","onRowClicked","trainsession","traingroup","farmvisit","fv_ids","trainsessionapprov","pagination","highlightOnHover","Imagecontainer","handleClose","isVerified","is_verified","imageStatus","sessionImageUrl","LoadingOverlay","styled","position","top","left","right","bottom","zIndex","log","isExpanded","setIsExpanded","isLoading","toggleExpand","prev","keepMounted","margin","MdClose","CircularProgress","marginLeft","sm","total_males","total_females","session_date","ts_module","ts_group","src","alt","MdFullscreenExit","MdFullscreen","GET_PARTICIPANTS_PER_TG","GET_PARTICIPANT_BY_ID","GET_ATTENDANCE_PER_PARTICIPANT"],"sourceRoot":""}