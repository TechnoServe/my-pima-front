{"version":3,"file":"static/js/608.3b9fc846.chunk.js","mappings":"qJAgBA,IAbsB,WACpB,OACEA,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBACfE,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAACH,UAAU,UAAUI,KAAM,GAAIC,UAAW,IAAKC,MAAO,CAAEC,MAAO,iBAElFL,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBAGV,C,gFCOA,EAlBkB,SAAHO,GAA2C,IAArCC,EAAOD,EAAPC,QAASC,EAAOF,EAAPE,QAASC,EAAIH,EAAJG,KAAMJ,EAAKC,EAALD,MAC3C,OACEL,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SAAEQ,KAC5BP,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SAAES,QAE9BX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAaM,MAAO,CAAEM,gBAAiBL,GAAQN,SAAA,CAC3DU,EAAM,aAMnB,C,uRC6BA,EA3CmB,SAAHH,GAA6B,IAAvBK,EAAeL,EAAfK,gBAEdC,EAAY,CAChB,CACEL,QAAS,gBACTC,QAASG,EAAgBE,OACzBJ,MAAMT,EAAAA,EAAAA,KAACc,EAAAA,GAAQ,IACfT,MAAO,WAET,CACEE,QAAS,iBACTC,QAASG,EAAgBI,QACvB,SAACC,GAAO,OAAqC,OAAhCA,EAAQC,mBAA4B,IACjDJ,OACFJ,MAAMT,EAAAA,EAAAA,KAACc,EAAAA,GAAQ,IACfT,MAAO,WAET,CACEE,QAAS,eACTC,QAASG,EAAgBI,QACvB,SAACC,GAAO,OAAqC,OAAhCA,EAAQC,mBAA4B,IACjDJ,OACFJ,MAAMT,EAAAA,EAAAA,KAACkB,EAAAA,IAAmB,IAC1Bb,MAAO,YAIX,OACER,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAEe,MAAO,OAAQC,aAAc,OAAQC,QAAS,QAAStB,SAAA,CAClEa,EAAUU,KAAI,SAACC,EAAMC,GAAK,OACzBxB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRlB,QAASgB,EAAKhB,QACdC,QAASe,EAAKf,QACdC,KAAMc,EAAKd,KACXJ,MAAOkB,EAAKlB,SALNmB,EAOJ,IACJ,MAGV,E,2CC0WA,EApYkB,SAAHlB,GAAqC,IAA/BoB,EAAepB,EAAfoB,gBAAiBC,EAAMrB,EAANqB,OACpCC,GAA0CC,EAAAA,EAAAA,GAASC,EAAAA,GAAsB,CACvEC,UAAW,CAAEC,UAAWN,GACxBO,YAAa,iBAFPV,EAAIK,EAAJL,KAAMW,EAAON,EAAPM,QAASC,EAAKP,EAALO,MAAOC,EAAOR,EAAPQ,QAK9BC,GAAoDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDI,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAChDI,GAAgDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA8BC,EAAAA,EAAAA,GAAYC,EAAAA,IAAnCC,GAAgDV,EAAAA,EAAAA,GAAAO,EAAA,GAA7B,GAC1BI,GAAgDb,EAAAA,EAAAA,UAAS,CAAC,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAoCjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8CrB,EAAAA,EAAAA,UAAS,MAAKsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAArDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA0CzB,EAAAA,EAAAA,UAAS,CAAC,GAAE0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,GAAgBF,EAAA,GACtCG,IAAoC7B,EAAAA,EAAAA,WAAS,GAAM8B,IAAA5B,EAAAA,EAAAA,GAAA2B,GAAA,GAA5CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAA0CjC,EAAAA,EAAAA,UAAS,MAAKkC,IAAAhC,EAAAA,EAAAA,GAAA+B,GAAA,GAAjDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GAChCG,IAASC,EAAAA,EAAAA,QAAO,OAEtBC,EAAAA,EAAAA,YAAU,WACJpB,GAAckB,GAAOG,SACvBC,YAAW,WACTJ,GAAOG,QAAQE,gBACjB,GAAG,IAEP,GAAG,CAACvB,KAEJoB,EAAAA,EAAAA,YAAU,WACR,GAAItD,EAAM,CACRmB,EAAsBnB,EAAK0D,yBAC3B,IAAMC,EAAsB3D,EAAK0D,wBAAwBE,QACvD,SAACC,EAAKpE,GAEJ,OADAoE,EAAIpE,EAAQqE,KAAM,EACXD,CACT,GACA,CAAC,GAEHlB,GAAiBgB,GAGjB,IAAMI,EAAW/D,EAAK0D,wBAAwBlE,QAC5C,SAACC,GAAO,OAAqC,OAAhCA,EAAQC,mBAA4B,IAEnD6B,EAAoBwC,EACtB,CACF,GAAG,CAAC/D,IAEJ,IAOMgE,GAAyB,WAC7B,OAAO1C,EACJ2C,MAAM,EAxDI,GAyDVC,OAAM,SAACzE,GAAO,OAAKqC,EAAiBrC,EAAQqE,GAAG,GACpD,EA0IMK,GAAgB7B,EAClB,CAAE8B,IAAK9B,EAAgB+B,YAAaC,IAAKhC,EAAgBiC,cACzD,CAAEH,KAAM,OAAQE,IAAK,SAInBE,IAAStF,EAAAA,EAAAA,MAAK,CAClBuF,QACE,2EACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,EAAE,GAAI,MAGrB,GAAIjE,EAAS,OAAOlC,EAAAA,EAAAA,KAACoG,EAAAA,EAAa,IAElC,GAAIjE,EACF,OACEnC,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACLiB,QAAS,OACTgF,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SACRxG,UAEFC,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAACnG,MAAM,QAAON,SAAC,yBAKhC,IAAM0G,GAA6C,IAA5B5D,EAAiBhC,OAExC,OACEhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EAEnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,+BAEhCC,EAAAA,EAAAA,KAAC0G,EAAU,CAAC/F,gBAAiB8B,QAG/BzC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,yBAAyB6G,QA7HlB,WAC3B,GAAKlE,EAAL,CAMA,IAAMmE,EAAgBnE,EAAmB0C,QAAO,SAACC,EAAKpE,GACpD,IAAM6F,EAAU7F,EAAQ8F,oBAClBC,EAAS/F,EAAQC,oBACnBD,EAAQC,oBACR,UAOJ,OALKmE,EAAIyB,KACPzB,EAAIyB,GAAW,CAAEG,SAAU,EAAGC,QAAS,EAAGC,QAAS,EAAGC,QAAS,IAGjE/B,EAAIyB,GAASE,KACN3B,CACT,GAAG,CAAC,GAEEgC,EAAQ,CACZ,CAAC,iBAAkB,WAAY,UAAW,UAAW,YAAUC,QAAAC,EAAAA,EAAAA,GAC5DC,OAAOC,QAAQZ,GAAetF,KAAI,SAAAmG,GAAA,IAAAC,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAAEZ,EAAOa,EAAA,GAAEC,EAAMD,EAAA,SAAM,CAC1Db,EACAc,EAAOX,SACPW,EAAOV,QACPU,EAAOT,QACPS,EAAOR,QACR,MAIGS,EAAQ,CACZ,CACE,kBACA,UACA,aACA,OACA,SACA,QACA,OACA,cACDP,QAAAC,EAAAA,EAAAA,GACE7E,EACA1B,QAAO,SAACC,GAAO,MAAqC,aAAhCA,EAAQC,mBAAkC,IAC9DK,KAAI,SAACN,GAAa,IAAD6G,EAChBC,GACS,OAAP9G,QAAO,IAAPA,GAA0B,QAAnB6G,EAAP7G,EAAS+G,yBAAiB,IAAAF,OAAnB,EAAPA,EAA4BG,MAAM,KAAKxC,OAAO,KAAM,GAAEyC,GAAAzF,EAAAA,EAAAA,GAAAsF,EAAA,GADjDI,EAAMD,EAAA,GAAEE,EAAOF,EAAA,GAEtB,MAAO,CACLjH,EAAQoH,qBACRpH,EAAQ8F,oBACR9F,EAAQqH,iBACRrH,EAAQsH,gBACRtH,EAAQuH,kBACRvH,EAAQwH,SACRC,EAAAA,EAAAA,GAAO,IAAIC,KAAK1H,EAAQ2H,cAAe,iBAAiB,GAADtB,OACpDuB,uBAA6B,WAAAvB,OAAUa,EAAM,KAAAb,OAAIc,GAExD,MAIEU,EAAWC,EAAAA,GAAWC,WACtBC,EAAaF,EAAAA,GAAWG,aAAa7B,GACrC8B,EAAaJ,EAAAA,GAAWG,aAAarB,GAG3CkB,EAAAA,GAAWK,kBAAkBN,EAAUG,EAAY,oBACnDF,EAAAA,GAAWK,kBAAkBN,EAAUK,EAAY,qBAGnD,IAAME,EAAcN,EAAAA,GAAWD,EAAU,CACvCQ,SAAU,OACVC,KAAM,UAEFC,EAAO,IAAIC,KAAK,CAACJ,GAAc,CAAEE,KAAM,8BAG7CG,EAAAA,EAAAA,QAAOF,EAAM,iCACbG,EAAAA,GAAMC,QAAQ,uCA5Ed,MAFED,EAAAA,GAAMvH,MAAM,oDA+EhB,EA4C6EpC,SAAC,0BAKzE0G,IACCzG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,MAAII,MAAO,CAAEwJ,SAAU,QAAS7J,SAAC,gEAKnCF,EAAAA,EAAAA,MAAAgK,EAAAA,SAAA,CAAA9J,SAAA,EAEEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAC,qBACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAC1B8C,EAAiB2C,MAAM,EA9PnB,GA8PgClE,KAAI,SAACN,GAAa,IAAD8I,EACpDC,GACS,OAAP/I,QAAO,IAAPA,GAA0B,QAAnB8I,EAAP9I,EAAS+G,yBAAiB,IAAA+B,OAAnB,EAAPA,EAA4B9B,MAAM,KAAKxC,OAAO,KAAM,GAAEwE,GAAAxH,EAAAA,EAAAA,GAAAuH,EAAA,GADjD7B,EAAM8B,EAAA,GAAE7B,EAAO6B,EAAA,GAEtB,OACEnK,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,eAAcC,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC3BkE,EAAckE,KAAYnI,EAAAA,EAAAA,KAACoG,EAAAA,EAAa,KACzCpG,EAAAA,EAAAA,KAAA,OACEiK,IACS,OAAPjJ,QAAO,IAAPA,GAAAA,EAAS+G,kBAAiB,GAAAV,OACnBuB,uBAA6B,WAAAvB,OAAUa,EAAM,KAAAb,OAAIc,GACpD,KAEN+B,IAAI,UACJvD,QAAS,kBA9KJ,SAACuB,EAAQC,GAChCzD,GAAiB,GAAD2C,OACXuB,uBAA6B,WAAAvB,OAAUa,EAAM,KAAAb,OAAIc,GAExD,CA0KmCgC,CAAiBjC,EAAQC,EAAQ,QAGpDtI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKiB,EAAQoH,wBACbvI,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAiB,IAAEiB,EAAQ8F,wBAErCjH,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,sBAA2B,IAClCiB,EAAQqH,qBAEXxI,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAA0B,IACjCiB,EAAQsH,oBAEXzI,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBAA4B,IACnCiB,EAAQuH,sBAEX1I,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAAwB,KAC/B0I,EAAAA,EAAAA,GAAO,IAAIC,KAAK1H,EAAQ2H,cAAe,qBAE1C9I,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,yBAA6B,IAAEiB,EAAQwH,eAGnD3I,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,MAAA,UACEuK,SAAU,SAACC,GAAC,OA5PHC,EA6PetJ,EAAQqE,GA7PZ0B,EA6PgBsD,EAAEE,OAAOC,WA5PjElH,GAAoB,SAACmH,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GACNL,EAAYvD,GAAM,IAHO,IAACuD,EAAWvD,CA6P+B,EAClDhH,SAAA,EAEDC,EAAAA,EAAAA,KAAA,UAAQwK,MAAM,GAAEzK,SAAC,kBACjBC,EAAAA,EAAAA,KAAA,UAAQwK,MAAM,WAAUzK,SAAC,aACzBC,EAAAA,EAAAA,KAAA,UAAQwK,MAAM,UAASzK,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UAAQwK,MAAM,UAASzK,SAAC,kBAG5BC,EAAAA,EAAAA,KAAA,UACEF,UAAU,kBACV6G,QAAS,kBA/MF,SAAC3F,GAC1B8C,EAAmB9C,GACnB0C,GAAc,EAChB,CA4MmCkH,CAAmB5J,EAAQ,EAACjB,SAC5C,kBAtDKiB,EAAQqE,GA4DtB,OAGFrF,EAAAA,EAAAA,KAAA,UACEF,UAAU,gBACV6G,QAvQgB,WACxB,GAAKpB,KAAL,CAKA,IAAMsF,EAAatD,OAAOC,QAAQnE,GAAkB/B,KAClD,SAAAwJ,GAAA,IAAAC,GAAAvI,EAAAA,EAAAA,GAAAsI,EAAA,GAAmB,MAAO,CACxBR,UADSS,EAAA,GAEThE,OAFiBgE,EAAA,GAGjBpJ,OAAAA,EACD,IAGEkJ,EAAWhK,QAKhByD,IAAc,GACdpB,EAAoB,CAAEnB,UAAW,CAAEiJ,MAAOH,KACvCI,MAAK,WACJ3H,EAAoB,CAAC,GACrBlB,IACAkC,IAAc,GACdoF,EAAAA,GAAMC,QAAQ,gCAChB,IACCuB,OAAM,SAAC/I,GACNmC,IAAc,GACd6G,QAAQhJ,MAAM,0BAA2BA,GACzCuH,EAAAA,GAAMvH,MAAM,gDACd,KAhBAuH,EAAAA,GAAMvH,MAAM,gDAXd,MAFEuH,EAAAA,GAAMvH,MAAM,gDA8BhB,EAwOUiJ,SAAU/G,KAAekB,KAAyBxF,SAEjDsE,GAAa,gBAAkB,oBAMrCZ,IACCzD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SACG8D,EACGA,EAAgBuE,qBAChB,cAENpI,EAAAA,EAAAA,KAAA,UACE2G,QAAS,kBAAMjD,GAAc,EAAM,EACnC5D,UAAU,qBAAoBC,SAC/B,aAIHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAACwL,EAAAA,EAAY,CACXC,OAAQ5F,GACR6F,KAAM,EACNC,iBAAiB,EACjBpL,MAAO,CAAEmG,OAAQ,QAASpF,MAAO,QACjCsK,YAAa,SAACC,GAAW,OAAM/G,GAAOG,QAAU4G,CAAW,EAAG3L,SAAA,EAG9DC,EAAAA,EAAAA,KAAC2L,EAAAA,EAAS,CACRC,IAAG,iMACHC,YAAY,uJAGd7L,EAAAA,EAAAA,KAAC8L,EAAAA,EAAM,CAACC,SAAUrG,GAAejF,KAAMsF,GAAOhG,UAC5CF,EAAAA,EAAAA,MAACmM,EAAAA,EAAK,CAAClM,UAAU,eAAcC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAAA,KAAAD,SACG8D,EACGA,EAAgBoI,SAChB,oCAWrBxH,KACCzE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAc6G,QA1RX,WACtBjC,GAAiB,KACnB,EAwR4D3E,UACpDC,EAAAA,EAAAA,KAAA,OAAKiK,IAAKxF,GAAeyF,IAAI,8BAKvC,C","sources":["components/LoadingScreen.js","features/statstg/Statscard.js","features/tsapprove/statsframe.js","features/tsapprove/tsapprove.js"],"sourcesContent":["import React from \"react\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"circular_progress\">\r\n      <div className=\"spinner-container\">\r\n        {/* Optional glow effect */}\r\n        <div className=\"spinner-glow\"></div>\r\n        <CircularProgress className=\"spinner\" size={80} thickness={4.5} style={{ color: '#1b2a4e' }}/>\r\n      </div>\r\n      <h2>Loading Data...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React from 'react'\r\nimport './statscard.css'\r\n\r\nconst Statscard = ({ heading, figures, icon, color }) => {\r\n  return (\r\n    <div>\r\n      <div className='card__container'>\r\n        <div className='card__content'>\r\n          <div className='card__text'>\r\n            <p className='card__text1'>{heading}</p>\r\n            <p className='card__text2'>{figures}</p>\r\n          </div>\r\n          <div className='card__icon' style={{ backgroundColor: color }}>\r\n            {icon}{' '}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statscard\r\n","import React from \"react\";\r\nimport Statscard from \"../statstg/Statscard\";\r\nimport { MdGroups, MdBarChart } from \"react-icons/md\";\r\nimport { BsPersonBoundingBox } from \"react-icons/bs\";\r\n\r\nconst Statsframe = ({ sampledSessions }) => {\r\n\r\n  const statsData = [\r\n    {\r\n      heading: \"Total Sampled\",\r\n      figures: sampledSessions.length,\r\n      icon: <MdGroups />,\r\n      color: \"#25245D\",\r\n    },\r\n    {\r\n      heading: \"Total Reviewed\",\r\n      figures: sampledSessions.filter(\r\n        (session) => session.image_review_result !== null\r\n      ).length,\r\n      icon: <MdGroups />,\r\n      color: \"#087C8F\",\r\n    },\r\n    {\r\n      heading: \"Not Reviewed\",\r\n      figures: sampledSessions.filter(\r\n        (session) => session.image_review_result === null\r\n      ).length,\r\n      icon: <BsPersonBoundingBox />,\r\n      color: \"#25245D\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", marginBottom: \"20px\", display: \"flex\" }}>\r\n      {statsData.map((data, index) => (\r\n        <div key={index}>\r\n          <Statscard\r\n            heading={data.heading}\r\n            figures={data.figures}\r\n            icon={data.icon}\r\n            color={data.color}\r\n          />\r\n        </div>\r\n      ))}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statsframe;\r\n","import React, { useState, useEffect } from \"react\"; \r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { icon } from \"leaflet\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {\r\n  GET_SAMPLED_SESSIONS,\r\n  SUBMIT_BATCH,\r\n} from \"../../graphql/queries/trainingSessionsRequests\";\r\nimport \"./styles.css\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport Statsframe from \"./statsframe\";\r\nimport { Typography } from \"@mui/material\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport { format } from \"date-fns\";\r\nimport { useRef } from \"react\"; // Import useRef for map reference\r\nimport * as XLSX from \"xlsx\"; // Import xlsx library\r\n\r\nconst pageSize = 5;\r\n\r\nconst TSApprove = ({ selectedProject, userId }) => {\r\n  const { data, loading, error, refetch } = useQuery(GET_SAMPLED_SESSIONS, {\r\n    variables: { projectId: selectedProject },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [unfilteredSessions, setUnfilteredSessions] = useState([]);\r\n  const [filteredSessions, setFilteredSessions] = useState([]);\r\n  const [submitBatchMutation] = useMutation(SUBMIT_BATCH);\r\n  const [selectedSessions, setSelectedSessions] = useState({});\r\n  const [mapVisible, setMapVisible] = useState(false);\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [loadingImages, setLoadingImages] = useState({});\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const mapRef = useRef(null); // Reference for the map\r\n\r\n  useEffect(() => {\r\n    if (mapVisible && mapRef.current) {\r\n      setTimeout(() => {\r\n        mapRef.current.invalidateSize(); // Adjust map size when the modal opens\r\n      }, 300);\r\n    }\r\n  }, [mapVisible]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUnfilteredSessions(data.sampledTrainingSessions);\r\n      const initialLoadingState = data.sampledTrainingSessions.reduce(\r\n        (acc, session) => {\r\n          acc[session.id] = true;\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n      setLoadingImages(initialLoadingState);\r\n\r\n      // Filter sessions with null image_review_result for the approval list\r\n      const filtered = data.sampledTrainingSessions.filter(\r\n        (session) => session.image_review_result === null\r\n      );\r\n      setFilteredSessions(filtered);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSelectionChange = (sessionId, status) => {\r\n    setSelectedSessions((prev) => ({\r\n      ...prev,\r\n      [sessionId]: status,\r\n    }));\r\n  };\r\n\r\n  const areAllSessionsReviewed = () => {\r\n    return filteredSessions\r\n      .slice(0, pageSize) // Only check sessions visible on the current page\r\n      .every((session) => selectedSessions[session.id]); // Ensure every session has a status\r\n  };\r\n\r\n  const handleSubmitBatch = () => {\r\n    if (!areAllSessionsReviewed()) {\r\n      toast.error(\"Please review all sessions before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const batchInput = Object.entries(selectedSessions).map(\r\n      ([sessionId, status]) => ({\r\n        sessionId,\r\n        status,\r\n        userId,\r\n      })\r\n    );\r\n\r\n    if (!batchInput.length) {\r\n      toast.error(\"Please select at least one session to submit.\");\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    submitBatchMutation({ variables: { input: batchInput } })\r\n      .then(() => {\r\n        setSelectedSessions({});\r\n        refetch(); // Refetch data to get updated sessions\r\n        setSubmitting(false);\r\n        toast.success(\"Batch submitted successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        console.error(\"Error submitting batch:\", error);\r\n        toast.error(\"An error occurred while submitting the batch.\");\r\n      });\r\n  };\r\n\r\n  const handleImageClick = (formId, imageId) => {\r\n    setSelectedImage(\r\n      `${process.env.REACT_APP_API_URL}/image/${formId}/${imageId}`\r\n    );\r\n  };\r\n\r\n  const closeImageModal = () => {\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  const handleViewMapClick = (session) => {\r\n    setSelectedSession(session);\r\n    setMapVisible(true);\r\n  };\r\n\r\n  const handleResetView = () => {\r\n    mapRef.current.setView(sessionCoords, 6); // Reset view to initial session coordinates and zoom level\r\n  };\r\n\r\n  const handleGenerateReport = () => {\r\n    if (!unfilteredSessions) {\r\n      toast.error(\"No session data available to generate the report.\");\r\n      return;\r\n    }\r\n\r\n    // Tab 1: Breakdown of session statuses for each Farmer Trainer (FT)\r\n    const breakdownData = unfilteredSessions.reduce((acc, session) => {\r\n      const trainer = session.farmer_trainer_name;\r\n      const status = session.image_review_result\r\n        ? session.image_review_result\r\n        : \"pending\";\r\n\r\n      if (!acc[trainer]) {\r\n        acc[trainer] = { approved: 0, unclear: 0, invalid: 0, pending: 0 };\r\n      }\r\n\r\n      acc[trainer][status]++;\r\n      return acc;\r\n    }, {});\r\n\r\n    const tab1Data = [\r\n      [\"Farmer Trainer\", \"Approved\", \"Unclear\", \"Invalid\", \"Pending\"],\r\n      ...Object.entries(breakdownData).map(([trainer, counts]) => [\r\n        trainer,\r\n        counts.approved,\r\n        counts.unclear,\r\n        counts.invalid,\r\n        counts.pending,\r\n      ]),\r\n    ];\r\n\r\n    // Tab 2: Approved sessions with their data and image URLs\r\n    const tab2Data = [\r\n      [\r\n        \"Training Module\",\r\n        \"Trainer\",\r\n        \"Attendance\",\r\n        \"Male\",\r\n        \"Female\",\r\n        \"Group\",\r\n        \"Date\",\r\n        \"Image URL\",\r\n      ],\r\n      ...unfilteredSessions\r\n        .filter((session) => session.image_review_result === \"approved\")\r\n        .map((session) => {\r\n          const [formId, imageId] =\r\n            session?.session_image_url?.split(\"/\").slice(-2) || [];\r\n          return [\r\n            session.training_module_name,\r\n            session.farmer_trainer_name,\r\n            session.total_attendance,\r\n            session.male_attendance,\r\n            session.female_attendance,\r\n            session.tg_name,\r\n            format(new Date(session.session_date), \"MMMM dd, yyyy\"),\r\n            `${process.env.REACT_APP_API_URL}/image/${formId}/${imageId}`,\r\n          ];\r\n        }),\r\n    ];\r\n\r\n    // Create a workbook with two sheets\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet1 = XLSX.utils.aoa_to_sheet(tab1Data);\r\n    const worksheet2 = XLSX.utils.aoa_to_sheet(tab2Data);\r\n\r\n    // Append the sheets to the workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet1, \"Status Breakdown\");\r\n    XLSX.utils.book_append_sheet(workbook, worksheet2, \"Approved Sessions\");\r\n\r\n    // Write the workbook to a binary string\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n    const blob = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n\r\n    // Save the file\r\n    saveAs(blob, \"training-sessions-report.xlsx\");\r\n    toast.success(\"Excel report generated successfully.\");\r\n  };\r\n\r\n  const sessionCoords = selectedSession\r\n    ? { lat: selectedSession.ts_latitude, lng: selectedSession.ts_longitude }\r\n    : { lat: -1.2921, lng: 36.8219 };\r\n\r\n  const groupCoords = { lat: -1.295, lng: 36.824 };\r\n\r\n  const tsIcon = icon({\r\n    iconUrl:\r\n      \"https://img.icons8.com/?size=100&id=9HuXC128p4_T&format=png&color=000000\",\r\n    iconSize: [35, 35],\r\n    iconAnchor: [22, 94],\r\n    popupAnchor: [-3, -76],\r\n  });\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  if (error)\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Typography color=\"error\">Error loading data</Typography>\r\n      </div>\r\n    );\r\n\r\n  // Check if there are no sessions left to review\r\n  const noDataToReview = filteredSessions.length === 0;\r\n\r\n  return (\r\n    <div className=\"training-session-app\">\r\n      {/* Dashboard Section */}\r\n      <div className=\"dashboard\">\r\n        <h1 className=\"dashboard-title\">Training Session Overview</h1>\r\n        {/* Using unfilteredSessions for the statistics */}\r\n        <Statsframe sampledSessions={unfilteredSessions} />\r\n      </div>\r\n      {/* Download Report Button */}\r\n      <button className=\"download-report-button\" onClick={handleGenerateReport}>\r\n        Download Excel Report\r\n      </button>\r\n\r\n      {/* No Data Message */}\r\n      {noDataToReview ? (\r\n        <div className=\"no__data\">\r\n          <h1 style={{ fontSize: \"20px\" }}>\r\n            Currently, there are no sessions to review. 🎉\r\n          </h1>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* List of Sessions with Multi-Approval */}\r\n          <h2 className=\"review-sessions-title\">Review Sessions</h2>\r\n          <div className=\"session-list\">\r\n            {filteredSessions.slice(0, pageSize).map((session) => {\r\n              const [formId, imageId] =\r\n                session?.session_image_url?.split(\"/\").slice(-2) || [];\r\n              return (\r\n                <div key={session.id} className=\"session-item\">\r\n                  <div className=\"session-image\">\r\n                    {loadingImages[imageId] && <LoadingScreen />}\r\n                    <img\r\n                      src={\r\n                        session?.session_image_url\r\n                          ? `${process.env.REACT_APP_API_URL}/image/${formId}/${imageId}`\r\n                          : null\r\n                      }\r\n                      alt=\"Session\"\r\n                      onClick={() => handleImageClick(formId, imageId)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"session-details\">\r\n                    <h3>{session.training_module_name}</h3>\r\n                    <p>\r\n                      <strong>Trainer:</strong> {session.farmer_trainer_name}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Total Attendance:</strong>{\" \"}\r\n                      {session.total_attendance}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Male Attendance:</strong>{\" \"}\r\n                      {session.male_attendance}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Female Attendance:</strong>{\" \"}\r\n                      {session.female_attendance}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Training Date:</strong>{\" \"}\r\n                      {format(new Date(session.session_date), \"MMMM dd, yyyy\")}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Training Group Name:</strong> {session.tg_name}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"actions-column\">\r\n                    <div className=\"review-actions\">\r\n                      <select\r\n                        onChange={(e) =>\r\n                          handleSelectionChange(session.id, e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"\">-- Select --</option>\r\n                        <option value=\"approved\">Correct</option>\r\n                        <option value=\"invalid\">Incorrect</option>\r\n                        <option value=\"unclear\">Unclear</option>\r\n                      </select>\r\n                    </div>\r\n                    <button\r\n                      className=\"view-map-button\"\r\n                      onClick={() => handleViewMapClick(session)}\r\n                    >\r\n                      View Map\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Submit Button for Batch */}\r\n          <button\r\n            className=\"submit-button\"\r\n            onClick={handleSubmitBatch}\r\n            disabled={submitting || !areAllSessionsReviewed()}\r\n          >\r\n            {submitting ? \"Submitting...\" : \"Submit Batch\"}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Map Modal */}\r\n      {mapVisible && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h2>\r\n                {selectedSession\r\n                  ? selectedSession.training_module_name\r\n                  : \"Map View\"}\r\n              </h2>\r\n              <button\r\n                onClick={() => setMapVisible(false)}\r\n                className=\"modal-close-button\"\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <div className=\"map-toolbar\"></div>\r\n              <div className=\"map-container\">\r\n                <MapContainer\r\n                  center={sessionCoords}\r\n                  zoom={6}\r\n                  scrollWheelZoom={false}\r\n                  style={{ height: \"500px\", width: \"100%\" }}\r\n                  whenCreated={(mapInstance) => (mapRef.current = mapInstance)} // Assign map instance to ref\r\n                >\r\n                  {/* Satellite and Streets Hybrid Layer */}\r\n                  <TileLayer\r\n                    url={`https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v11/tiles/512/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoieW11Z2VuZ2EiLCJhIjoiY20xN3NhOWJwMHFvcTJsc2Iyc2Z0Znd0aCJ9.A3EBUziAdNrV3nwrGvkv3g`}\r\n                    attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors | Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n                  />\r\n                  {/* Marker for session location */}\r\n                  <Marker position={sessionCoords} icon={tsIcon}>\r\n                    <Popup className=\"custom-popup\">\r\n                      <h3>Training Session Location</h3>\r\n                      <p>\r\n                        {selectedSession\r\n                          ? selectedSession.location\r\n                          : \"San Francisco\"}\r\n                      </p>\r\n                    </Popup>\r\n                  </Marker>\r\n                </MapContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Image Modal */}\r\n      {selectedImage && (\r\n        <div className=\"image-modal\" onClick={closeImageModal}>\r\n          <img src={selectedImage} alt=\"Fullscreen Farm Visit\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TSApprove;\r\n"],"names":["_jsxs","className","children","_jsx","CircularProgress","size","thickness","style","color","_ref","heading","figures","icon","backgroundColor","sampledSessions","statsData","length","MdGroups","filter","session","image_review_result","BsPersonBoundingBox","width","marginBottom","display","map","data","index","Statscard","selectedProject","userId","_useQuery","useQuery","GET_SAMPLED_SESSIONS","variables","projectId","fetchPolicy","loading","error","refetch","_useState","useState","_useState2","_slicedToArray","unfilteredSessions","setUnfilteredSessions","_useState3","_useState4","filteredSessions","setFilteredSessions","_useMutation","useMutation","SUBMIT_BATCH","submitBatchMutation","_useState5","_useState6","selectedSessions","setSelectedSessions","_useState7","_useState8","mapVisible","setMapVisible","_useState9","_useState10","selectedSession","setSelectedSession","_useState11","_useState12","loadingImages","setLoadingImages","_useState13","_useState14","submitting","setSubmitting","_useState15","_useState16","selectedImage","setSelectedImage","mapRef","useRef","useEffect","current","setTimeout","invalidateSize","sampledTrainingSessions","initialLoadingState","reduce","acc","id","filtered","areAllSessionsReviewed","slice","every","sessionCoords","lat","ts_latitude","lng","ts_longitude","tsIcon","iconUrl","iconSize","iconAnchor","popupAnchor","LoadingScreen","justifyContent","alignItems","height","Typography","noDataToReview","Statsframe","onClick","breakdownData","trainer","farmer_trainer_name","status","approved","unclear","invalid","pending","tab1Data","concat","_toConsumableArray","Object","entries","_ref4","_ref5","counts","tab2Data","_session$session_imag","_ref6","session_image_url","split","_ref7","formId","imageId","training_module_name","total_attendance","male_attendance","female_attendance","tg_name","format","Date","session_date","process","workbook","XLSX","book_new","worksheet1","aoa_to_sheet","worksheet2","book_append_sheet","excelBuffer","bookType","type","blob","Blob","saveAs","toast","success","fontSize","_Fragment","_session$session_imag2","_ref8","_ref9","src","alt","handleImageClick","onChange","e","sessionId","target","value","prev","_objectSpread","_defineProperty","handleViewMapClick","batchInput","_ref2","_ref3","input","then","catch","console","disabled","MapContainer","center","zoom","scrollWheelZoom","whenCreated","mapInstance","TileLayer","url","attribution","Marker","position","Popup","location"],"sourceRoot":""}