{"version":3,"file":"static/js/28.647319d5.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/LoadingScreen.js","features/partdetail/Partscontentview.js","features/partdetail/Table/attendtable.js","features/partdetail/Table/fvtable.js","features/partdetail/Partstableview.js","features/partdetail/Partdetail.js","features/tgdetail/Detailscontent.js","features/tgdetail/Tgtabdetail.js","features/tgdetail/tstabtable.js","features/tgdetail/fvtabtable.js","features/tgdetail/partstabtable.js","features/tgdetail/Tgtabs.js","graphql/queries/participantsRequests.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Breadcrumbs } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst CustomLink = styled(Link)(({ theme }) => ({\r\n  textDecoration: \"none\",\r\n  color: \"inherit\",\r\n  transition: \"color 0.3s ease-in-out\",\r\n  \"&:hover\": {\r\n    color: \"#25245D\",\r\n    fontWeight: \"600\",\r\n  },\r\n}));\r\n\r\nconst Breadcrumb = ({ name, firstItem, linkTo }) => {\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        sx={{ fontSize: \"12px\", cursor: \"pointer\" }}\r\n      >\r\n        <CustomLink to={`/in/${linkTo}`}>{firstItem}</CustomLink>\r\n        <CustomLink href=\"\" aria-current=\"page\">\r\n          {name\r\n            .split(\" \")\r\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join(\" \")}\r\n        </CustomLink>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"circular_progress\">\r\n      <div className=\"spinner-container\">\r\n        {/* Optional glow effect */}\r\n        <div className=\"spinner-glow\"></div>\r\n        <CircularProgress className=\"spinner\" size={80} thickness={4.5} style={{ color: '#1b2a4e' }}/>\r\n      </div>\r\n      <h2>Loading Data...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React from 'react'\r\nimport Detailscontent from '../tgdetail/Detailscontent'\r\nimport { Divider } from '@mui/material'\r\nimport Avatar from 'react-avatar'\r\n\r\nconst Partscontentview = ({ participant }) => {\r\n  return (\r\n    <>\r\n      <div className='partscontent__container'>\r\n        <div className='parts__image' style={{ display: 'flex', alignSelf: 'center' }}>\r\n          {/* <Avatar\r\n            alt=\"farmer-image\"\r\n            src={farmerimage}\r\n            sx={{ width: 60, height: 60 }}\r\n          /> */}\r\n          <Avatar name={participant.full_name} size='50' textSizeRatio={1.75} round={true} color='#8A92A6' />\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: '14px',\r\n            fontWeight: '500',\r\n            paddingTop: '15px',\r\n            paddingBottom: '15px',\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          {participant.full_name}\r\n        </p>\r\n\r\n        <Divider light />\r\n\r\n        <div className='parts__details' style={{ marginTop: ' 40px' }}>\r\n          <div>\r\n            <Detailscontent heading={'Full Names'} paragraph={`${participant.first_name} ${participant.middle_name !== \"null\"?participant.middle_name:\"\"} ${participant.last_name}`} />\r\n            <Detailscontent heading={'Location'} paragraph={participant.location} />\r\n            <Detailscontent heading={'Farmer Trainer'} paragraph={participant.farmer_trainer} />\r\n            <Detailscontent heading={'Business Advisor'} paragraph={participant.business_advisor} />\r\n            <Detailscontent heading={'Gender'} paragraph={participant.gender === 'm' ? 'Male' : 'Female'} />\r\n            <Detailscontent heading={'TNS ID'} paragraph={participant.tns_id} />\r\n          </div>\r\n\r\n          <div>\r\n            <p style={{ fontSize: '11px', paddingTop: '40px' }}>{/* Edit Information */}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Partscontentview\r\n","import React from \"react\";\r\nimport Table from \"../../../components/Table/Table\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_ATTENDANCE_PER_PARTICIPANT } from \"../../../graphql/queries/participantsRequests\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { Chip } from \"@mui/material\";\r\n\r\nconst Attendtable = ({ trainingSessions, participant }) => {\r\n  const [rows, setRows] = useState([]); // eslint-disable-line no-unused-vars\r\n\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"session_name\",\r\n      name: \"Module Name\",\r\n      selector: (row) => row.session_name,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"attendance_name\",\r\n    //   name: \"Attendance Name\",\r\n    //   selector: (row) => row.attendance_name,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"attendance_status\",\r\n      name: \"Status\",\r\n      selector: (row) => {\r\n        return (\r\n          <div>\r\n            {row.attendance_status === \"Present\" ? (\r\n              <Chip label={\"Attended\"} color=\"success\" variant=\"outlined\" />\r\n            ) : (\r\n              <Chip label={\"Missed\"} color=\"error\" variant=\"outlined\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"attendance_date\",\r\n      name: \"Date\",\r\n      selector: (row) => row.attendance_date,\r\n      sortable: true,\r\n    },\r\n  ];\r\n  const tableRowItem = \"trainsession\";\r\n\r\n  const getAttendancePerParticipant = useQuery(GET_ATTENDANCE_PER_PARTICIPANT, {\r\n    variables: { participantId: participant.p_id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (getAttendancePerParticipant.data) {\r\n      const attendance =\r\n        getAttendancePerParticipant.data.getAttendanceByParticipant.attendance;\r\n      const rows = attendance\r\n        ? attendance.map((attend, index) => ({\r\n            num: index + 1,\r\n            attendance_id: attend.attendance_id,\r\n            ts_id: attend.session_id,\r\n            session_name: attend.module_name,\r\n            attendance_name: attend.attendance_name,\r\n            attendance_status: attend.attendance_status,\r\n            attendance_date: attend.attendance_date,\r\n          }))\r\n        : [];\r\n      setRows(rows);\r\n    }\r\n  }, [getAttendancePerParticipant.data, trainingSessions]);\r\n\r\n  return (\r\n    <>\r\n      {getAttendancePerParticipant.data ? (\r\n        <div>\r\n          {getAttendancePerParticipant.data.getAttendanceByParticipant\r\n            .attendance &&\r\n          getAttendancePerParticipant.data.getAttendanceByParticipant.attendance\r\n            .length > 0 ? (\r\n            <Table\r\n              columns={columns}\r\n              data={rows}\r\n              tableRowItem={tableRowItem}\r\n              participant={participant}\r\n            />\r\n          ) : (\r\n            <div className=\"no__data\">\r\n              <h1 style={{ fontSize: \"20px\" }}>No Attendance Yet</h1>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : getAttendancePerParticipant.loading ? (\r\n        <BeatLoader\r\n          color=\"#0D3C61\"\r\n          size={15}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div className=\"no__data\">\r\n          <h1 style={{ fontSize: \"20px\" }}>No Attendance Yet</h1>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Attendtable;\r\n","import React from \"react\";\r\nimport Table from \"../../../components/Table/Table\";\r\n\r\nconst FvTabTable = ({ farmVisitsPerPart }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    // {\r\n    //   id: \"fv_name\",\r\n    //   name: \"Farm Visit Name\",\r\n    //   selector: (row) => row.fv_name,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"Training Group\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"training_session\",\r\n    //   name: \"Training Session\",\r\n    //   selector: (row) => row.training_session,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farm_visited\",\r\n      name: \"Farm Visited\",\r\n      selector: (row) => row.farm_visited,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"household_id\",\r\n    //   name: \"Household Id\",\r\n    //   selector: (row) => row.household_id,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"date_visited\",\r\n      name: \"Date Visited\",\r\n      selector: (row) => row.date_visited,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"farmvisit\";\r\n\r\n  const rows = farmVisitsPerPart\r\n    ? farmVisitsPerPart.map((fv, index) => ({\r\n        num: index + 1,\r\n        fv_id: fv.fv_id,\r\n        fv_name: fv.fv_name,\r\n        training_group: fv.training_group,\r\n        training_session: fv.training_session,\r\n        tns_id: fv.tns_id,\r\n        farm_visited: fv.farm_visited,\r\n        household_id: fv.household_id,\r\n        farmer_trainer: fv.farmer_trainer,\r\n        has_training: fv.has_training,\r\n        date_visited: fv.date_visited,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FvTabTable;\r\n","import PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport { a11yProps } from \"../tgdetail/Tgtabs\";\r\nimport { useState } from \"react\";\r\nimport Attendtable from \"./Table/attendtable\";\r\nimport FVTable from \"./Table/fvtable\";\r\n\r\nfunction CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Partstableview = ({\r\n  trainingSessions,\r\n  participant,\r\n  farmVisitsPerPart,\r\n}) => {\r\n\r\n  console.log(farmVisitsPerPart);\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <>\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            borderBottom: 1,\r\n            borderColor: \"divider\",\r\n            borderTopLeftRadius: \"3px\",\r\n            borderTopRightRadius: \"3px\",\r\n            backgroundColor: \"rgba(0, 165, 163, 0.1)\",\r\n          }}\r\n        >\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"basic tabs example\"\r\n            textColor=\"primary\"\r\n          >\r\n            <Tab label=\"Farm Visit History\" {...a11yProps(0)} />\r\n            <Tab label=\"TS Attendance History\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <CustomTabPanel value={value} index={0}>\r\n          <FVTable\r\n            trainingSessions={trainingSessions}\r\n            participant={participant}\r\n            farmVisitsPerPart={farmVisitsPerPart}\r\n          />\r\n        </CustomTabPanel>\r\n        <CustomTabPanel value={value} index={1}>\r\n          <Attendtable\r\n            trainingSessions={trainingSessions}\r\n            participant={participant}\r\n          />\r\n        </CustomTabPanel>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Partstableview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Breadcrumb from \"../../components/Breadcrumbs\";\r\nimport \"./partsstyles.css\";\r\nimport Partscontentview from \"./Partscontentview\";\r\nimport Partstableview from \"./Partstableview\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_FARM_VISITS_PER_PART} from \"../../graphql/queries/farmVisitsRequests\"; // Assuming this is the correct query\r\nimport {GET_PARTICIPANT_BY_ID} from \"../../graphql/queries/participantsRequests\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\"; // Assuming you have a LoadingScreen component\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst Partdetail = () => {\r\n  const breadCrumbs = \"Participants\";\r\n  const breadCrumbsLinkTo = \"participants\";\r\n\r\n  const [farmVisitsPerPart, setFarmVisitsPerPart] = useState([]);\r\n\r\n  // Get params from URL\r\n  const params = useParams();\r\n  const { id } = params;\r\n\r\n  // Query to get participant by ID\r\n  const { loading: participantLoading, error: participantError, data: participantData } = useQuery(GET_PARTICIPANT_BY_ID, {\r\n    variables: { id }, // Ensure that the variable matches the participant ID in the query\r\n  });\r\n\r\n  // Query for farm visits per participant\r\n  const { loading: farmVisitsLoading, error: farmVisitsError, data: farmVisitsData } = useQuery(GET_FARM_VISITS_PER_PART, {\r\n    variables: { partId: id },\r\n    skip: !id, // Skip the query if id is not present\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (farmVisitsData) {\r\n      const farmVisits = farmVisitsData.getFarmVisitsByParticipant.farmVisits;\r\n      setFarmVisitsPerPart(farmVisits);\r\n    }\r\n  }, [farmVisitsData]);\r\n\r\n  // Handle loading and errors\r\n  if (participantLoading || farmVisitsLoading) {\r\n    return <LoadingScreen />; // Show loading spinner\r\n  }\r\n\r\n  if (participantError || farmVisitsError) {\r\n    return (\r\n      <div className=\"error__container\">\r\n        <Typography color=\"error\">\r\n          {participantError?.message || farmVisitsError?.message}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedParticipant = participantData?.getParticipantsById?.participant;\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb\r\n        name=\"Details\"\r\n        firstItem={breadCrumbs}\r\n        linkTo={breadCrumbsLinkTo}\r\n      />\r\n      <div className=\"parts__container\">\r\n        {selectedParticipant ? (\r\n          <>\r\n            <div className=\"parts__detailcontent\">\r\n              <Partscontentview participant={selectedParticipant} />\r\n            </div>\r\n            <div className=\"parts__tablecontent\">\r\n              <Partstableview\r\n                participant={selectedParticipant}\r\n                farmVisitsPerPart={farmVisitsPerPart}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"no__data\">\r\n            <h1 style={{ fontSize: \"20px\" }}>No Participant Selected</h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Partdetail;\r\n","import React from 'react'\r\nimport './tgdetail.css'\r\nimport { LiaCircleSolid } from 'react-icons/lia'\r\n\r\nconst Detailscontent = ({ heading, paragraph }) => {\r\n  return (\r\n    <div className='details__content'>\r\n      <LiaCircleSolid color='#3A57E8' />\r\n      <div className='details__content2'>\r\n        <p className='details__para'>{heading}</p>\r\n        <p className='details__para2'>{paragraph}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detailscontent\r\n","import React from 'react'\r\nimport { Paper } from '@mui/material'\r\nimport './tgdetail.css'\r\nimport Detailscontent from './Detailscontent'\r\n\r\nconst Tgtabdetail = ({ details }) => {\r\n  return (\r\n    <div>\r\n      <Paper elevation={1} sx={{ maxWidth: '30%' }}>\r\n        <div className='details__title'>{details.tg_name}</div>\r\n        <div style={{ padding: '10px', paddingLeft: '20px' }}>\r\n          <Detailscontent\r\n            heading={'# of Registered Farmers'}\r\n            paragraph={details.total_participants !== null ? details.total_participants : 'N/A'}\r\n          />\r\n\r\n          <Detailscontent heading={'Business Advisor'} paragraph={details.business_advisor} />\r\n          <Detailscontent heading={'Farmer Trainer'} paragraph={details.farmer_trainer} />\r\n          <Detailscontent heading={'TNS ID'} paragraph={details.tns_id || 'N/A'} />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tgtabdetail\r\n","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst Tstabtable = ({ trainingSessions }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"ts_module\",\r\n      name: \"Session Name\",\r\n      grow: 2,\r\n      selector: (row) => row.ts_module,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"ts_module\",\r\n    //   name: \"Training Month\",\r\n    //   grow: 2,\r\n    //   selector: (row) => row.ts_module,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_males\",\r\n      name: \"MA\",\r\n      selector: (row) => row.total_males,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_females\",\r\n      name: \"FA\",\r\n      selector: (row) => row.total_females,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"is_verified\",\r\n      name: \"Is Session Verified?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.is_verified ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_image_status\",\r\n      name: \"Session Image Status\",\r\n      grow: 2,\r\n      selector: (row) => (\r\n        <div>\r\n          {!row.is_verified ? (\r\n            <Chip\r\n              label={\"not_verified\"}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              title={\"not_verified\"}\r\n            />\r\n          ) : row.session_image_status === \"approved\" ? (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          ) : (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"error\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_date\",\r\n      name: \"Session Date\",\r\n      selector: (row) => row.session_date,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"trainsession\";\r\n\r\n  const rows = trainingSessions\r\n    ? trainingSessions.map((trainingSession, index) => ({\r\n        num: index + 1,\r\n        ts_id: trainingSession.ts_id,\r\n        ts_name: trainingSession.ts_name,\r\n        ts_module: trainingSession.ts_module,\r\n        tns_id: trainingSession.tns_id || \"N/A\",\r\n        farmer_trainer: trainingSession.farmer_trainer || \"N/A\",\r\n        ts_status: trainingSession.ts_status,\r\n        total_males: trainingSession.total_males,\r\n        total_females: trainingSession.total_females,\r\n        has_image: trainingSession.has_image,\r\n        is_verified: trainingSession.is_verified,\r\n        session_image_status: trainingSession.session_image_status,\r\n        session_date: trainingSession.session_date || \"N/A\",\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabtable;\r\n","import React from \"react\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst FvTabTable = ({ details, farmVisits }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"FFG Name\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farm_visited\",\r\n      name: \"Farm Visited\",\r\n      selector: (row) => row.farm_visited,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"household_id\",\r\n    //   name: \"Household Id\",\r\n    //   selector: (row) => row.household_id,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"date_visited\",\r\n      name: \"Date Visited\",\r\n      selector: (row) => row.date_visited,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"farmvisit\";\r\n\r\n  const rows = farmVisits\r\n    ? farmVisits.map((fv, index) => ({\r\n        num: index + 1,\r\n        fv_id: fv.fv_id,\r\n        fv_name: fv.fv_name,\r\n        training_group: fv.training_group,\r\n        training_session: fv.training_session,\r\n        tns_id: fv.tns_id,\r\n        farm_visited: fv.farm_visited,\r\n        household_id: fv.household_id,\r\n        farmer_trainer: fv.farmer_trainer,\r\n        has_training: fv.has_training,\r\n        date_visited: fv.date_visited,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={rows}\r\n        tableRowItem={tableRowItem}\r\n        details={details}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FvTabTable;\r\n","import React from \"react\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst PartsTabTable = ({ participants }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"full_name\",\r\n      name: \"Full Name\",\r\n      selector: (row) => row.full_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"gender\",\r\n      name: \"Gender\",\r\n      selector: (row) => row.gender,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"location\",\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"business_advisor\",\r\n      name: \"Business Advisor\",\r\n      selector: (row) => row.business_advisor,\r\n      sortable: true,\r\n    },\r\n  ];\r\n  const tableRowItem = \"participants\";\r\n\r\n  const rows = participants\r\n    ? participants.map((participant, index) => ({\r\n        num: index + 1,\r\n        p_id: participant.p_id,\r\n        full_name: `${participant.first_name} ${\r\n          participant.middle_name !== 'null' ? participant.middle_name : \" \"\r\n        } ${participant.last_name}`,\r\n        gender: participant.gender === \"m\"? \"Male\" : \"Female\",\r\n        location: participant.location,\r\n        tns_id: participant.tns_id,\r\n        status: participant.status,\r\n        farmer_trainer: participant.farmer_trainer,\r\n        business_advisor: participant.business_advisor,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartsTabTable;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport Tgtabdetail from \"./Tgtabdetail\";\r\nimport Tstabtable from \"./tstabtable\";\r\nimport FvTabTable from \"./fvtabtable\";\r\nimport PartsTabTable from \"./partstabtable\";\r\n\r\nexport function CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Tgtabs({\r\n  details,\r\n  trainingSessions,\r\n  farmVisits,\r\n  participants,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab label=\"FFG Details\" {...a11yProps(0)} />\r\n          <Tab label=\"FFG sessions\" {...a11yProps(1)} />\r\n          <Tab label=\"FFG Farm Visits\" {...a11yProps(2)} />\r\n          <Tab label=\"FFG Participants\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <CustomTabPanel value={value} index={0}>\r\n        <Tgtabdetail details={details} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <Tstabtable trainingSessions={trainingSessions} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={2}>\r\n        <FvTabTable farmVisits={farmVisits} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={3}>\r\n        <PartsTabTable participants={participants} />\r\n      </CustomTabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT = gql`\r\n  query GetParticipantsAttendanceByProject($projectId: String!) {\r\n    getParticipantsByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        age\r\n        coffee_tree_numbers\r\n        coop_membership_number\r\n        phone_number\r\n        hh_number\r\n        ffg_id\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n        create_in_commcare\r\n      }\r\n    }\r\n    getAttendances(project_id: $projectId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_name\r\n        attendance_date\r\n        attendance_status\r\n        session_id\r\n        module_name\r\n        module_number\r\n        module_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANTS_PER_PROJECT = gql`\r\n  query GetParticipantsAttendanceByProject($projectId: String!) {\r\n    getParticipantsByProject(project_id: $projectId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        age\r\n        coffee_tree_numbers\r\n        number_of_coffee_plots\r\n        coop_membership_number\r\n        phone_number\r\n        hh_number\r\n        ffg_id\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n        create_in_commcare\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANTS_PER_TG = gql`\r\n  query GetParticipantsByGroup($tgId: String!) {\r\n    getParticipantsByGroup(tg_id: $tgId) {\r\n      message\r\n      status\r\n      participants {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PARTICIPANT_BY_ID = gql`\r\n  query GetParticipantsById($id: String!) {\r\n    getParticipantsById(p_id: $id) {\r\n      message\r\n      status\r\n      participant {\r\n        p_id\r\n        first_name\r\n        middle_name\r\n        last_name\r\n        gender\r\n        location\r\n        tns_id\r\n        status\r\n        farmer_trainer\r\n        business_advisor\r\n        project_name\r\n        training_group\r\n        household_id\r\n        primary_household_member\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ATTENDANCE_PER_PARTICIPANT = gql`\r\n  query GetAttendanceByParticipant($participantId: String!) {\r\n    getAttendanceByParticipant(participant_id: $participantId) {\r\n      message\r\n      status\r\n      attendance {\r\n        attendance_id\r\n        participant_id\r\n        attendance_name\r\n        attendance_date\r\n        attendance_status\r\n        module_name\r\n        session_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPLOAD_PARTICIPANTS = gql`\r\n  mutation UploadParticipants($partsFile: Upload!) {\r\n    uploadParticipants(parts_file: $partsFile) {\r\n      message\r\n      status\r\n      file\r\n    }\r\n  }\r\n`;\r\n\r\nconst SYNC_PARTICIPANTS_WITH_COMMCARE = gql`\r\n  mutation SyncParticipantsWithCOMMCARE($projectId: String!) {\r\n    syncParticipantsWithCOMMCARE(project_id: $projectId) {\r\n      message\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  GET_PARTICIPANTS_PER_PROJECT,\r\n  GET_PARTICIPANTS_PER_TG,\r\n  GET_ATTENDANCE_PER_PARTICIPANT,\r\n  UPLOAD_PARTICIPANTS,\r\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\r\n  GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT,\r\n  GET_PARTICIPANT_BY_ID\r\n};\r\n"],"names":["CustomLink","styled","Link","_ref","theme","textDecoration","color","transition","fontWeight","_ref2","name","firstItem","linkTo","_jsx","role","children","_jsxs","Breadcrumbs","sx","fontSize","cursor","to","concat","href","split","map","word","charAt","toUpperCase","slice","join","className","CircularProgress","size","thickness","style","participant","_Fragment","display","alignSelf","Avatar","full_name","textSizeRatio","round","paddingTop","paddingBottom","textAlign","Divider","light","marginTop","Detailscontent","heading","paragraph","first_name","middle_name","last_name","location","farmer_trainer","business_advisor","gender","tns_id","trainingSessions","_useState","useState","_useState2","_slicedToArray","rows","setRows","columns","id","selector","row","num","sortable","session_name","attendance_status","Chip","label","variant","attendance_date","getAttendancePerParticipant","useQuery","GET_ATTENDANCE_PER_PARTICIPANT","variables","participantId","p_id","useEffect","data","attendance","getAttendanceByParticipant","attend","index","attendance_id","ts_id","session_id","module_name","attendance_name","length","Table","tableRowItem","loading","BeatLoader","justifyContent","farmVisitsPerPart","fv","fv_id","fv_name","training_group","training_session","farm_visited","household_id","has_training","date_visited","CustomTabPanel","props","value","other","_objectWithoutProperties","_excluded","_objectSpread","hidden","Box","p","Typography","console","log","setValue","width","borderBottom","borderColor","borderTopLeftRadius","borderTopRightRadius","backgroundColor","Tabs","onChange","event","newValue","textColor","Tab","a11yProps","FVTable","Attendtable","_participantData$getP","setFarmVisitsPerPart","useParams","_useQuery","GET_PARTICIPANT_BY_ID","participantLoading","participantError","error","participantData","_useQuery2","GET_FARM_VISITS_PER_PART","partId","skip","farmVisitsLoading","farmVisitsError","farmVisitsData","farmVisits","getFarmVisitsByParticipant","LoadingScreen","message","selectedParticipant","getParticipantsById","Breadcrumb","Partscontentview","Partstableview","LiaCircleSolid","details","Paper","elevation","maxWidth","tg_name","padding","paddingLeft","total_participants","grow","ts_module","total_males","total_females","is_verified","session_image_status","title","session_date","trainingSession","ts_name","ts_status","has_image","participants","status","Tgtabs","Tgtabdetail","Tstabtable","FvTabTable","PartsTabTable","GET_PARTICIPANTS_PER_PROJECT","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","GET_PARTICIPANTS_PER_TG","_templateObject3","_templateObject4","_templateObject5","UPLOAD_PARTICIPANTS","_templateObject6","SYNC_PARTICIPANTS_WITH_COMMCARE","_templateObject7"],"sourceRoot":""}