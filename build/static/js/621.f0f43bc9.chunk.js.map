{"version":3,"file":"static/js/621.f0f43bc9.chunk.js","mappings":"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","sources":["../node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js","../node_modules/chart.js/auto/auto.js","../node_modules/@mui/icons-material/esm/Construction.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/system/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js","../node_modules/@mui/icons-material/esm/WarningAmber.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/CheckCircle.js"],"sourcesContent":["/*!\n* chartjs-plugin-annotation v3.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2024 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, DoughnutController, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, toRadians, isObject, valueOrDefault, defined, isFunction, callback, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, getAngleFromPoint, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(visibleElements, event) {\n      return filterElements(visibleElements, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(visibleElements, event, options) {\n      return getNearestItem(visibleElements, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(visibleElements, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(visibleElements, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(visibleElements, event, options) {\n  return visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(visibleElements, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(visibleElements, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {{value: number, start: number, end: number}} limit\n * @param {number} hitSize\n * @returns {boolean}\n */\nconst inLimit = (limit, hitSize) => limit.value >= limit.start - hitSize && limit.value <= limit.end + hitSize;\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} hitSize\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, hitSize) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hitSize, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {{borderWidth: number, hitTolerance: number}} hitsize\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, {borderWidth, hitTolerance}) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const inRangeX = point.x >= x - hitSize - EPSILON && point.x <= x2 + hitSize + EPSILON;\n  const inRangeY = point.y >= y - hitSize - EPSILON && point.y <= y2 + hitSize + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {Point} point\n * @param {rect: {x: number, y: number, x2: number, y2: number}, center: {x: number, y: number}} element\n * @param {InteractionAxis} axis\n * @param {{rotation: number, borderWidth: number, hitTolerance: number}}\n * @returns {boolean}\n */\nfunction inLabelRange(point, {rect, center}, axis, {rotation, borderWidth, hitTolerance}) {\n  const rotPoint = rotated(point, center, toRadians(-rotation));\n  return inBoxRange(rotPoint, rect, axis, {borderWidth, hitTolerance});\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\nconst boxAppering = (x, y) => ({x, y, x2: x, y2: y, width: 0, height: 0});\nconst defaultInitAnimation = {\n  box: (properties) => boxAppering(properties.centerX, properties.centerY),\n  doughnutLabel: (properties) => boxAppering(properties.centerX, properties.centerY),\n  ellipse: (properties) => ({centerX: properties.centerX, centerY: properties.centerX, radius: 0, width: 0, height: 0}),\n  label: (properties) => boxAppering(properties.centerX, properties.centerY),\n  line: (properties) => boxAppering(properties.x, properties.y),\n  point: (properties) => ({centerX: properties.centerX, centerY: properties.centerY, radius: 0, width: 0, height: 0}),\n  polygon: (properties) => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import('chart.js').FontSpec } FontSpec\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').Padding } Padding\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {Point} point\n * @param {{height: number, width: number}} labelSize\n * @param {{borderWidth: number, position: {LabelPositionObject|string}, xAdjust: number, yAdjust: number}} options\n * @param {Padding|undefined} padding\n * @returns {{x: number, y: number, x2: number, y2: number, height: number, width: number, centerX: number, centerY: number}}\n */\nfunction measureLabelRectangle(point, labelSize, {borderWidth, position, xAdjust, yAdjust}, padding) {\n  const hasPadding = isObject(padding);\n  const width = labelSize.width + (hasPadding ? padding.width : 0) + borderWidth;\n  const height = labelSize.height + (hasPadding ? padding.height : 0) + borderWidth;\n  const positionObj = toPosition(position);\n  const x = calculateLabelPosition$1(point.x, width, xAdjust, positionObj.x);\n  const y = calculateLabelPosition$1(point.y, height, yAdjust, positionObj.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\n/**\n * @param {LabelPositionObject|string} value\n * @param {string|number} defaultValue\n * @returns {LabelPositionObject}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {boolean}\n */\nconst shouldFit = (options, fitRatio) => options && options.autoFit && fitRatio < 1;\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {FontSpec[]}\n */\nfunction toFonts(options, fitRatio) {\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont : [optFont];\n  if (shouldFit(options, fitRatio)) {\n    return fonts.map(function(f) {\n      const font = toFont(f);\n      font.size = Math.floor(f.size * fitRatio);\n      font.lineHeight = f.lineHeight;\n      return toFont(font);\n    });\n  }\n  return fonts.map(f => toFont(f));\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\nfunction calculateLabelPosition$1(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\n\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{chart, properties, options}]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle || 'butt';\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle || 'miter';\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    const size = {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n    return size;\n  }\n  const fonts = toFonts(options);\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n */\nfunction drawLabel(ctx, rect, options, fitRatio) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const fonts = toFonts(options, fitRatio);\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\n/**\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\n/**\n * Drawa the callout component for labels.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {AnnotationElement} element - the label element\n */\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state.visibleElements, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state.visibleElements, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nclass DoughnutLabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: 0, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    if (!options.display || !options.content) {\n      return;\n    }\n    drawBackground(ctx, this);\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawLabel(ctx, this, options, this._fitRatio);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const meta = getDatasetMeta(chart, options);\n    if (!meta) {\n      return {};\n    }\n    const {controllerMeta, point, radius} = getControllerMeta(chart, options, meta);\n    let labelSize = measureLabelSize(chart.ctx, options);\n    const _fitRatio = getFitRatio(labelSize, radius);\n    if (shouldFit(options, _fitRatio)) {\n      labelSize = {width: labelSize.width * _fitRatio, height: labelSize.height * _fitRatio};\n    }\n    const {position, xAdjust, yAdjust} = options;\n    const boxSize = measureLabelRectangle(point, labelSize, {borderWidth: 0, position, xAdjust, yAdjust});\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      ...boxSize,\n      ...controllerMeta,\n      rotation: options.rotation,\n      _fitRatio\n    };\n  }\n}\n\nDoughnutLabelAnnotation.id = 'doughnutLabelAnnotation';\n\nDoughnutLabelAnnotation.defaults = {\n  autoFit: true,\n  autoHide: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  spacing: 1,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  yAdjust: 0\n};\n\nDoughnutLabelAnnotation.defaultRoutes = {\n};\n\nfunction getDatasetMeta(chart, options) {\n  return chart.getSortedVisibleDatasetMetas().reduce(function(result, value) {\n    const controller = value.controller;\n    if (controller instanceof DoughnutController &&\n      isControllerVisible(chart, options, value.data) &&\n      (!result || controller.innerRadius < result.controller.innerRadius) &&\n      controller.options.circumference >= 90) {\n      return value;\n    }\n    return result;\n  }, undefined);\n}\n\nfunction isControllerVisible(chart, options, elements) {\n  if (!options.autoHide) {\n    return true;\n  }\n  for (let i = 0; i < elements.length; i++) {\n    if (!elements[i].hidden && chart.getDataVisibility(i)) {\n      return true;\n    }\n  }\n}\n\nfunction getControllerMeta({chartArea}, options, meta) {\n  const {left, top, right, bottom} = chartArea;\n  const {innerRadius, offsetX, offsetY} = meta.controller;\n  const x = (left + right) / 2 + offsetX;\n  const y = (top + bottom) / 2 + offsetY;\n  const square = {\n    left: Math.max(x - innerRadius, left),\n    right: Math.min(x + innerRadius, right),\n    top: Math.max(y - innerRadius, top),\n    bottom: Math.min(y + innerRadius, bottom)\n  };\n  const point = {\n    x: (square.left + square.right) / 2,\n    y: (square.top + square.bottom) / 2\n  };\n  const space = options.spacing + options.borderWidth / 2;\n  const _radius = innerRadius - space;\n  const _counterclockwise = point.y > y;\n  const side = _counterclockwise ? top + space : bottom - space;\n  const angles = getAngles(side, x, y, _radius);\n  const controllerMeta = {\n    _centerX: x,\n    _centerY: y,\n    _radius,\n    _counterclockwise,\n    ...angles\n  };\n  return {\n    controllerMeta,\n    point,\n    radius: Math.min(innerRadius, Math.min(square.right - square.left, square.bottom - square.top) / 2)\n  };\n}\n\nfunction getFitRatio({width, height}, radius) {\n  const hypo = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n  return (radius * 2) / hypo;\n}\n\nfunction getAngles(y, centerX, centerY, radius) {\n  const yk2 = Math.pow(centerY - y, 2);\n  const r2 = Math.pow(radius, 2);\n  const b = centerX * -2;\n  const c = Math.pow(centerX, 2) + yk2 - r2;\n  const delta = Math.pow(b, 2) - (4 * c);\n  if (delta <= 0) {\n    return {\n      _startAngle: 0,\n      _endAngle: TAU\n    };\n  }\n  const start = (-b - Math.sqrt(delta)) / 2;\n  const end = (-b + Math.sqrt(delta)) / 2;\n  return {\n    _startAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: start, y}).angle,\n    _endAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: end, y}).angle\n  };\n}\n\nfunction drawBackground(ctx, element) {\n  const {_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise, options} = element;\n  ctx.save();\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  ctx.arc(_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise);\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: this.options.borderWidth, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureLabelRectangle(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        ctx.lineWidth += this.options.hitTolerance;\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hitSize);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hitSize, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hitSize, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return inLimit(limit, hitSize) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, hitSize);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hitSize - EPSILON && rotatedPoint[axis] <= limit.end + hitSize + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, hitSize) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hitSize, 2)) + (b / Math.pow(yRadius + hitSize, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, hitSize);\n    }\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return inLimit(limit, hitSize);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth, hitTolerance}, rad) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + hitSize),\n      bY: centerY - cos * (radius + hitSize)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  doughnutLabel: DoughnutLabelAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, elements, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, elements, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    get elements() {\n      return elements.filter((el) => el && el.options);\n    },\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"3.1.0\";\n\nconst chartStates = new Map();\nconst isNotDoughnutLabel = annotation => annotation.type !== 'doughnutLabel';\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations.filter(isNotDoughnutLabel), chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(isNotDoughnutLabel).filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDatasetDraw(chart, _args, options) {\n    draw(chart, _args.index, options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  getAnnotations(chart) {\n    const state = chartStates.get(chart);\n    return state ? state.elements : [];\n  },\n\n  // only for testing\n  _getAnnotationElementsAtEventForMode(visibleElements, event, options) {\n    return getElements(visibleElements, event, options);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n      colors: {\n        properties: ['backgroundColor', 'borderColor'],\n        type: 'color'\n      }\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m13.7826 15.1719 2.1213-2.1213 5.9963 5.9962-2.1213 2.1213zM17.5 10c1.93 0 3.5-1.57 3.5-3.5 0-.58-.16-1.12-.41-1.6l-2.7 2.7-1.49-1.49 2.7-2.7c-.48-.25-1.02-.41-1.6-.41C15.57 3 14 4.57 14 6.5c0 .41.08.8.21 1.16l-1.85 1.85-1.78-1.78.71-.71-1.41-1.41L12 3.49c-1.17-1.17-3.07-1.17-4.24 0L4.22 7.03l1.41 1.41H2.81l-.71.71 3.54 3.54.71-.71V9.15l1.41 1.41.71-.71 1.78 1.78-7.41 7.41 2.12 2.12L16.34 9.79c.36.13.75.21 1.16.21\"\n}), 'Construction');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99 19.53 19H4.47zM12 2 1 21h22z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 16h-2v2h2zm0-6h-2v5h2z\"\n}, \"1\")], 'WarningAmber');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');"],"names":["interaction","modes","point","visibleElements","event","filterElements","intersect","nearest","options","minDistance","Number","POSITIVE_INFINITY","reduce","nearestItems","element","center","getCenterPoint","evenPoint","axis","x","y","getPointByAxis","distance","distanceBetweenPoints","push","sort","a","b","_index","slice","getNearestItem","getElements","mode","filter","inRange","inRangeByAxis","rotated","angle","cos","Math","sin","cx","cy","isOlderPart","act","req","length","EPSILON","clamp","from","to","min","max","inLimit","limit","hitSize","value","start","end","clampAll","obj","key","Object","keys","inBoxRange","_ref","_ref2","x2","y2","borderWidth","hitTolerance","inRangeX","inRangeY","inLabelRange","_ref3","_ref4","rect","rotation","toRadians","getElementCenterPoint","useFinalPosition","centerX","centerY","getProps","isPercentString","s","endsWith","toPercent","parseFloat","toPositivePercent","boxAppering","width","height","defaultInitAnimation","box","properties","doughnutLabel","ellipse","radius","label","line","polygon","getRelativePosition","size","position","getSize","positivePercent","arguments","undefined","measureLabelRectangle","labelSize","_ref5","padding","xAdjust","yAdjust","hasPadding","isObject","positionObj","toPosition","calculateLabelPosition$1","defaultValue","valueOrDefault","shouldFit","fitRatio","autoFit","toFonts","optFont","font","fonts","isArray","map","f","toFont","floor","lineHeight","isBoundToPoint","defined","xValue","yValue","adjust","initAnimationProperties","chart","initAnim","init","applyDefault","result","callback","execCallback","loadHooks","hooks","hooksContainer","activated","forEach","hook","isFunction","type","widthCache","Map","isImageOrCanvas","content","toString","translate","ctx","_ref6","rotate","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","strokeWidth","textStrokeWidth","lines","mapKey","join","prev","item","string","fontsKey","_measureText","has","set","save","count","i","text","measureText","restore","calculateLabelSize","get","drawBox","stroke","fillStyle","backgroundColor","beginPath","addRoundedRectPath","w","h","toTRBLCorners","borderRadius","closePath","fill","borderShadowColor","drawLabel","globalAlpha","elementValue","opacity","isNumber","getOpacity","style","drawImage","labels","optColor","color","colors","textAlign","calculateTextAlignment","textBaseline","miterLimit","textStrokeColor","setTextStrokeStyle","_ref8","lhs","l","lh","strokeText","applyLabelDecoration","_ref9","_ref10","c","fillText","applyLabelContent","drawPoint","pointStyle","rad","RAD_PER_DEG","isNaN","notRadius","_ref7","xOffset","yOffset","cornerRadius","arc","TAU","moveTo","TWO_THIRDS_PI","lineTo","QUARTER_PI","PI","HALF_PI","SQRT1_2","drawPointStyle","positions","drawCallout","pointX","pointY","callout","calloutPosition","display","includes","xPoints","yPoints","index","rotatedPoint","resolveCalloutAutoPosition","resolveCalloutPosition","margin","isPointInRange","separatorStart","separatorEnd","getCalloutSeparatorAdjust","getCalloutSeparatorCoord","sideStart","sideEnd","side","getCalloutSideAdjust","getCalloutSideCoord","limitedLineScale","xScaleID","startProp","endProp","yScaleID","scaleValue","scale","fallback","parse","isFinite","getPixelForValue","retrieveScaleID","scales","scaleID","charAt","axes","values","id","getDimensionByScale","reverse","getChartPoint","chartArea","xScale","yScale","left","top","resolveBoxProperties","right","bottom","xDim","getChartDimensionByScale","xMin","xMax","yDim","yMin","yMax","resolvePointProperties","adjustCenterX","adjustCenterY","getChartCircle","resolveLineProperties","area","NaN","endValue","isHorizontal","resolveFullLineProperties","scaleId","dim","resolveLimitedLineProperties","resolveBoxAndLabelProperties","initProperties","elements","optionScope","resolveLabelElementProperties$1","calculatePosition","boxOpts","labelOpts","padStart","padEnd","toPadding","_ref11","calculateX","_ref12","calculateY","moveHooks","eventHooks","concat","handleEvent","state","listened","moveListened","previous","hovered","context","changed","dispatchMoveEvents","handleMoveEvents","listeners","dispatchEvent","click","handleClickEvents","_ref13","checkElements","indexOf","handler","$context","elementHooks","invokeHook","hooked","callbackHook","adjustScaleRange","annotations","range","scaleIDOption","limits","NEGATIVE_INFINITY","annotation","updateLimits","getScaleLimits","changeScaleLimit","handleTickRangeOptions","suggestedLimit","scaleOptions","scaleLimitDefined","verifyScaleIDs","verifyProperties","console","warn","prop","props","raw","BoxAnnotation","Element","mouseX","mouseY","this","draw","resolveElementProperties","defaults","drawTime","family","weight","z","defaultRoutes","descriptors","_fallback","DoughnutLabelAnnotation","_centerX","_centerY","_radius","_startAngle","_endAngle","_counterclockwise","drawBackground","_fitRatio","meta","getSortedVisibleDatasetMetas","controller","DoughnutController","autoHide","hidden","getDataVisibility","isControllerVisible","data","innerRadius","circumference","getDatasetMeta","controllerMeta","_ref14","offsetX","offsetY","square","space","spacing","angles","yk2","pow","r2","delta","sqrt","getAngleFromPoint","getAngles","getControllerMeta","_ref15","hypo","getFitRatio","boxSize","LabelAnnotation","visible","_visible","_ref16","hBorderWidth","getLabelSize","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","sqr","v","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","atan2","LineAnnotation","path","mx","currentDevicePixelRatio","my","isPointInStroke","isOnLabel","_ref24","epsilon","x1","y1","dx","dy","lenSq","xx","yy","intersects","_ref18","_ref19","rangeLimit","_ref17","inAxisRange","curve","startOpts","endOpts","startAdjust","endAdjust","getArrowHeads","startAngle","endAngle","ps","pe","Path2D","quadraticCurveTo","drawArrowHeadOnCurve","drawCurve","drawArrowHead","inside","_ref20","_ref21","isLineInArea","limitPointToArea","limitLineToArea","controlPoint","getControlPoint","labelProperties","textSize","sizes","calculateAutoRotation","rotatedSize","r","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","toDegrees","calculateLabelPosition","resolveLabelElementProperties","arrowHeadsDefaults","_ref22","_ref23","_ref25","lineSize","lineW","lineH","coordinate","labelSizes","halfSize","arrowStartOpts","arrowHeads","arrowEndOpts","getLineAdjust","arrowOpts","offset","arrowOffsetX","_ref26","_ref27","assign","EllipseAnnotation","p","xRadius","yRadius","cosAngle","sinAngle","pointInEllipse","PointAnnotation","inPointRange","PolygonAnnotation","points","isInside","A","B","bY","bX","pointIsInPolygon","axisPoints","first","el","sides","elProps","buildPointElement","_ref28","_ref29","annotationTypes","describe","directUpdater","update","hooks$1","resolve","optDefs","resolveObj","isIndexable","resolveType","updateElements","animations","animOpts","Animations","resolveAnimations","add","splice","Array","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","skip","toSkip","updateSubElements","resolveAnnotationOptions","mainElement","subElements","definition","subElement","subResolver","override","elementClass","defs","create","chartStates","isNotDoughnutLabel","version","beforeRegister","pkg","ver","strict","parts","split","parseInt","Error","requireVersion","Chart","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","args","verifyScaleOptions","afterDataLimits","afterUpdate","scope","updateListeners","updateHooks","beforeDatasetsDraw","_args","clip","afterDatasetsDraw","beforeDatasetDraw","beforeDraw","afterDraw","beforeEvent","afterDestroy","delete","getAnnotations","_getAnnotationElementsAtEventForMode","numbers","common","_indexable","_scriptable","_allKeys","opts","additionalOptionScopes","caller","clipArea","drawableElements","main","sub","getDrawableElements","drawElement","unclipArea","registerables","createSvgIcon","_jsx","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","clsx","elevation","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","as","window","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","matches","useEnhancedEffect","queryList","updateMatch","addEventListener","removeEventListener","maybeReactUseSyncExternalStore","useSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","getSnapshot","subscribe","mediaQueryList","notify","useMediaQuery","queryInput","theme","useTheme","supportMatchMedia","getThemeProps","replace"],"sourceRoot":""}