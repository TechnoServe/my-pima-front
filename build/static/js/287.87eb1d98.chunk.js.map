{"version":3,"file":"static/js/287.87eb1d98.chunk.js","mappings":"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","sources":["features/statsts/Statstscard.js","features/tsdetail/Tstabdetail.js","features/tsdetail/Tstabs.js","features/tsdetail/Tsdetail.js","features/tgdetail/Detailscontent.js","features/tgdetail/Tgtabdetail.js","features/tgdetail/tstabtable.js","features/tgdetail/fvtabtable.js","features/tgdetail/partstabtable.js","features/tgdetail/Tgtabs.js","components/Breadcrumbs.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./tscard.css\";\r\nimport { PieChart } from \"@mui/x-charts\";\r\n\r\nconst Statstscard = ({ stats }) => {\r\n  // get percentage of total_males from stats\r\n  let totalMales = 0;\r\n  let totalFemales = 0;\r\n\r\n  totalMales += isNaN(stats.total_males) ? 0 : Number(stats.total_males);\r\n  totalFemales += isNaN(stats.total_females) ? 0 : Number(stats.total_females);\r\n\r\n  const totalAttendance = totalMales + totalFemales;\r\n\r\n  const maleAttendancePercentage =\r\n    totalAttendance > 0 ? (totalMales / totalAttendance) * 100 : 0;\r\n  const femaleAttendancePercentage =\r\n    totalAttendance > 0 ? (totalFemales / totalAttendance) * 100 : 0;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cardts__container\">\r\n        <p\r\n          style={{ color: \"#7D7F88\", fontWeight: \"600\", paddingBottom: \"10px\" }}\r\n        >\r\n          Total Attendance\r\n        </p>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ width: \"300px\" }}>\r\n            {maleAttendancePercentage > 0 || femaleAttendancePercentage > 0 ? (\r\n              <PieChart\r\n                series={[\r\n                  {\r\n                    arcLabel: (item) => `${item.value}%`,\r\n                    arcLabelMinAngle: 65,\r\n                    data: [\r\n                      {\r\n                        id: 0,\r\n                        value: maleAttendancePercentage.toFixed(1),\r\n                        label: \"Male\",\r\n                        color: \"#3F51B5\",\r\n                      },\r\n                      {\r\n                        id: 1,\r\n                        value: femaleAttendancePercentage.toFixed(1),\r\n                        label: \"Female\",\r\n                        color: \"#FF4081\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ]}\r\n                width={230}\r\n                height={200}\r\n              />\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"200px\",\r\n                }}\r\n              >\r\n                <p>No data to display</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statstscard;\r\n","import { Button, Paper } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../tgdetail/tgdetail.css\";\r\nimport Detailscontent from \"../tgdetail/Detailscontent\";\r\nimport Imagecontainer from \"./sessionimage/Imagecontainer\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_TRAINING_SESSION_IMAGE } from \"../../graphql/queries/trainingSessionsRequests\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport Statstscard from \"../statsts/Statstscard\";\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  marginBottom: \"10px\",\r\n  marginRight: \"10px\",\r\n  textTransform: \"initial\",\r\n  backgroundColor: \"rgba(244, 103, 0, 1)\",\r\n  color: \"#fff\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"rgba(244, 103, 0, 0.5)\",\r\n    transition: \"background-color 0.3s ease-in-out\",\r\n  },\r\n}));\r\n\r\nconst Tstabdetail = ({ details, selectedProject }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [session_image, setSession_image] = useState(null);\r\n  const { data, loading } = useQuery(GET_TRAINING_SESSION_IMAGE, {\r\n    variables: { tsId: details.ts_id },\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !loading &&\r\n      data.trainingSessionImage &&\r\n      data.trainingSessionImage.status === 200\r\n    ) {\r\n      setSession_image(data.trainingSessionImage.trainingSessionImage);\r\n    }\r\n  }, [data, loading]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper elevation={2}>\r\n        <div>\r\n          <div className=\"details__title\">{details.ts_name}</div>\r\n          <div style={{ padding: \"10px\", paddingLeft: \"20px\" }}></div>\r\n          <div\r\n            className=\"ts__details-container\"\r\n            style={{ display: \"flex\", gap: \"50px\" }}\r\n          >\r\n            <div style={{ width: \"250px\" }}>\r\n              <Statstscard stats={details} />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                gap: \"20px\",\r\n              }}\r\n            >\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Module Name\"}\r\n                  paragraph={details.ts_module}\r\n                />\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Male Attendance\"}\r\n                  paragraph={details.total_males || \"N/A\"}\r\n                />\r\n              </div>\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Training Group\"}\r\n                  paragraph={details.ts_group}\r\n                />{\" \"}\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Female Attendance\"}\r\n                  paragraph={details.total_females || \"N/A\"}\r\n                />\r\n              </div>{\" \"}\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Business Advisor\"}\r\n                  paragraph={\"Peace Ishimwe\"}\r\n                />{\" \"}\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"TNS ID\"}\r\n                  paragraph={details.tns_id || \"N/A\"}\r\n                />\r\n              </div>\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Farmer Trainer\"}\r\n                  paragraph={details.farmer_trainer || \"N/A\"}\r\n                />\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Is Session Verified?\"}\r\n                  paragraph={details.is_verified ? \"Yes\" : \"No\"}\r\n                />\r\n              </div>\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Session Image Status\"}\r\n                  paragraph={details.session_image_status}\r\n                />\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Session Date\"}\r\n                  paragraph={details.session_date}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <StyledButton\r\n            onClick={handleClick}\r\n            id=\"demo-customized-button\"\r\n            aria-controls={open ? \"demo-customized-menu\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            disabled={details.has_image ? false : true}\r\n            style={{\r\n              backgroundColor: `${\r\n                session_image\r\n                  ? \"rgba(244, 103, 0, 1)\"\r\n                  : \"rgba(244, 103, 0, 0.5)\"\r\n              }`,\r\n              color: \"#fff\",\r\n              cursor: `${details.has_image ? \"pointer\" : \"not-allowed\"}`,\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <BeatLoader\r\n                color={\"rgba(244, 103, 0, 1)\"}\r\n                loading={loading}\r\n                size={10}\r\n              />\r\n            ) : (\r\n              \"View Session Image\"\r\n            )}\r\n          </StyledButton>\r\n          {open && (\r\n            <Imagecontainer\r\n              open={open}\r\n              handleClose={handleClose}\r\n              id={details.ts_id}\r\n              isVerified={details.is_verified}\r\n              imageStatus={details.session_image_status}\r\n              sessionImageUrl={session_image}\r\n              selectedProject={selectedProject}\r\n              data={details}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabdetail;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport Tstabdetail from \"./Tstabdetail\";\r\nimport { a11yProps } from \"../tgdetail/Tgtabs\";\r\n// import FvTabTable from \"../tgdetail/fvtabtable\";\r\n\r\nfunction CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Tstabs = ({ details, farmVisits, selectedProject }) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n          <Tabs value={value} onChange={handleChange} aria-label=\"session tabs\">\r\n            <Tab label=\"Details\" {...a11yProps(0)} />\r\n            {/* <Tab label=\"Farm Visits\" {...a11yProps(1)} /> */}\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <CustomTabPanel value={value} index={0}>\r\n          <Tstabdetail details={details} selectedProject={selectedProject} />\r\n        </CustomTabPanel>\r\n\r\n        {/* <CustomTabPanel value={value} index={1}>\r\n          <FvTabTable details={details} farmVisits={farmVisits} />\r\n        </CustomTabPanel> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabs;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Breadcrumb from \"../../components/Breadcrumbs\";\r\nimport Tstabs from \"./Tstabs\";\r\n// import { useQuery } from \"@apollo/client\";\r\n// import { GET_FARM_VISITS_PER_TS } from \"../../graphql/queries/farmVisitsRequests\";\r\n\r\nconst Styles = {\r\n  marginTop: \"15px\",\r\n  fontWeight: \"400\",\r\n  color: \"rgba(125, 127, 136, 1)\",\r\n  fontSize: \"12px\",\r\n  maxWidth: \"80%\",\r\n};\r\nconst Tsdetail = ({ trainingSessions, selectedProject }) => {\r\n  const breadCrumbs = \"Training session\";\r\n\r\n  // const [farmVisitsPerSession, setFarmVisitsPerSession] = useState([]);\r\n\r\n  // get params from url\r\n  const params = useParams();\r\n  const { id } = params;\r\n\r\n  // const getAllFarmVisitsByTS = useQuery(GET_FARM_VISITS_PER_TS, {\r\n  //   variables: { tsId: id },\r\n  // });\r\n\r\n  const selectedTrainingSession =\r\n    trainingSessions && trainingSessions.find((group) => group.ts_id === id);\r\n  const breadCrumbsLinkTo = \"trainsession\";\r\n\r\n  // useEffect(() => {\r\n  //   if (getAllFarmVisitsByTS.data) {\r\n  //     const farmVisits =\r\n  //       getAllFarmVisitsByTS.data.getFarmVisitsBySession.farmVisits;\r\n  //     setFarmVisitsPerSession(farmVisits);\r\n  //   }\r\n  // }, [getAllFarmVisitsByTS.data]);\r\n\r\n  return (\r\n    <div>\r\n      {selectedTrainingSession && (\r\n        <>\r\n          <Breadcrumb\r\n            name={selectedTrainingSession.ts_name}\r\n            firstItem={breadCrumbs}\r\n            linkTo={breadCrumbsLinkTo}\r\n          />\r\n\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <h1>{selectedTrainingSession.ts_name}</h1>\r\n            <p style={Styles}>\r\n              In the training session details you can access detailed\r\n              information for a specific training session, training session\r\n              image and other information\r\n            </p>\r\n          </div>\r\n\r\n          <Tstabs\r\n            details={selectedTrainingSession}\r\n            //farmVisits={farmVisitsPerSession}\r\n            selectedProject={selectedProject}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tsdetail;\r\n","import React from 'react'\r\nimport './tgdetail.css'\r\nimport { LiaCircleSolid } from 'react-icons/lia'\r\n\r\nconst Detailscontent = ({ heading, paragraph }) => {\r\n  return (\r\n    <div className='details__content'>\r\n      <LiaCircleSolid color='#3A57E8' />\r\n      <div className='details__content2'>\r\n        <p className='details__para'>{heading}</p>\r\n        <p className='details__para2'>{paragraph}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detailscontent\r\n","import React from 'react'\r\nimport { Paper } from '@mui/material'\r\nimport './tgdetail.css'\r\nimport Detailscontent from './Detailscontent'\r\n\r\nconst Tgtabdetail = ({ details }) => {\r\n  return (\r\n    <div>\r\n      <Paper elevation={1} sx={{ maxWidth: '30%' }}>\r\n        <div className='details__title'>{details.tg_name}</div>\r\n        <div style={{ padding: '10px', paddingLeft: '20px' }}>\r\n          <Detailscontent\r\n            heading={'# of Registered Farmers'}\r\n            paragraph={details.total_participants !== null ? details.total_participants : 'N/A'}\r\n          />\r\n\r\n          <Detailscontent heading={'Business Advisor'} paragraph={details.business_advisor} />\r\n          <Detailscontent heading={'Farmer Trainer'} paragraph={details.farmer_trainer} />\r\n          <Detailscontent heading={'TNS ID'} paragraph={details.tns_id || 'N/A'} />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tgtabdetail\r\n","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst Tstabtable = ({ trainingSessions }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"ts_module\",\r\n      name: \"Session Name\",\r\n      grow: 2,\r\n      selector: (row) => row.ts_module,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"ts_module\",\r\n    //   name: \"Training Month\",\r\n    //   grow: 2,\r\n    //   selector: (row) => row.ts_module,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_males\",\r\n      name: \"MA\",\r\n      selector: (row) => row.total_males,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"total_females\",\r\n      name: \"FA\",\r\n      selector: (row) => row.total_females,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"is_verified\",\r\n      name: \"Is Session Verified?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.is_verified ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_image_status\",\r\n      name: \"Session Image Status\",\r\n      grow: 2,\r\n      selector: (row) => (\r\n        <div>\r\n          {!row.is_verified ? (\r\n            <Chip\r\n              label={\"not_verified\"}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              title={\"not_verified\"}\r\n            />\r\n          ) : row.session_image_status === \"approved\" ? (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          ) : (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"error\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_date\",\r\n      name: \"Session Date\",\r\n      selector: (row) => row.session_date,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"trainsession\";\r\n\r\n  const rows = trainingSessions\r\n    ? trainingSessions.map((trainingSession, index) => ({\r\n        num: index + 1,\r\n        ts_id: trainingSession.ts_id,\r\n        ts_name: trainingSession.ts_name,\r\n        ts_module: trainingSession.ts_module,\r\n        tns_id: trainingSession.tns_id || \"N/A\",\r\n        farmer_trainer: trainingSession.farmer_trainer || \"N/A\",\r\n        ts_status: trainingSession.ts_status,\r\n        total_males: trainingSession.total_males,\r\n        total_females: trainingSession.total_females,\r\n        has_image: trainingSession.has_image,\r\n        is_verified: trainingSession.is_verified,\r\n        session_image_status: trainingSession.session_image_status,\r\n        session_date: trainingSession.session_date || \"N/A\",\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabtable;\r\n","import React from \"react\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst FvTabTable = ({ details, farmVisits }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"FFG Name\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farm_visited\",\r\n      name: \"Farm Visited\",\r\n      selector: (row) => row.farm_visited,\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   id: \"household_id\",\r\n    //   name: \"Household Id\",\r\n    //   selector: (row) => row.household_id,\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"date_visited\",\r\n      name: \"Date Visited\",\r\n      selector: (row) => row.date_visited,\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"farmvisit\";\r\n\r\n  const rows = farmVisits\r\n    ? farmVisits.map((fv, index) => ({\r\n        num: index + 1,\r\n        fv_id: fv.fv_id,\r\n        fv_name: fv.fv_name,\r\n        training_group: fv.training_group,\r\n        training_session: fv.training_session,\r\n        tns_id: fv.tns_id,\r\n        farm_visited: fv.farm_visited,\r\n        household_id: fv.household_id,\r\n        farmer_trainer: fv.farmer_trainer,\r\n        has_training: fv.has_training,\r\n        date_visited: fv.date_visited,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={rows}\r\n        tableRowItem={tableRowItem}\r\n        details={details}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FvTabTable;\r\n","import React from \"react\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nconst PartsTabTable = ({ participants }) => {\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"full_name\",\r\n      name: \"Full Name\",\r\n      selector: (row) => row.full_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"gender\",\r\n      name: \"Gender\",\r\n      selector: (row) => row.gender,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"location\",\r\n      name: \"Location\",\r\n      selector: (row) => row.location,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"business_advisor\",\r\n      name: \"Business Advisor\",\r\n      selector: (row) => row.business_advisor,\r\n      sortable: true,\r\n    },\r\n  ];\r\n  const tableRowItem = \"participants\";\r\n\r\n  const rows = participants\r\n    ? participants.map((participant, index) => ({\r\n        num: index + 1,\r\n        p_id: participant.p_id,\r\n        full_name: `${participant.first_name} ${\r\n          participant.middle_name !== 'null' ? participant.middle_name : \" \"\r\n        } ${participant.last_name}`,\r\n        gender: participant.gender === \"m\"? \"Male\" : \"Female\",\r\n        location: participant.location,\r\n        tns_id: participant.tns_id,\r\n        status: participant.status,\r\n        farmer_trainer: participant.farmer_trainer,\r\n        business_advisor: participant.business_advisor,\r\n      }))\r\n    : [];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartsTabTable;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport Tgtabdetail from \"./Tgtabdetail\";\r\nimport Tstabtable from \"./tstabtable\";\r\nimport FvTabTable from \"./fvtabtable\";\r\nimport PartsTabTable from \"./partstabtable\";\r\n\r\nexport function CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Tgtabs({\r\n  details,\r\n  trainingSessions,\r\n  farmVisits,\r\n  participants,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab label=\"FFG Details\" {...a11yProps(0)} />\r\n          <Tab label=\"FFG sessions\" {...a11yProps(1)} />\r\n          <Tab label=\"FFG Farm Visits\" {...a11yProps(2)} />\r\n          <Tab label=\"FFG Participants\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <CustomTabPanel value={value} index={0}>\r\n        <Tgtabdetail details={details} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <Tstabtable trainingSessions={trainingSessions} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={2}>\r\n        <FvTabTable farmVisits={farmVisits} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={3}>\r\n        <PartsTabTable participants={participants} />\r\n      </CustomTabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Breadcrumbs } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst CustomLink = styled(Link)(({ theme }) => ({\r\n  textDecoration: \"none\",\r\n  color: \"inherit\",\r\n  transition: \"color 0.3s ease-in-out\",\r\n  \"&:hover\": {\r\n    color: \"#25245D\",\r\n    fontWeight: \"600\",\r\n  },\r\n}));\r\n\r\nconst Breadcrumb = ({ name, firstItem, linkTo }) => {\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        sx={{ fontSize: \"12px\", cursor: \"pointer\" }}\r\n      >\r\n        <CustomLink to={`/in/${linkTo}`}>{firstItem}</CustomLink>\r\n        <CustomLink href=\"\" aria-current=\"page\">\r\n          {name\r\n            .split(\" \")\r\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join(\" \")}\r\n        </CustomLink>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"names":["_ref","stats","totalMales","totalFemales","isNaN","total_males","Number","total_females","totalAttendance","maleAttendancePercentage","femaleAttendancePercentage","_jsx","children","_jsxs","className","style","color","fontWeight","paddingBottom","display","width","PieChart","series","arcLabel","item","value","arcLabelMinAngle","data","id","toFixed","label","height","justifyContent","alignItems","StyledButton","styled","Button","theme","marginBottom","marginRight","textTransform","backgroundColor","transition","_ref2","details","selectedProject","open","setOpen","useState","session_image","setSession_image","loading","useQuery","GET_TRAINING_SESSION_IMAGE","variables","tsId","ts_id","useEffect","trainingSessionImage","status","Paper","elevation","ts_name","padding","paddingLeft","gap","Statstscard","Detailscontent","heading","paragraph","ts_module","ts_group","tns_id","farmer_trainer","is_verified","session_image_status","session_date","onClick","handleClick","undefined","disabled","has_image","cursor","BeatLoader","size","Imagecontainer","handleClose","isVerified","imageStatus","sessionImageUrl","CustomTabPanel","props","index","other","role","hidden","Box","sx","p","Typography","farmVisits","setValue","marginTop","borderBottom","borderColor","Tabs","onChange","handleChange","event","newValue","Tab","a11yProps","Tstabdetail","Styles","fontSize","maxWidth","trainingSessions","params","useParams","selectedTrainingSession","find","group","_Fragment","Breadcrumb","name","firstItem","linkTo","Tstabs","LiaCircleSolid","tg_name","total_participants","business_advisor","columns","selector","row","num","sortable","grow","Chip","variant","title","rows","map","trainingSession","ts_status","Table","tableRowItem","fv","fv_id","fv_name","training_group","training_session","farm_visited","household_id","has_training","date_visited","participants","participant","p_id","full_name","first_name","middle_name","last_name","gender","location","Tgtabs","Tgtabdetail","Tstabtable","FvTabTable","PartsTabTable","CustomLink","Link","textDecoration","Breadcrumbs","to","href","split","word","charAt","toUpperCase","slice","join"],"sourceRoot":""}