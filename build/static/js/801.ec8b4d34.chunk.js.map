{"version":3,"file":"static/js/801.ec8b4d34.chunk.js","mappings":"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","sources":["components/Logo.js","features/authentication/components/LoginForm.js","pages/Login.js"],"sourcesContent":["import React from 'react'\n\nconst Logo = () => {\n  return <h1 style={logoStyle}>MYPIMA</h1>\n}\nconst logoStyle = {\n  fontFamily: 'Raleway, sans-serif',\n  color: '#F46700',\n  fontSize: '20px',\n  fontWeight: '900',\n  padding: '20px',\n  marginBottom: '0'\n}\nexport default Logo\n","import \"./loginform.css\";\nimport Logo from \"../../../components/Logo\";\nimport React, { useState } from \"react\";\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\nimport { BeatLoader } from \"react-spinners\";\nimport { useAuth } from \"../../../context/useAuth\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { Toaster, toast } from \"react-hot-toast\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const auth = useAuth();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (email.trim().length < 1) {\n      setErrors({ ...errors, email: \"Email is required\" });\n      return;\n    }\n\n    if (password.trim().length < 1) {\n      setErrors({ ...errors, password: \"Password is required\" });\n      return;\n    }\n\n    setLoading(true);\n    await auth\n      .login(email, password)\n      .then((res) => {\n        if (res.data.saveMailLogin.status === 200) {\n          setLoading(false);\n          navigate(\"/in/dashboard\");\n        } else {\n          toast.error(res.data.saveMailLogin.message);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n\n        toast.error(\"Something Went Wrong!!!\");\n      });\n\n    setLoading(false);\n  };\n\n  const handleGoogleAuth = async (response) => {\n    await auth\n      .googleLogin(response.credential)\n      .then((res) => {\n        if (res.data.saveGoogleLogin.status === 200) {\n          navigate(\"/in/dashboard\");\n        } else {\n          toast.error(res.data.saveGoogleLogin.message);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error(\"Something Went Wrong!!!\");\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Logo className=\"logo\" />\n        <p className=\"form__text\">Welcome to MYPIMA</p>\n      </div>\n      <div className=\"form__container\">\n        <div className=\"heroimage\">\n          <img\n            src=\"https://thequeenbean.blog/wp-content/uploads/2019/03/lifebean.jpg?w=1400\"\n            alt=\"hero\"\n          />\n          <div className=\"overlay-text\">Welcome to My PIMA</div>\n        </div>\n\n        <div className=\"form__starts\">\n          <h2 className=\"form__login\">Login</h2>\n          <form>\n            <label htmlFor=\"email\" className=\"form__label\">\n              Enter your Email\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"someone@tns.org\"\n              className=\"form__input\"\n              required\n            />\n            {errors.email.length > 1 && email.trim().length < 1 && (\n              <div className=\"form__error\">\n                <p className=\"form__error-text\">{errors.email}</p>\n              </div>\n            )}\n\n            <label htmlFor=\"password\" className=\"form__label\">\n              Enter your Password\n            </label>\n            <div className=\"password-input-container\">\n              <input\n                type={passwordVisible ? \"text\" : \"password\"}\n                name=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"form__input\"\n                placeholder=\"Must have at least 6 characters\"\n                required\n              />\n              <span\n                className=\"password-icon\"\n                onClick={() => setPasswordVisible(!passwordVisible)}\n              >\n                {passwordVisible ? <AiFillEyeInvisible /> : <AiFillEye />}\n              </span>\n            </div>\n            {errors.password.length > 1 && password.trim().length < 1 && (\n              <div className=\"form__error\">\n                <p className=\"form__error-text\">{errors.password}</p>\n              </div>\n            )}\n            <div className=\"form-footer\">\n              <div>\n                <input\n                  type=\"checkbox\"\n                  name=\"remember\"\n                  id=\"remember\"\n                  className=\"form__checkbox box\"\n                  checked={true}\n                  disabled={true}\n                />\n                <label htmlFor=\"remember\" className=\"form__checkbox text\">\n                  Remember me\n                </label>\n              </div>\n\n              <Link to={\"/forgot\"} className=\"form__fp\">\n                Forgot Password?\n              </Link>\n            </div>\n            <div className=\"form__auth\">\n              <button\n                type=\"submit\"\n                className=\"form__btn\"\n                onClick={handleLogin}\n                disabled={\n                  loading ||\n                  email.trim().length < 1 ||\n                  password.trim().length < 1\n                }\n                style={{\n                  cursor:\n                    loading ||\n                    email.trim().length < 1 ||\n                    password.trim().length < 1\n                      ? \"not-allowed\"\n                      : \"\",\n                  backgroundColor:\n                    loading ||\n                    email.trim().length < 1 ||\n                    password.trim().length < 1\n                      ? \"#ccc\"\n                      : \"#087c8f\",\n                }}\n              >\n                {loading ? (\n                  <BeatLoader color=\"#fff\" loading={true} size={10} />\n                ) : (\n                  \"Login\"\n                )}\n              </button>\n            </div>\n            <div className=\"google__auth\">\n              <p\n                style={{\n                  fontSize: \"14px\",\n                  color: \"#b5b5b5\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                OR\n              </p>\n              <div className=\"auth__container\">\n                <div\n                  style={{\n                    display: \"inline-flex\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <GoogleLogin\n                    onSuccess={(response) => handleGoogleAuth(response)}\n                    onError={() => {\n                      toast.error(\"Something went wrong\");\n                    }}\n                    useOneTap\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"../features/authentication/components/LoginForm\";\n\nconst Login = ({ onLogin }) => {\n  return (\n    <div>\n      <LoginForm onLogin={onLogin} />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["logoStyle","fontFamily","color","fontSize","fontWeight","padding","marginBottom","Logo","_jsx","style","children","LoginForm","email","setEmail","useState","password","setPassword","navigate","useNavigate","passwordVisible","setPasswordVisible","loading","setLoading","errors","setErrors","auth","useAuth","_jsxs","className","src","alt","htmlFor","type","name","id","value","onChange","e","target","placeholder","required","length","trim","onClick","AiFillEyeInvisible","AiFillEye","checked","disabled","Link","to","async","preventDefault","login","then","res","data","saveMailLogin","status","toast","error","message","catch","err","console","log","cursor","backgroundColor","BeatLoader","size","display","alignItems","GoogleLogin","onSuccess","response","googleLogin","credential","saveGoogleLogin","handleGoogleAuth","onError","useOneTap","Toaster","position","_ref","onLogin"],"sourceRoot":""}