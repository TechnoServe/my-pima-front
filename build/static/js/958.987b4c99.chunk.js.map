{"version":3,"file":"static/js/958.987b4c99.chunk.js","mappings":"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","sources":["pages/TrainingSession.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Chip, Typography } from \"@mui/material\";\r\nimport Table from \"../components/Table/Table\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { GET_TRAINING_SESSIONS_PER_PROJECT } from \"../graphql/queries/trainingSessionsRequests\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\n\r\nconst TrainingSession = ({ selectedProject }) => {\r\n  const [trainingSessions, setTrainingSessions] = useState([]);\r\n  const { data, error, loading } = useQuery(GET_TRAINING_SESSIONS_PER_PROJECT, {\r\n    variables: { sfProjectId: selectedProject },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const trainingSessionsData = data.trainingSessionsByProject;\r\n      setTrainingSessions(\r\n        trainingSessionsData.status === 200\r\n          ? trainingSessionsData.trainingSessions\r\n          : []\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      toast.error(error.message);\r\n    }\r\n  }, [data, error]);\r\n\r\n  const columns = [\r\n    {\r\n      id: \"num\",\r\n      name: \"No.\",\r\n      selector: (row) => row.num,\r\n      sortable: true,\r\n      grow: 1,\r\n    },\r\n    {\r\n      id: \"ts_module\",\r\n      name: \"Session Name\",\r\n      selector: (row) => row.ts_module,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      id: \"ts_group\",\r\n      name: \"Training Group\",\r\n      selector: (row) => row.ts_group,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      id: \"tns_id\",\r\n      name: \"TNS ID\",\r\n      selector: (row) => row.tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      id: \"total_males\",\r\n      name: \"MA\",\r\n      selector: (row) => row.total_males,\r\n      sortable: true,\r\n      grow: 1,\r\n    },\r\n    {\r\n      id: \"total_females\",\r\n      name: \"FA\",\r\n      selector: (row) => row.total_females,\r\n      sortable: true,\r\n      grow: 1,\r\n    },\r\n    {\r\n      id: \"has_image\",\r\n      name: \"Has Image?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.has_image ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"is_verified\",\r\n      name: \"Is Session Verified?\",\r\n      selector: (row) => (\r\n        <div>\r\n          {row.is_verified ? (\r\n            <Chip label={\"Yes\"} color=\"success\" variant=\"outlined\" />\r\n          ) : (\r\n            <Chip label={\"No\"} color=\"error\" variant=\"outlined\" />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_image_status\",\r\n      name: \"Session Image Status\",\r\n      grow: 2,\r\n      selector: (row) => (\r\n        <div>\r\n          {!row.is_verified ? (\r\n            <Chip\r\n              label={\"not_verified\"}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              title={\"not_verified\"}\r\n            />\r\n          ) : (\r\n            <Chip\r\n              label={row.session_image_status}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              title={row.session_image_status}\r\n            />\r\n          )}\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"session_date\",\r\n      name: \"Session Date\",\r\n      selector: (row) => row.session_date,\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n  ];\r\n\r\n  const tableRowItem = \"trainsession\";\r\n\r\n  const rows = trainingSessions\r\n    ? trainingSessions.map((trainingSession, index) => ({\r\n        num: index + 1,\r\n        ts_id: trainingSession.ts_id,\r\n        ts_name: trainingSession.ts_name,\r\n        ts_module: trainingSession.ts_module,\r\n        ts_group: trainingSession.ts_group,\r\n        tns_id: trainingSession.tns_id || \"N/A\",\r\n        farmer_trainer: trainingSession.farmer_trainer,\r\n        ts_status: trainingSession.ts_status,\r\n        total_males: trainingSession.total_males,\r\n        total_females: trainingSession.total_females,\r\n        has_image: trainingSession.has_image,\r\n        is_verified: trainingSession.is_verified,\r\n        session_image_status: trainingSession.session_image_status,\r\n        session_date: trainingSession.session_date,\r\n      }))\r\n    : [];\r\n\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"circular_progress\">\r\n        <Typography color=\"error\">Error loading data</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"page__container\">\r\n      <h1 className=\"module__heading\">Training Sessions View</h1>\r\n      {trainingSessions.length > 0 ? (\r\n        <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n      ) : (\r\n        <div className=\"no__data\">\r\n          <h1 style={{ fontSize: \"20px\" }}>No Training Sessions Yet</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingSession;\r\n"],"names":["_ref","selectedProject","trainingSessions","setTrainingSessions","useState","data","error","loading","useQuery","GET_TRAINING_SESSIONS_PER_PROJECT","variables","sfProjectId","useEffect","trainingSessionsData","trainingSessionsByProject","status","toast","message","columns","id","name","selector","row","num","sortable","grow","ts_module","ts_group","tns_id","farmer_trainer","total_males","total_females","_jsx","children","has_image","Chip","label","color","variant","is_verified","session_image_status","title","session_date","rows","map","trainingSession","index","ts_id","ts_name","ts_status","LoadingScreen","className","Typography","_jsxs","length","Table","tableRowItem","style","fontSize"],"sourceRoot":""}