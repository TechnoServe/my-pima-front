{"version":3,"file":"static/js/89.3bedf8b9.chunk.js","mappings":"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","sources":["../node_modules/recharts/es6/chart/BarChart.js","pages/FTPerformance.js"],"sourcesContent":["/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  BarChart,\r\n  Bar,\r\n} from \"recharts\";\r\nimport \"./FTPerformance.css\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst GET_PERFORMANCE_BY_FT = gql`\r\n  query GetPerformanceByFT($projectId: String!) {\r\n    getPerformanceByFT(project_id: $projectId) {\r\n      message\r\n      status\r\n      data {\r\n        id\r\n        name\r\n        monthlyPerformance {\r\n          month\r\n          year\r\n          percentage\r\n        }\r\n        monthlyVisitedFarms {\r\n          month\r\n          year\r\n          totalVisitedFarms\r\n        }\r\n        monthlyRating {\r\n          month\r\n          year\r\n          avgScore\r\n        }\r\n        monthlyAttDifference {\r\n          month\r\n          year\r\n          difference\r\n          ftAttendance\r\n          aaAttendance\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FTPerformance = ({ selectedProject }) => {\r\n  const { loading, error, data } = useQuery(GET_PERFORMANCE_BY_FT, {\r\n    variables: { projectId: selectedProject },\r\n  });\r\n\r\n  const [selectedFT, setSelectedFT] = useState(null);\r\n  const [selectWidth, setSelectWidth] = useState(\"auto\");\r\n  const selectRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (selectRef.current && data?.getPerformanceByFT?.data.length > 0) {\r\n      const longestOptionWidth = Math.max(\r\n        ...data.getPerformanceByFT.data.map((ft) => ft.name.length * 8)\r\n      );\r\n      setSelectWidth(`${longestOptionWidth}px`);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleFTSelect = (selectedOption) => {\r\n    const selectedFTData = data?.getPerformanceByFT?.data.find(\r\n      (ft) => ft.id === selectedOption.value\r\n    );\r\n    setSelectedFT(selectedFTData);\r\n  };\r\n\r\n  const formatLabel = ({ month, year }) => `${month}/${year}`;\r\n\r\n  const exportToExcel = () => {\r\n    if (!data || !data.getPerformanceByFT || !data.getPerformanceByFT.data) return;\r\n\r\n    const fileName = `FT_Performance_Data.xlsx`;\r\n    const wsData = [];\r\n\r\n    data.getPerformanceByFT.data.forEach((ft) => {\r\n      ft.monthlyPerformance.forEach((mp, index) => {\r\n        const rowData = {\r\n          Name: ft.name,\r\n          Month: `${mp.month}/${mp.year}`,\r\n          \"% FFGs Submitted\": mp.percentage || \"\",\r\n          \"Total Visited Farms\": \"\",\r\n          \"Average Performance Grade\": \"\",\r\n          \"TO vs AA Attendance difference\": \"\",\r\n          \"FT Attendance\": \"\",\r\n          \"AA Attendance\": \"\",\r\n        };\r\n\r\n        const mvf = ft.monthlyVisitedFarms.find(\r\n          (item) => item.month === mp.month && item.year === mp.year\r\n        );\r\n        if (mvf) rowData[\"Total Visited Farms\"] = mvf.totalVisitedFarms;\r\n\r\n        const mr = ft.monthlyRating.find(\r\n          (item) => item.month === mp.month && item.year === mp.year\r\n        );\r\n        if (mr) rowData[\"Average Performance Grade\"] = mr.avgScore;\r\n\r\n        const mad = ft.monthlyAttDifference.find(\r\n          (item) => item.month === mp.month && item.year === mp.year\r\n        );\r\n        if (mad) {\r\n          rowData[\"TO vs AA Attendance difference\"] = mad.difference;\r\n          rowData[\"FT Attendance\"] = mad.ftAttendance;\r\n          rowData[\"AA Attendance\"] = mad.aaAttendance;\r\n        }\r\n\r\n        wsData.push(rowData);\r\n      });\r\n    });\r\n\r\n    const ws = XLSX.utils.json_to_sheet(wsData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"FT_Performance\");\r\n    XLSX.writeFile(wb, fileName);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"ft-performance-container\">\r\n      <h4 className=\"page-title\">Select a Farmer Trainer</h4>\r\n      <div className=\"select-download-container\">\r\n        {loading ? (\r\n          <p className=\"loading-message\">Loading...</p>\r\n        ) : error ? (\r\n          <p className=\"error-message\">\r\n            Error: Unable to fetch data. Refresh page, if it doesn't work please contact the PIMA team.\r\n          </p>\r\n        ) : (\r\n          <>\r\n            <Select\r\n              className=\"select\"\r\n              options={data?.getPerformanceByFT?.data.map((ft) => ({\r\n                label: ft.name,\r\n                value: ft.id,\r\n              }))}\r\n              onChange={handleFTSelect}\r\n              placeholder=\"Search Farmer Trainers...\"\r\n              value={\r\n                selectedFT\r\n                  ? { label: selectedFT.name, value: selectedFT.id }\r\n                  : null\r\n              }\r\n              styles={{\r\n                menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n              }}\r\n              menuPortalTarget={document.body}\r\n              menuPlacement=\"auto\"\r\n              width={selectWidth}\r\n              ref={selectRef}\r\n            />\r\n            <button className=\"download-button\" onClick={exportToExcel}>\r\n              Download Performance Data\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {selectedFT && (\r\n        <div>\r\n          <h3 className=\"section-title\">Graphs for {selectedFT.name}</h3>\r\n          <div className=\"graph-container\">\r\n            <div className=\"graph\">\r\n              <h4>% of FFGs submitted on PIMA per month</h4>\r\n              <BarChart\r\n                width={600}\r\n                height={300}\r\n                data={selectedFT.monthlyPerformance}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  dataKey={({ month, year }) => formatLabel({ month, year })}\r\n                  allowDataOverflow={false}\r\n                />\r\n                <YAxis ticks={[0, 20, 40, 60, 80, 100]} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar\r\n                  dataKey=\"percentage\"\r\n                  name=\"% FFGs Submitted\"\r\n                  fill=\"#82ca9d\"\r\n                />\r\n              </BarChart>\r\n            </div>\r\n\r\n            <div className=\"graph\">\r\n              <h4>Number of Farm Visits performed per month</h4>\r\n              <LineChart\r\n                width={600}\r\n                height={300}\r\n                data={selectedFT.monthlyVisitedFarms}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  dataKey={({ month, year }) => formatLabel({ month, year })}\r\n                />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"totalVisitedFarms\"\r\n                  name=\"Farm Visits\"\r\n                  stroke=\"#8884d8\"\r\n                />\r\n              </LineChart>\r\n            </div>\r\n\r\n            <div className=\"graph\">\r\n              <h4>FT Average Performance Grade per month</h4>\r\n              <LineChart\r\n                width={600}\r\n                height={300}\r\n                data={selectedFT.monthlyRating}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  dataKey={({ month, year }) => formatLabel({ month, year })}\r\n                />\r\n                <YAxis ticks={[0, 1, 2, 3, 4]} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"avgScore\"\r\n                  name=\"Average Performance Grade\"\r\n                  stroke=\"#ff7300\"\r\n                />\r\n              </LineChart>\r\n            </div>\r\n\r\n            <div className=\"graph\">\r\n              <h4>FT VS AA Attendance Numbers</h4>\r\n              <LineChart\r\n                width={600}\r\n                height={300}\r\n                data={selectedFT.monthlyAttDifference}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  dataKey={({ month, year }) => formatLabel({ month, year })}\r\n                />\r\n                <YAxis ticks={[0, 20, 40, 60]} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"difference\"\r\n                  name=\"TO vs AA Attendance difference\"\r\n                  stroke=\"#ff0000\"\r\n                />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"ftAttendance\"\r\n                  name=\"FT Attendance\"\r\n                  stroke=\"#00ff00\"\r\n                />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"aaAttendance\"\r\n                  name=\"AA Attendance\"\r\n                  stroke=\"#0000ff\"\r\n                />\r\n              </LineChart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FTPerformance;\r\n"],"names":["BarChart","generateCategoricalChart","chartName","GraphicalChild","Bar","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","GET_PERFORMANCE_BY_FT","gql","_templateObject","_taggedTemplateLiteral","_ref","_data$getPerformanceB3","selectedProject","_useQuery","useQuery","variables","projectId","loading","error","data","_useState","useState","_useState2","_slicedToArray","selectedFT","setSelectedFT","_useState3","_useState4","selectWidth","setSelectWidth","selectRef","useRef","useEffect","_data$getPerformanceB","current","getPerformanceByFT","length","longestOptionWidth","Math","max","apply","_toConsumableArray","map","ft","name","concat","formatLabel","_ref2","month","year","_jsxs","className","children","_jsx","_Fragment","Select","options","label","value","id","onChange","selectedOption","_data$getPerformanceB2","selectedFTData","find","placeholder","styles","menuPortal","base","_objectSpread","zIndex","menuPortalTarget","document","body","menuPlacement","width","ref","onClick","wsData","forEach","monthlyPerformance","mp","index","rowData","Name","Month","percentage","mvf","monthlyVisitedFarms","item","totalVisitedFarms","mr","monthlyRating","avgScore","mad","monthlyAttDifference","difference","ftAttendance","aaAttendance","push","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","dataKey","_ref3","allowDataOverflow","ticks","Tooltip","Legend","fill","LineChart","_ref4","Line","type","stroke","_ref5","_ref6"],"sourceRoot":""}