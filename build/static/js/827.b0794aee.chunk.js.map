{"version":3,"file":"static/js/827.b0794aee.chunk.js","mappings":"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","sources":["components/LoadingScreen.js","pages/FarmVisit.js"],"sourcesContent":["import React from \"react\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"circular_progress\">\r\n      <div className=\"spinner-container\">\r\n        {/* Optional glow effect */}\r\n        <div className=\"spinner-glow\"></div>\r\n        <CircularProgress className=\"spinner\" size={80} thickness={4.5} style={{ color: '#1b2a4e' }}/>\r\n      </div>\r\n      <h2>Loading Data...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_FARM_VISITS_PER_PROJECT } from \"../graphql/queries/farmVisitsRequests\";\r\nimport Table from \"../components/Table/Table\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { Typography } from \"@mui/material\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\n\r\nconst FarmVisit = ({ selectedProject }) => {\r\n  const [farmVisits, setFarmVisits] = useState([]);\r\n  const { data, error, loading } = useQuery(GET_FARM_VISITS_PER_PROJECT, {\r\n    variables: { projectId: selectedProject },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const farmVisitsData = data.getFarmVisitsByProject;\r\n      setFarmVisits(\r\n        farmVisitsData.status === 200 ? farmVisitsData.farmVisits : []\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      toast.error(error.message);\r\n    }\r\n  }, [data, error]);\r\n\r\n  const columns = [\r\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\r\n    {\r\n      id: \"training_group\",\r\n      name: \"TG Name\",\r\n      selector: (row) => row.training_group,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_tns_id\",\r\n      name: \"TNS Farmer ID\",\r\n      selector: (row) => row.farmer_tns_id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farm_visited\",\r\n      name: \"Farm Visited\",\r\n      selector: (row) => row.farm_visited,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"farmer_trainer\",\r\n      name: \"Farmer Trainer\",\r\n      selector: (row) => row.farmer_trainer,\r\n      sortable: true,\r\n    },\r\n    {\r\n      id: \"date_visited\",\r\n      name: \"Date Visited\",\r\n      selector: (row) => row.date_visited,\r\n      sortable: true,\r\n    }\r\n  ];\r\n  const tableRowItem = \"farmvisit\";\r\n\r\n  const rows = farmVisits\r\n    ? farmVisits.map((fv, index) => ({\r\n        num: index + 1,\r\n        fv_id: fv.fv_id,\r\n        fv_name: fv.fv_name,\r\n        training_group: fv.training_group,\r\n        training_session: fv.training_session,\r\n        tg_tns_id: fv.tg_tns_id,\r\n        farmer_tns_id: fv.farmer_tns_id,\r\n        household_tns_id: fv.household_tns_id,\r\n        pima_household_id: fv.pima_household_id,\r\n        pima_farmer_id: fv.pima_farmer_id,\r\n        farm_visited: fv.farm_visited,\r\n        household_id: fv.household_id,\r\n        farmer_trainer: fv.farmer_trainer,\r\n        has_training: fv.has_training,\r\n        date_visited: fv.date_visited,\r\n      }))\r\n    : [];\r\n\r\n  if (error)\r\n    return (\r\n      <div className=\"circular_progress\">\r\n        <Typography color=\"error\">Error loading data</Typography>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"page__container\">\r\n      <h1 className=\"module__heading\">Farm Visits View</h1>\r\n      {loading ? (\r\n        <LoadingScreen />\r\n      ) : farmVisits.length > 0 ? (\r\n        <Table columns={columns} data={rows} tableRowItem={tableRowItem} />\r\n      ) : (\r\n        <div className=\"no__data\">\r\n          <h1 style={{ fontSize: \"20px\" }}>No Farm Visit Yet</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmVisit;\r\n"],"names":["_jsxs","className","children","_jsx","CircularProgress","size","thickness","style","color","_ref","selectedProject","_useState","useState","_useState2","_slicedToArray","farmVisits","setFarmVisits","_useQuery","useQuery","GET_FARM_VISITS_PER_PROJECT","variables","projectId","data","error","loading","useEffect","farmVisitsData","getFarmVisitsByProject","status","toast","message","rows","map","fv","index","num","fv_id","fv_name","training_group","training_session","tg_tns_id","farmer_tns_id","household_tns_id","pima_household_id","pima_farmer_id","farm_visited","household_id","farmer_trainer","has_training","date_visited","Typography","LoadingScreen","length","Table","columns","id","name","selector","row","sortable","tableRowItem","fontSize"],"sourceRoot":""}