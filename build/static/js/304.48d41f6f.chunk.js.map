{"version":3,"file":"static/js/304.48d41f6f.chunk.js","mappings":"6hBAEA,MAAMA,EAAgBC,EAAAA,EAAI;;;;;;;;;;;;;;;EAgCpBC,GAfgBD,EAAAA,EAAI;;;;;;;;;;;;;EAeNA,EAAAA,EAAI;;;;;;;;;;;;;;;mDCExB,MAAME,GAASC,EAAAA,EAAAA,IAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC3CE,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,iBAAiBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,iBAAiBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,OAAOC,MAAO,MAErDC,WAAY,EACZC,MAAO,OACP,CAACV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BH,WAAYT,EAAMa,QAAQ,GAC1BH,MAAO,QAEV,IAEKI,GAAoBhB,EAAAA,EAAAA,IAAO,MAAPA,EAAciB,IAAA,IAAC,MAAEf,GAAOe,EAAA,MAAM,CACtDC,QAAShB,EAAMa,QAAQ,EAAG,GAC1BI,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,SACjB,IAEKC,GAAkBxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,EAAkB0B,IAAA,IAAC,MAAExB,GAAOwB,EAAA,MAAM,CACxDC,MAAO,UACP,wBAAyB,CACvBT,QAAShB,EAAMa,QAAQ,EAAG,EAAG,EAAG,GAEhCa,YAAc,cAAa1B,EAAMa,QAAQ,MACzCc,WAAY3B,EAAM4B,YAAYC,OAAO,SACrCnB,MAAO,OACP,CAACV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BF,MAAO,OACP,UAAW,CACTA,MAAO,UAId,IA2TD,EAzToBoB,IAA0D,IAAzD,KAAEC,EAAI,YAAEC,EAAW,MAAEC,EAAK,KAAEC,EAAI,gBAAEC,GAAiBL,EACtE,MAAOM,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,OAC1CS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,OAC1CW,EAAgBC,IAAqBZ,EAAAA,EAAAA,WAAS,IAC9Ca,EAAOC,IAAYd,EAAAA,EAAAA,WAAS,GAC7Be,GAAcC,EAAAA,EAAAA,GAASC,EAAAA,IACvBC,GAAcF,EAAAA,EAAAA,GAAS5D,IACtB+D,IAAkBC,EAAAA,EAAAA,GAAYC,EAAAA,KAE9BC,KAAcF,EAAAA,EAAAA,GAAYG,EAAAA,KAcjCC,EAAAA,EAAAA,YAAU,KACRtB,EAAgBN,EAAK,GACpB,CAACA,KAEJ4B,EAAAA,EAAAA,YAAU,KACJT,EAAYnB,MACdQ,EAASW,EAAYnB,KAAK6B,SAAStB,MACrC,GACC,CAACY,EAAYnB,QAEhB4B,EAAAA,EAAAA,YAAU,KACJN,EAAYtB,MACdU,EAASY,EAAYtB,KAAK8B,SAASrB,MACrC,GACC,CAACa,EAAYtB,OAqDhB,OACE+B,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACnC,KAAMA,EAAMoC,QAASnC,EAAYoC,SAAA,EACvCH,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,SAAU,OAAOF,SAAA,EAC5BG,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,MAAOvC,EAAKwC,OACZC,MAAO,CACLlD,MAAO,QAETmD,QAAQ,cACP,IAAI,oBACW,KAClBL,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAOxC,EAAOR,MAAM,UAAUmD,QAAQ,eAC5CL,EAAAA,EAAAA,KAACM,EAAAA,EAAO,QAEVN,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAAAV,SACXhC,GACC6B,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACT8D,cAAe,SACf7D,WAAY,UACZgD,SAAA,EAEFH,EAAAA,EAAAA,MAACiB,EAAAA,EAAW,CAACF,GAAI,CAAEtE,MAAO,QAAS0D,SAAA,EACjCG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,QAAQI,GAAI,CAAEI,aAAc,QAAShB,SAAC,iBAG1DG,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,KAAK,OACLC,aACGpC,EAOG,KANA,CACEqC,MAAO3C,EACP4B,MAAOhC,EAAMgD,MACVC,GAASA,EAAKC,UAAY9C,IAC3B+C,WAIVC,QACEpD,EAAMiC,OAAS,EACXjC,EAAMqD,KAAKJ,IAAI,CACbF,MAAOE,EAAKC,QACZlB,MAAOiB,EAAKE,cAEd,GAENG,SAAWC,IACTlD,EAAgBkD,EAAER,MAAM,EAE1BS,UAAU,qBACVC,gBAAgB,eAGpBjC,EAAAA,EAAAA,MAACiB,EAAAA,EAAW,CAACF,GAAI,CAAEtE,MAAO,OAAQyF,UAAW,QAAS/B,SAAA,EACpDG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,QAAQI,GAAI,CAAEI,aAAc,QAAShB,SAAC,iBAG1DG,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,KAAK,OACLC,aACGpC,EAOG,KANA,CACEqC,MAAOzC,EACP0B,MAAO9B,EAAM8C,MACVC,GAASA,EAAKU,UAAYrD,IAC3BsD,WAIVR,QACElD,EAAM+B,OAAS,EACX/B,EAAMmD,KAAKJ,IAAI,CACbF,MAAOE,EAAKU,QACZ3B,MAAOiB,EAAKW,cAEd,GAENN,SAAWC,IACThD,EAAgBgD,EAAER,MAAM,EAE1BS,UAAU,qBACVC,gBAAgB,eAGpBjC,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACTE,eAAgB,WAChBX,MAAO,OACPyF,UAAW,QACX/B,SAAA,EAEFG,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACL1B,QAAQ,YACRnD,MAAM,UACNuD,GAAI,CAAEmB,UAAW,OAAQI,YAAa,QACtCC,QAASrD,EApJDsD,UACpB,GAAI5D,GAAgBE,EAAc,CAChCG,GAAkB,GAClB,MAAM,KAAEhB,SAAeuB,EAAe,CACpCiD,UAAW,CACTC,OAAQ9D,EACR+D,UAAWzE,EACX0E,OAAQ9D,KAIuB,MAA/Bb,EAAKuB,eAAeqD,QACtBC,EAAAA,GAAMC,QAAQ9E,EAAKuB,eAAewD,SAClCnE,EAAgB,MAChBE,EAAgB,MAChBE,GAAkB,GAClBb,GAAa,KAEba,GAAkB,GAClB6D,EAAAA,GAAMG,MAAMhF,EAAKuB,eAAewD,SAEpC,MACEF,EAAAA,GAAMG,MAAM,8BACd,EAGuBT,UACvB,GAAI5D,GAAgBE,EAAc,CAChCG,GAAkB,GAClB,MAAM,KAAEhB,SAAe0B,GAAW,CAChC8C,UAAW,CACTC,OAAQ9D,EACRgE,OAAQ9D,KAImB,MAA3Bb,EAAK0B,WAAWkD,QAClBC,EAAAA,GAAMC,QAAQ9E,EAAK0B,WAAWqD,SAC9BnE,EAAgB,MAChBE,EAAgB,MAChBE,GAAkB,GAClBb,GAAa,KAEba,GAAkB,GAClB6D,EAAAA,GAAMG,MAAMhF,EAAK0B,WAAWqD,SAEhC,MACEF,EAAAA,GAAMG,MAAM,8BACd,EAqGYC,SAAUlE,EAAemB,SAExBnB,GACCsB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAAC3F,MAAO,OAAQ4F,SAAS,EAAMC,KAAM,KAC9CnE,EACF,OAEA,YAGJoB,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACL1B,QAAQ,YACRnD,MAAM,QACNuD,GAAI,CAAEmB,UAAW,QACjBK,QAASA,KACP1D,EAAgB,MAChBE,EAAgB,MAChBX,GAAa,EAAM,EACnB+B,SACH,kBAMLH,EAAAA,EAAAA,MAACsD,EAAAA,EAAI,CAAAnD,SAAA,EAEHG,EAAAA,EAAAA,KAACiD,EAAAA,GAAQ,CACPxC,GAAI,CACF7D,QAAS,OACTE,eAAgB,gBAChBD,WAAY,SACZJ,QAAS,SACToD,UAEFH,EAAAA,EAAAA,MAACpE,EAAM,CAACkG,SApNEC,IACpB,MAAMR,EAAQQ,EAAEyB,OAAOjC,MAEjBkC,EAAWxF,EAAKyF,QACnBjC,GACCA,EAAKkC,KAAKhC,UAAUiC,cAAcC,SAAStC,EAAMqC,gBACjDnC,EAAKqC,KAAK1B,UAAUwB,cAAcC,SAAStC,EAAMqC,iBAGrDrF,EAAgBkF,EAAS,EA2MgBtD,SAAA,EAC7BG,EAAAA,EAAAA,KAACzD,EAAiB,CAAAsD,UAChBG,EAAAA,EAAAA,KAACyD,EAAAA,IAAW,OAEdzD,EAAAA,EAAAA,KAACjD,EAAe,CACd2G,YAAY,mBACZC,WAAY,CAAE,aAAc,iBAKjC3F,EAAamC,OAAS,EACrBnC,EAAauD,KAAI,CAACJ,EAAMyC,KACtBlE,EAAAA,EAAAA,MAACuD,EAAAA,GAAQ,CAEPxC,GAAI,CACF7D,QAAS,OACTE,eAAgB,gBAChBD,WAAY,SACZJ,QAAS,SACToD,SAAA,EAEFG,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,CACXC,QAAS3C,EAAKkC,KAAOlC,EAAKkC,KAAKhC,UAAY,SAE7CrB,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,MAAOiB,EAAKqC,KAAOrC,EAAKqC,KAAK1B,UAAY,MACzC5E,MAAM,YACNmD,QAAQ,WACR0C,KAAK,QACLtC,GAAI,CAAEuB,YAAa,WAErBhC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAY,CACXlE,UACEG,EAAAA,EAAAA,KAACgE,EAAAA,IAAa,CACZjB,KAAM,GACN7F,MAAO,OACPkD,MAAO,CACL6D,OAAQ,WAEVhC,QAASA,KACP1D,EAAgB4C,EAAKkC,KAAKjC,SAC1B3C,EAAgB0C,EAAKqC,KAAK3B,SAC1B/D,GAAa,GACbe,GAAS,EAAM,OAKvBmB,EAAAA,EAAAA,KAAC+D,EAAAA,EAAY,CACXlE,UAAUG,EAAAA,EAAAA,KAACkE,EAAAA,IAAoB,CAACnB,KAAM,GAAI7F,MAAO,YApC9C0G,MAyCT5D,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CACTR,MAAO,CACL+D,UAAW,UACXtE,SACH,4CAOTH,EAAAA,EAAAA,MAAC0E,EAAAA,EAAa,CAAAvE,SAAA,EACVhC,IACAmC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLE,QAASA,KACPnE,GAAa,GACbe,GAAS,EAAK,EAEhB3B,MAAM,UAAS2C,SAChB,aAIHG,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACE,QAASxE,EAAaP,MAAM,UAAS2C,SAAC,eAIzC,E,cCxXb,MAAMwE,EAAS,CACbzC,UAAW,OACX0C,WAAY,MACZpH,MAAO,yBACP6C,SAAU,OACVwE,SAAU,OAuFZ,EApFuB/I,IAAsB,IAArB,YAAEgJ,GAAahJ,EACrC,MAAOgC,EAAMiH,IAAW1G,EAAAA,EAAAA,WAAS,IAC1B2G,EAAMC,IAAW5G,EAAAA,EAAAA,UAAS,KAC1BL,EAAOkH,IAAY7G,EAAAA,EAAAA,UAAS,KAC5BH,EAAiBiH,IAAsB9G,EAAAA,EAAAA,UAAS,OAEhD+G,GAA4B,KAAEnH,KAAUoH,EAAAA,EAAAA,GAC7CC,EAAAA,IAqBF,OAVAzF,EAAAA,EAAAA,YAAU,KACR,GAAI5B,GAAQA,EAAKmH,2BAA4B,CAC3C,MAAM,aAAEG,GAAiBtH,EAAKmH,2BAC9BH,EAAQM,GACRL,EAASK,EAAa,GAAGC,QAAQC,cACjCN,EAAmBI,EAAa,GAAGC,QAAQE,YAC3CX,GAAQ,EACV,IACC,CAAC9G,KAGF+B,EAAAA,EAAAA,MAAA2F,EAAAA,SAAA,CAAAxF,SAAA,EACEH,EAAAA,EAAAA,MAAA,OAAKU,MAAO,CAAEkF,OAAQ,iBAAkBzF,SAAA,EACtCG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,yBACJG,EAAAA,EAAAA,KAAA,KAAGI,MAAOiE,EAAOxE,SAAC,wEAInB2E,GAAeA,EAAYrE,OAAS,GACnCH,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAClJ,QAAS,EAAEuD,SACxB2E,EAAYjD,KAAK2D,IAChBlF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACpE,MAAI,EAACsE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE/F,UACrCH,EAAAA,EAAAA,MAACmG,EAAAA,EAAI,CAACpF,GAAI,CAAE8D,SAAU,KAAM1E,SAAA,EAC1BG,EAAAA,EAAAA,KAAC8F,EAAAA,EAAc,CAAAjG,UACbH,EAAAA,EAAAA,MAACqG,EAAAA,EAAW,CAAAlG,SAAA,EACVG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACoF,cAAY,EAAC3F,QAAQ,QAAQ4F,UAAU,MAAKpG,SACrDqF,EAAQC,gBAEXzF,EAAAA,EAAAA,MAACkB,EAAAA,EAAU,CAACP,QAAQ,QAAQnD,MAAM,iBAAgB2C,SAAA,CAAC,WAC1CG,EAAAA,EAAAA,KAAA,MAAAH,SAAKqF,EAAQgB,yBAI1BlG,EAAAA,EAAAA,KAACmG,EAAAA,EAAW,CACV1F,GAAI,CACF7D,QAAS,OACTE,eAAgB,YAChB+C,UAEFG,EAAAA,EAAAA,KAACoG,EAAAA,IAAU,CACTrD,KAAM,GACN3C,MAAO,CACL6D,OAAQ,WAEVhC,QAASA,IApDHC,iBAChB4C,EAA2B,CAC/B3C,UAAW,CACTE,UAAW6C,EAAQE,aAErB,EA+C6BiB,CAAgBnB,WAvBMA,EAAQE,iBA+BzDpF,EAAAA,EAAAA,KAAA,KAAAH,SAAG,uBAGLG,EAAAA,EAAAA,KAACsG,EAAW,CACV9I,KAAMA,EACNC,YAAaA,IAAMgH,GAAQ,GAC3B9G,KAAM+G,EACNhH,MAAOA,EACPE,gBAAiBA,MAElB,E,cCjFP,MAAMtC,GAASC,EAAAA,EAAAA,IAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC3CE,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,iBAAiBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,iBAAiBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,OAAOC,MAAO,MAErDC,WAAY,EACZC,MAAO,OACP,CAACV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BH,WAAYT,EAAMa,QAAQ,GAC1BH,MAAO,QAEV,IAEKI,GAAoBhB,EAAAA,EAAAA,IAAO,MAAPA,EAAciB,IAAA,IAAC,MAAEf,GAAOe,EAAA,MAAM,CACtDC,QAAShB,EAAMa,QAAQ,EAAG,GAC1BI,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,SACjB,IAEKC,GAAkBxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,EAAkB0B,IAAA,IAAC,MAAExB,GAAOwB,EAAA,MAAM,CACxDC,MAAO,UACP,wBAAyB,CACvBT,QAAShB,EAAMa,QAAQ,EAAG,EAAG,EAAG,GAEhCa,YAAc,cAAa1B,EAAMa,QAAQ,MACzCc,WAAY3B,EAAM4B,YAAYC,OAAO,SACrCnB,MAAO,OACP,CAACV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BF,MAAO,OACP,UAAW,CACTA,MAAO,UAId,IAgJD,EA9IkBoB,IAA0B,IAAzB,MAAEW,EAAK,SAAEqI,GAAUhJ,EACpC,MAAOiJ,EAAeC,IAAoB1I,EAAAA,EAAAA,UAAS,IAyBnD,OAJAwB,EAAAA,EAAAA,YAAU,KACRkH,EAAiBvI,EAAM,GACtB,CAACA,KAGFwB,EAAAA,EAAAA,MAAA2F,EAAAA,SAAA,CAAAxF,SAAA,EACEH,EAAAA,EAAAA,MAACpE,EAAM,CAACkG,SAzBUC,IACpB,MAAMR,EAAQQ,EAAEyB,OAAOjC,MAEjBkC,EAAWjF,EAAMkF,QACpBjC,GACCA,EAAKE,UAAUiC,cAAcC,SAAStC,EAAMqC,gBAC3CnC,EAAKuF,YACJvF,EAAKuF,WAAWpD,cAAcC,SAAStC,EAAMqC,gBAC9CnC,EAAKwF,WACJxF,EAAKwF,UAAUrD,cAAcC,SAAStC,EAAMqC,gBAC7CnC,EAAKyF,YACJzF,EAAKyF,WAAWtD,cAAcC,SAAStC,EAAMqC,gBAC9CnC,EAAKqC,KAAK1B,WACTX,EAAKqC,KAAK1B,UAAUwB,cAAcC,SAAStC,EAAMqC,iBAGvDmD,EAAiBtD,EAAS,EASOtD,SAAA,EAC7BG,EAAAA,EAAAA,KAACzD,EAAiB,CAAAsD,UAChBG,EAAAA,EAAAA,KAACyD,EAAAA,IAAW,OAEdzD,EAAAA,EAAAA,KAACjD,EAAe,CACd2G,YAAY,oBACZC,WAAY,CAAE,aAAc,gBAGhC3D,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACL1D,OAAQ,sBACRmK,UAAW,SACXjF,UAAW,QACX/B,SAED2G,EAAcrG,OAAS,EACtBqG,EAAcjF,KAAK8B,IACjBrD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAI,CAAepF,GAAI,CAAEI,aAAc,GAAIhB,UAC1CH,EAAAA,EAAAA,MAACqG,EAAAA,EAAW,CAAAlG,SAAA,EACVH,EAAAA,EAAAA,MAACkB,EAAAA,EAAU,CAACP,QAAQ,KAAIR,SAAA,CACrBwD,EAAKhC,WACNrB,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,MAAOmD,EAAKG,KAAK1B,UACjB5E,MAAM,YACNmD,QAAQ,WACRI,GAAI,CAAEvE,WAAY,UAEK,WAAxBmH,EAAKyD,iBACJ9G,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,MAAOmD,EAAKyD,eACZ5J,MAAO,QACPmD,QAAQ,YACRI,GAAI,CAAEvE,WAAY,aAIxBwD,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UACZgD,SAAA,EAEFG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,YAAWR,SAAC,YAChCG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,YAAWR,SAC5BwD,EAAKqD,YAAc,YAGxBhH,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UACZgD,SAAA,EAEFG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,YAAWR,SAAC,iBAChCG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,YAAWR,SAC5BwD,EAAKsD,WAAa,YAGvBjH,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UACZgD,SAAA,EAEFG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,YAAWR,SAAC,YAChCG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,YAAWR,SAAEwD,EAAKuD,iBAcxC5G,EAAAA,EAAAA,KAACM,EAAAA,EAAO,KACRN,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACTE,eAAgB,WAChBD,WAAY,SACZ+E,UAAW,QACX/B,UAEFG,EAAAA,EAAAA,KAAC+G,EAAAA,IAAc,CACb7J,MAAM,YACNkD,MAAO,CACL6D,OAAQ,WAEVvG,MAAM,YACNuE,QAASA,IAAMsE,EAASlD,WAhFrBA,EAAK2D,OAuFlBhH,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,KAAK4G,MAAM,SAAQpH,SAAC,4CAK3C,E,gBC7LP,MA2NA,GA3NkBrE,IAA2C,IAA1C,SAAE0L,EAAQ,aAAE5I,EAAY,SAAEiI,GAAU/K,EACrD,MAAO2L,EAAWC,IAAgBrJ,EAAAA,EAAAA,WAAS,IACpCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,OAC1CsJ,EAAUC,IAAevJ,EAAAA,EAAAA,UAAS,CACvCwJ,SAAU,GACVC,UAAW,GACXC,SAAU,GACVnF,OAAQ,GACRoF,cAAe,YAGVrI,IAAcF,EAAAA,EAAAA,GAAYG,EAAAA,KAC1BqI,IAAWxI,EAAAA,EAAAA,GAAYyI,EAAAA,IAExBnI,GAAWV,EAAAA,EAAAA,GAAS5D,IAE1BoE,EAAAA,EAAAA,YAAU,KACR,GACEE,EAAS9B,MACT8B,EAAS9B,KAAK8B,UACdA,EAAS9B,KAAK8B,SAASrB,OACvBqB,EAAS9B,KAAK8B,SAASrB,MAAM+B,OAAS,EACtC,CACA,MAAM/B,EAAQqB,EAAS9B,KAAK8B,SAASrB,MAAMmD,KAAKiC,IACvC,CACLvC,MAAOuC,EAAK3B,QACZ3B,MAAOsD,EAAK1B,cAMhB,GAFAzD,EAASD,GAELE,EAAc,CAChB,MAAME,EAAeJ,EAAM8C,MACxBsC,GAASA,EAAKvC,QAAU3C,EAAakF,KAAK3B,UAG7CpD,EAAgBD,EAClB,CACF,IACC,CAACiB,EAAS9B,QAEb4B,EAAAA,EAAAA,YAAU,KACJjB,GACFgJ,EAAY,CACVC,SAAUjJ,EAAa+C,UACvBmG,UAAWlJ,EAAaoI,YAAc,GACtCe,SAAUnJ,EAAaqI,WAAa,GACpCrE,OAAQhE,EAAakF,KAAK3B,QAC1B6F,cAAepJ,EAAawI,gBAEhC,GACC,CAACxI,IAgDJ,OACEoB,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CACFC,GAAI,CACF7D,QAAS,OACT8D,cAAe,SACf7D,WAAY,UACZgD,SAAA,EAEFG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,KAAKI,GAAI,CAAEI,aAAc,QAAShB,SACnDvB,EAAe,YAAc,cAEhCoB,EAAAA,EAAAA,MAAA,QAAMwH,SAzDWhF,UAKnB,GAJAT,EAAEoG,iBAEFT,GAAa,GAET9I,EAAc,CAChB,MAAM,KAAEX,SAAe0B,EAAW,CAChC8C,UAAW,CACTC,OAAQ9D,EAAa8C,QACrBsG,cAAeL,EAASK,cACxBF,UAAWH,EAASG,UACpBC,SAAUJ,EAASI,SACnBF,SAAUF,EAASE,SACnBjF,OAAQ+E,EAAS/E,UAIjB3E,GAAQA,EAAK0B,YAAyC,MAA3B1B,EAAK0B,WAAWkD,QAC7CC,EAAAA,GAAMC,QAAQ,6BAEdyE,EAASvJ,EAAK0B,WAAWgE,OAEzBb,EAAAA,GAAMG,MAAMhF,EAAK0B,WAAWqD,QAEhC,KAAO,CACL,MAAM,KAAE/E,SAAegK,EAAQ,CAC7BxF,UAAW,CACTqF,UAAWH,EAASG,UACpBC,SAAUJ,EAASI,SACnBF,SAAUF,EAASE,SACnBjF,OAAQ+E,EAAS/E,OACjBwF,aAAc,aAIdnK,GAAQA,EAAKgK,SAAmC,MAAxBhK,EAAKgK,QAAQpF,QACvCC,EAAAA,GAAMC,QAAQ,2BACdyE,EAASvJ,EAAKgK,QAAQtE,OAEtBb,EAAAA,GAAMG,MAAMhF,EAAKgK,QAAQjF,QAE7B,CAEA0E,GAAa,EAAM,EAcYvH,SAAA,EAC3BG,EAAAA,EAAAA,KAAC+H,GAAAA,EAAS,CACR7H,MAAM,OACNe,MAAOoG,EAASE,SAChB/F,SAAWC,GACT6F,EAAY,IAAKD,EAAUE,SAAU9F,EAAEyB,OAAOjC,QAEhDZ,QAAQ,WACR2H,WAAS,KAEXhI,EAAAA,EAAAA,KAAC+H,GAAAA,EAAS,CACR7H,MAAM,QACNe,MAAOoG,EAASG,UAChBhG,SAAWC,GACT6F,EAAY,IAAKD,EAAUG,UAAW/F,EAAEyB,OAAOjC,QAEjDZ,QAAQ,WACR2H,WAAS,KAEXhI,EAAAA,EAAAA,KAAC+H,GAAAA,EAAS,CACR7H,MAAM,aACNe,MAAOoG,EAASI,SAChBjG,SAAWC,GACT6F,EAAY,IAAKD,EAAUI,SAAUhG,EAAEyB,OAAOjC,QAEhDZ,QAAQ,WACR2H,WAAS,KAEXtI,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAACC,GAAI,CAAEmB,UAAW,QAAS/B,SAAA,EAC7BG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,QAAQI,GAAI,CAAEI,aAAc,QAAShB,SAAC,UAG1DG,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,KAAK,OACLE,MAAOzC,EACP8C,QAASlD,EACToD,SAAWC,IACThD,EAAgBgD,GAChB6F,EAAY,IAAKD,EAAU/E,OAAQb,EAAER,OAAQ,EAE/CS,UAAU,qBACVC,gBAAgB,cAGnBrD,IACCoB,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAACC,GAAI,CAAEmB,UAAW,QAAS/B,SAAA,EAC7BG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,QAAQI,GAAI,CAAEI,aAAc,QAAShB,SAAC,oBAG1DG,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,KAAK,SACLE,MAAO,CACLA,MAAOoG,EAASK,cAChBxH,MAAOmH,EAASK,eAElBpG,QAAS,CACP,CAAEL,MAAO,SAAUf,MAAO,UAC1B,CAAEe,MAAO,WAAYf,MAAO,aAE9BsB,SAAWC,GACT6F,EAAY,IAAKD,EAAUK,cAAejG,EAAER,QAE9CS,UAAU,qBACVC,gBAAgB,eAItB3B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLkG,KAAK,SACL5H,QAAQ,YACRnD,MAAM,UACNkD,MAAO,CACLwB,UAAW,QAEbgB,SAAUuE,IAAcE,EAASE,WAAaF,EAAS/E,OAAOzC,SAE7DvB,EAAe,SAAW,aAE5BA,IACC0B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLkG,KAAK,SACL5H,QAAQ,WACRnD,MAAM,YACNkD,MAAO,CACLwB,UAAW,OACX1F,WAAY,QAEd+F,QAASA,KACPsE,EAAS,MACTe,EAAY,CACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVnF,OAAQ,GACRoF,cAAe,UACf,EAEJ9E,SAAUuE,EAAUtH,SACrB,gBAKD,EC9KV,GA7CcrE,IAA0B,IAAzB,MAAE0C,EAAK,SAAEC,GAAU3C,EAChC,MAAO8C,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,MAE3CmK,EAAoB7E,IACxB9E,EAAgB8E,EAAK,EAoBvB,OACE3D,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACC,WAAS,EAAClJ,QAAS,EAAEuD,SAAA,EACzBG,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACpE,MAAI,EAACsE,GAAI,EAAE5F,UACb3B,GAASA,EAAMiC,OAAS,GACxBH,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,KAAIR,SAAC,oBAEzBG,EAAAA,EAAAA,KAACmI,EAAS,CAACjK,MAAOA,EAAOqI,SAAU2B,OAGvClI,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACpE,MAAI,EAACsE,GAAI,KACfzF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACpE,MAAI,EAACsE,GAAI,EAAE5F,UACfG,EAAAA,EAAAA,KAACoI,GAAS,CACRlB,SA7BkB7D,IACxB,GAAIA,EAAKjC,QAAS,CAChB,MAAMiH,EAAenK,EAAMqD,KAAK+G,GAC1BA,EAAElH,UAAYiC,EAAKjC,QACdiC,EAGFiF,IAGTnK,EAASkK,EACX,KAAO,CACL,MAAME,EAAW,IAAIrK,EAAOmF,GAC5BlF,EAASoK,EACX,GAgBMjK,aAAcA,EACdiI,SAAU2B,QAGT,ECVX,GAhCkB1M,IAA8B,IAA7B,MAAE4C,EAAK,aAAEoK,GAAchN,EACxC,MAAOgD,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,GAOjD,OACEiC,EAAAA,EAAAA,KAACyI,EAAAA,EAAI,CACHC,YAAY,WACZrI,QAAQ,aACRY,MAAOzC,EACPgD,SAVqBmH,CAACC,EAAOC,KAC/BpK,EAAgBoK,GAChBL,EAAapK,EAAMyK,GAAU,EAQAhJ,SAE1BzB,EAAMmD,KAAI,CAACiC,EAAMI,KAChB5D,EAAAA,EAAAA,KAAC8I,EAAAA,EAAG,CAEF5I,MAAOsD,EAAK1B,UACTiH,QAAQ,KAAM,KACdA,QAAQ,SAAUC,GAAMA,EAAEC,gBAC7B7I,MAAO,CACLvD,WAAY,aACZkD,SAAU,SAEZrC,MAAO8F,EAAK0F,WARPtF,MAWJ,E,oDCnBX,MAkHA,GAlHwBpI,IAA6C,IAA5C,MAAE4C,EAAK,KAAEoF,EAAI,YAAE2F,EAAW,SAAE9K,GAAU7C,EAC7D,MAAO4N,EAAoBC,IAAyBtL,EAAAA,EAAAA,UAClDyF,EAAK2F,YAAY,KAGZG,EAAaC,IAAkBxL,EAAAA,EAAAA,WAAS,IAExCyL,IAAcrK,EAAAA,EAAAA,GAAY9D,GAE3BoO,EAA0Bb,IAC9BS,EAAsBT,EAAM1F,OAAOjC,MAAM,EA+C3C,OAJA1B,EAAAA,EAAAA,YAAU,KACR8J,EAAsB7F,EAAK2F,YAAY,GAAG,GACzC,CAAC3F,KAGF9D,EAAAA,EAAAA,MAAA,OACEU,MAAO,CACLxD,QAAS,OACT8D,cAAe,SACf5D,eAAgB,iBAChB+C,SAAA,EAEFH,EAAAA,EAAAA,MAACiB,EAAAA,EAAW,CAAAd,SAAA,EACVH,EAAAA,EAAAA,MAACgK,GAAAA,EAAS,CACR1C,GAAG,iCACH5G,MAAO,CACLkE,WAAY,OACZvE,SAAU,OACV7C,MAAO,WACP2C,SAAA,CACH,kBACiB,IACf2D,EAAK1B,UACHiH,QAAQ,KAAM,KACdA,QAAQ,SAAUC,GAAMA,EAAEC,oBAE/BjJ,EAAAA,EAAAA,KAAC2J,GAAAA,EAAU,CACT,kBAAgB,iCAChB5I,KAAK,sBAAqBlB,SAEzBsJ,GACCA,EAAYhJ,OAAS,GACrBgJ,EAAY5H,KAAKqI,IACf5J,EAAAA,EAAAA,KAAC6J,GAAAA,EAAgB,CAEf5I,MAAO2I,EAAWE,QAClBC,SACE/J,EAAAA,EAAAA,KAACgK,GAAAA,EAAK,CACJxI,SAAUiI,EACV1I,KAAM6I,EAAWK,UACjBC,QAASd,IAAuBQ,EAAWE,UAG/C5J,MAAO0J,EAAWK,WATbL,EAAWE,iBAe1B9J,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACL1B,QAAQ,YACRI,GAAI,CAAEtE,MAAO,QAASgO,GAAI,GAC1BlI,QA5F0BC,UAC9BqH,GAAe,SAETC,EAAW,CACfrH,UAAW,CACTG,OAAQkB,EAAK3B,QACbsH,YAAa,CAACC,MAGfgB,MAAMC,IAC8B,MAA/BA,EAAI1M,KAAK6L,WAAWjH,QACtBlE,GAAUiM,IACR,MAAMC,EAAW,IAAID,GACf1G,EAAQ2G,EAASC,WACpBC,GAAYA,EAAQ5I,UAAY2B,EAAK3B,UAMxC,OAHA2B,EAAK2F,YAAc,CAACC,GACpBmB,EAAS3G,GAASJ,EAEX+G,CAAQ,IAGjBhB,GAAe,GAEf/G,EAAAA,GAAMC,QAAQ,uCAEd8G,GAAe,GAEf/G,EAAAA,GAAMG,MAAM,2CACd,IAED+H,OAAOC,IACNC,QAAQC,IAAIF,GAEZnI,EAAAA,GAAMG,MAAM,2CACZ4G,GAAe,EAAM,GACrB,EAwDA3G,SAAUwG,IAAuB5F,EAAK2F,YAAY,IAAMG,EAAYzJ,SACrE,mBAGG,EC7FV,GAxBoBrE,IAAuC,IAAtC,YAAE2N,EAAW,MAAE/K,EAAK,SAAEC,GAAU7C,EACnD,MAAOgD,EAAcC,IAAmBV,EAAAA,EAAAA,UAASK,EAAM,IAMvD,OACEsB,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACC,WAAS,EAAClJ,QAAS,EAAEuD,SAAA,EACzBG,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACpE,MAAI,EAACsE,GAAI,EAAE5F,UACfG,EAAAA,EAAAA,KAAC8K,GAAS,CAAC1M,MAAOA,EAAOoK,aAPLhF,IACxB/E,EAAgB+E,EAAK,OAQnBxD,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACpE,MAAI,EAACsE,GAAI,EAAE5F,UACfG,EAAAA,EAAAA,KAAC+K,GAAe,CACd3M,MAAOA,EACPC,SAAUA,EACVmF,KAAMhF,EACN2K,YAAaA,QAGZ,ECxBL6B,GAAsB5P,EAAAA,EAAI;;;;;;;;;;;;;;;GCuBjBG,EAAAA,EAAAA,IAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC3CE,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,iBAAiBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,iBAAiBC,EAAAA,EAAAA,IAAML,EAAMM,QAAQC,OAAOC,MAAO,MAErDC,WAAY,EACZC,MAAO,OACP,CAACV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BH,WAAYT,EAAMa,QAAQ,GAC1BH,MAAO,QAEV,KAEyBZ,EAAAA,EAAAA,IAAO,MAAPA,EAAciB,IAAA,IAAC,MAAEf,GAAOe,EAAA,MAAM,CACtDC,QAAShB,EAAMa,QAAQ,EAAG,GAC1BI,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,SACjB,KAEuBvB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,EAAkB0B,IAAA,IAAC,MAAExB,GAAOwB,EAAA,MAAM,CACxDC,MAAO,UACP,wBAAyB,CACvBT,QAAShB,EAAMa,QAAQ,EAAG,EAAG,EAAG,GAChCa,YAAc,cAAa1B,EAAMa,QAAQ,MACzCc,WAAY3B,EAAM4B,YAAYC,OAAO,SACrCnB,MAAO,OACP,CAACV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BF,MAAO,OACP,UAAW,CACTA,MAAO,UAId,I,gBCnDM,SAAS8O,GAAeC,GAC7B,MAAM,SAAErL,EAAQ,MAAEoB,EAAK,MAAE2C,KAAUuH,GAAUD,EAE7C,OACElL,EAAAA,EAAAA,KAAA,OACEwD,KAAK,WACL4H,OAAQnK,IAAU2C,EAClBoD,GAAK,mBAAkBpD,IACvB,kBAAkB,cAAaA,OAC3BuH,EAAKtL,SAERoB,IAAU2C,IACT5D,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,CAAE4K,EAAG,GAAIxL,UAChBG,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAAAf,SAAEA,OAKvB,CAQO,SAASyL,GAAU1H,GACxB,MAAO,CACLoD,GAAK,cAAapD,IAClB,gBAAkB,mBAAkBA,IAExC,CAEe,SAAS2H,KAEtB,MAAM,SAAEC,IAAaC,EAAAA,GAAAA,OAEdxK,EAAOyK,IAAY3N,EAAAA,EAAAA,UAAS,IAC5BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BoL,EAAawC,IAAkB5N,EAAAA,EAAAA,UAAS,KACxCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAC7B6N,EAAcC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAErDnN,GAAcC,EAAAA,EAAAA,GAASC,EAAAA,IAEvBkN,GAAoBnN,EAAAA,EAAAA,GAASiM,IAE7B/L,GAAcF,EAAAA,EAAAA,GAAS5D,IAE7BoE,EAAAA,EAAAA,YAAU,KACJT,EAAYnB,MACdQ,EAASW,EAAYnB,KAAK6B,SAAStB,MACrC,GACC,CAACY,EAAYnB,QAEhB4B,EAAAA,EAAAA,YAAU,KACJ2M,EAAkBvO,MACpBgO,EAAeO,EAAkBvO,KAAKwO,eAAehD,YACvD,GACC,CAAC+C,EAAkBvO,QAEtB4B,EAAAA,EAAAA,YAAU,KACJN,EAAYtB,MACdU,EAASY,EAAYtB,KAAK8B,SAASrB,MACrC,GACC,CAACa,EAAYtB,OAMhB,OACEqC,EAAAA,EAAAA,KAAAqF,EAAAA,SAAA,CAAAxF,SACwB,gBAArB+L,EAAYpI,MACQ,kBAArBoI,EAAYpI,MACVxD,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACP,QAAQ,KAAK4F,UAAU,KAAKxF,GAAI,CAAEmB,UAAW,QAAS/B,SAAC,iDAInEH,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAACC,GAAI,CAAEtE,MAAO,OAAQyF,UAAW,QAAS/B,SAAA,EAC5CG,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,CAAE2L,aAAc,EAAGC,YAAa,WAAYxM,UACnDH,EAAAA,EAAAA,MAAC+I,EAAAA,EAAI,CACHxH,MAAOA,EACPO,SAhBS8K,CAAC1D,EAAOC,KAC3B6C,EAAS7C,EAAS,EAgBR,aAAW,kBAAiBhJ,SAAA,EAE5BG,EAAAA,EAAAA,KAAC8I,EAAAA,EAAG,CAAC5I,MAAM,qBAAsBoL,GAAU,MAC3CtL,EAAAA,EAAAA,KAAC8I,EAAAA,EAAG,CAAC5I,MAAM,wBAAyBoL,GAAU,MAC9CtL,EAAAA,EAAAA,KAAC8I,EAAAA,EAAG,CAAC5I,MAAM,WAAYoL,GAAU,WAIrCtL,EAAAA,EAAAA,KAACiL,GAAc,CAAChK,MAAOA,EAAO2C,MAAO,EAAE/D,UACrCG,EAAAA,EAAAA,KAACuM,EAAc,CAAC/H,YAAagH,OAE/BxL,EAAAA,EAAAA,KAACiL,GAAc,CAAChK,MAAOA,EAAO2C,MAAO,EAAE/D,UACrCG,EAAAA,EAAAA,KAACwM,GAAW,CACVrD,YAAaA,EACb/K,MAAOA,EACPC,SAAUA,OAGd2B,EAAAA,EAAAA,KAACiL,GAAc,CAAChK,MAAOA,EAAO2C,MAAO,EAAE/D,UACrCG,EAAAA,EAAAA,KAACyM,GAAK,CAACvO,MAAOA,EAAOC,SAAUA,UAS3C,C,8EC3HA,MAAMa,EAAgB5D,EAAAA,EAAI;;;;;;;;;;;;;;;;;;;EAqBpBwM,EAAWxM,EAAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoCfkE,EAAclE,EAAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwClBsR,EAAkBtR,EAAAA,EAAI","sources":["graphql/queries/rolesRequests.js","components/Modals/AssignModal.js","components/AssignProjects.js","components/UsersList.js","components/UsersForm.js","pages/Users.js","components/RolesList.js","components/PermissionsList.js","pages/Permissions.js","graphql/queries/permissionsRequests.js","components/ProjectUserAssign.js","pages/Management.js","graphql/queries/usersRequests.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nconst GET_ALL_ROLES = gql`\n  query GetRoles {\n    getRoles {\n      message\n      status\n      roles {\n        role_id\n        role_name\n        role_desc\n        permissions\n        is_default\n        role_status\n      }\n    }\n  }\n`;\n\nconst GET_USER_ROLE = gql`\n  query GetRole($roleId: ID!) {\n    getRole(role_id: $roleId) {\n      message\n      status\n      role {\n        role_id\n        role_desc\n        role_name\n        role_status\n      }\n    }\n  }\n`;\n\nconst UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: ID!, $permissions: [String]) {\n    updateRole(role_id: $roleId, permissions: $permissions) {\n      message\n      status\n      role {\n        permissions\n        role_id\n        role_desc\n        role_name\n        role_status\n        is_default\n      }\n    }\n  }\n`;\n\nexport { GET_ALL_ROLES, GET_USER_ROLE, UPDATE_ROLE };\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  InputBase,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  alpha,\n  styled,\n} from \"@mui/material\";\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\nimport { BiSearchAlt, BiSolidPencil } from \"react-icons/bi\";\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  GET_ALL_USERS,\n  UPDATE_USER,\n} from \"../../graphql/queries/usersRequests\";\nimport { GET_ALL_ROLES } from \"../../graphql/queries/rolesRequests\";\nimport toast from \"react-hot-toast\";\nimport { BeatLoader } from \"react-spinners\";\nimport { ADD_PROJECT_ROLE } from \"../../graphql/queries/projectsRequests\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst AssignModal = ({ open, handleClose, title, data, selectedProject }) => {\n  const [toggleAdd, setToggleAdd] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [isBeingUpdated, setIsBeingUpdated] = useState(false);\n  const [isNew, setIsNew] = useState(false);\n  const getAllUsers = useQuery(GET_ALL_USERS);\n  const getAllRoles = useQuery(GET_ALL_ROLES);\n  const [addProjectRole] = useMutation(ADD_PROJECT_ROLE);\n\n  const [updateUser] = useMutation(UPDATE_USER);\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n\n    const filtered = data.filter(\n      (item) =>\n        item.user.user_name.toLowerCase().includes(value.toLowerCase()) ||\n        item.role.role_name.toLowerCase().includes(value.toLowerCase())\n    );\n\n    setFilteredData(filtered);\n  };\n\n  useEffect(() => {\n    setFilteredData(data);\n  }, [data]);\n\n  useEffect(() => {\n    if (getAllUsers.data) {\n      setUsers(getAllUsers.data.getUsers.users);\n    }\n  }, [getAllUsers.data]);\n\n  useEffect(() => {\n    if (getAllRoles.data) {\n      setRoles(getAllRoles.data.getRoles.roles);\n    }\n  }, [getAllRoles.data]);\n\n  const handleAddUser = async () => {\n    if (selectedUser && selectedRole) {\n      setIsBeingUpdated(true);\n      const { data } = await addProjectRole({\n        variables: {\n          userId: selectedUser,\n          projectId: selectedProject,\n          roleId: selectedRole,\n        },\n      });\n\n      if (data.addProjectRole.status === 200) {\n        toast.success(data.addProjectRole.message);\n        setSelectedUser(null);\n        setSelectedRole(null);\n        setIsBeingUpdated(false);\n        setToggleAdd(false);\n      } else {\n        setIsBeingUpdated(false);\n        toast.error(data.addProjectRole.message);\n      }\n    } else {\n      toast.error(\"Please select user and role\");\n    }\n  };\n\n  const handleUpdateUser = async () => {\n    if (selectedUser && selectedRole) {\n      setIsBeingUpdated(true);\n      const { data } = await updateUser({\n        variables: {\n          userId: selectedUser,\n          roleId: selectedRole,\n        },\n      });\n\n      if (data.updateUser.status === 200) {\n        toast.success(data.updateUser.message);\n        setSelectedUser(null);\n        setSelectedRole(null);\n        setIsBeingUpdated(false);\n        setToggleAdd(false);\n      } else {\n        setIsBeingUpdated(false);\n        toast.error(data.updateUser.message);\n      }\n    } else {\n      toast.error(\"Please select user and role\");\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle fontSize={\"18px\"}>\n        <Chip\n          label={data.length}\n          style={{\n            color: \"#333\",\n          }}\n          variant=\"contained\"\n        />{\" \"}\n        Users Assigned to{\" \"}\n        <Chip label={title} color=\"primary\" variant=\"contained\" />\n        <Divider />\n      </DialogTitle>\n      <DialogContent>\n        {toggleAdd ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <FormControl sx={{ width: \"100%\" }}>\n              <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\n                Select User\n              </Typography>\n              <Select\n                name=\"user\"\n                defaultValue={\n                  !isNew\n                    ? {\n                        value: selectedUser,\n                        label: users.find(\n                          (item) => item.user_id === selectedUser\n                        ).user_name,\n                      }\n                    : null\n                }\n                options={\n                  users.length > 0\n                    ? users.map((item) => ({\n                        value: item.user_id,\n                        label: item.user_name,\n                      }))\n                    : []\n                }\n                onChange={(e) => {\n                  setSelectedUser(e.value);\n                }}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n              />\n            </FormControl>\n            <FormControl sx={{ width: \"100%\", marginTop: \"10px\" }}>\n              <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\n                Select Role\n              </Typography>\n              <Select\n                name=\"role\"\n                defaultValue={\n                  !isNew\n                    ? {\n                        value: selectedRole,\n                        label: roles.find(\n                          (item) => item.role_id === selectedRole\n                        ).role_name,\n                      }\n                    : null\n                }\n                options={\n                  roles.length > 0\n                    ? roles.map((item) => ({\n                        value: item.role_id,\n                        label: item.role_name,\n                      }))\n                    : []\n                }\n                onChange={(e) => {\n                  setSelectedRole(e.value);\n                }}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n              />\n            </FormControl>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                width: \"100%\",\n                marginTop: \"10px\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ marginTop: \"10px\", marginRight: \"10px\" }}\n                onClick={isNew ? handleAddUser : handleUpdateUser}\n                disabled={isBeingUpdated}\n              >\n                {isBeingUpdated ? (\n                  <BeatLoader color={\"#fff\"} loading={true} size={10} />\n                ) : isNew ? (\n                  \"Save\"\n                ) : (\n                  \"Modify\"\n                )}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                sx={{ marginTop: \"10px\" }}\n                onClick={() => {\n                  setSelectedUser(null);\n                  setSelectedRole(null);\n                  setToggleAdd(false);\n                }}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        ) : (\n          <List>\n            {/* add search field */}\n            <ListItem\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                padding: \"5px 0\",\n              }}\n            >\n              <Search onChange={handleSearch}>\n                <SearchIconWrapper>\n                  <BiSearchAlt />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search any…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </ListItem>\n\n            {filteredData.length > 0 ? (\n              filteredData.map((item, index) => (\n                <ListItem\n                  key={index}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    padding: \"5px 0\",\n                  }}\n                >\n                  <ListItemText\n                    primary={item.user ? item.user.user_name : \"N/A\"}\n                  />\n                  <Chip\n                    label={item.role ? item.role.role_name : \"N/A\"}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ marginRight: \"10px\" }}\n                  />\n                  <ListItemIcon\n                    children={\n                      <BiSolidPencil\n                        size={20}\n                        color={\"gray\"}\n                        style={{\n                          cursor: \"pointer\",\n                        }}\n                        onClick={() => {\n                          setSelectedUser(item.user.user_id);\n                          setSelectedRole(item.role.role_id);\n                          setToggleAdd(true);\n                          setIsNew(false);\n                        }}\n                      />\n                    }\n                  />\n                  <ListItemIcon\n                    children={<AiOutlineMinusCircle size={20} color={\"red\"} />}\n                  />\n                </ListItem>\n              ))\n            ) : (\n              <Typography\n                style={{\n                  alignSelf: \"center\",\n                }}\n              >\n                No users assigned to this project\n              </Typography>\n            )}\n          </List>\n        )}\n      </DialogContent>\n      <DialogActions>\n        {!toggleAdd && (\n          <Button\n            onClick={() => {\n              setToggleAdd(true);\n              setIsNew(true);\n            }}\n            color=\"primary\"\n          >\n            Add New\n          </Button>\n        )}\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AssignModal;\n","import React, { useEffect } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea, CardActions, Grid } from \"@mui/material\";\nimport { GrFormView } from \"react-icons/gr\";\nimport AssignModal from \"./Modals/AssignModal\";\nimport { useState } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_PROJECT_ROLES_BY_PROJECT_ID } from \"../graphql/queries/projectsRequests\";\n\nconst Styles = {\n  marginTop: \"15px\",\n  fontWeight: \"400\",\n  color: \"rgba(125, 127, 136, 1)\",\n  fontSize: \"12px\",\n  maxWidth: \"80%\",\n};\n\nconst AssignProjects = ({ allProjects }) => {\n  const [open, setOpen] = useState(false);\n  const [list, setList] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  const [getProjectRolesByProjectId, { data }] = useLazyQuery(\n    GET_PROJECT_ROLES_BY_PROJECT_ID\n  );\n\n  const handleOpenModal = async (project) => {\n    await getProjectRolesByProjectId({\n      variables: {\n        projectId: project.project_id,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (data && data.getProjectRolesByProjectId) {\n      const { project_role } = data.getProjectRolesByProjectId;\n      setList(project_role);\n      setTitle(project_role[0].project.project_name);\n      setSelectedProject(project_role[0].project.project_id);\n      setOpen(true);\n    }\n  }, [data]);\n\n  return (\n    <>\n      <div style={{ margin: \"10px 0 15px 0\" }}>\n        <h1>Projects Assignment</h1>\n        <p style={Styles}>\n          In the project assignment page you can assign projects to users.\n        </p>\n      </div>\n      {allProjects && allProjects.length > 0 ? (\n        <Grid container spacing={2}>\n          {allProjects.map((project) => (\n            <Grid item xs={12} sm={6} md={4} lg={3} key={project.project_id}>\n              <Card sx={{ maxWidth: 250 }}>\n                <CardActionArea>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"body1\" component=\"div\">\n                      {project.project_name}\n                    </Typography>\n                    <Typography variant=\"body4\" color=\"text.secondary\">\n                      SF Id: <em>{project.sf_project_id}</em>\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <GrFormView\n                    size={30}\n                    style={{\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => handleOpenModal(project)}\n                  />\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <p>No projects found</p>\n      )}\n\n      <AssignModal\n        open={open}\n        handleClose={() => setOpen(false)}\n        data={list}\n        title={title}\n        selectedProject={selectedProject}\n      />\n    </>\n  );\n};\n\nexport default AssignProjects;\n","// UsersList.js\nimport {\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  Divider,\n  InputBase,\n  Typography,\n  alpha,\n  styled,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst UsersList = ({ users, onSelect }) => {\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n\n    const filtered = users.filter(\n      (item) =>\n        item.user_name.toLowerCase().includes(value.toLowerCase()) ||\n        (item.user_email &&\n          item.user_email.toLowerCase().includes(value.toLowerCase())) ||\n        (item.mobile_no &&\n          item.mobile_no.toLowerCase().includes(value.toLowerCase())) ||\n        (item.sf_user_id &&\n          item.sf_user_id.toLowerCase().includes(value.toLowerCase())) ||\n        (item.role.role_name &&\n          item.role.role_name.toLowerCase().includes(value.toLowerCase()))\n    );\n\n    setFilteredUsers(filtered);\n  };\n\n  useEffect(() => {\n    setFilteredUsers(users);\n  }, [users]);\n\n  return (\n    <>\n      <Search onChange={handleSearch}>\n        <SearchIconWrapper>\n          <BiSearchAlt />\n        </SearchIconWrapper>\n        <StyledInputBase\n          placeholder=\"Search user…\"\n          inputProps={{ \"aria-label\": \"search\" }}\n        />\n      </Search>\n      <div\n        style={{\n          height: \"calc(100vh - 200px)\",\n          overflowY: \"scroll\",\n          marginTop: \"20px\",\n        }}\n      >\n        {filteredUsers.length > 0 ? (\n          filteredUsers.map((user) => (\n            <Card key={user.id} sx={{ marginBottom: 2 }}>\n              <CardContent>\n                <Typography variant=\"h6\">\n                  {user.user_name}\n                  <Chip\n                    label={user.role.role_name}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    sx={{ marginLeft: \"10px\" }}\n                  />\n                  {user.account_status !== \"active\" && (\n                    <Chip\n                      label={user.account_status}\n                      color={\"error\"}\n                      variant=\"contained\"\n                      sx={{ marginLeft: \"5px\" }}\n                    />\n                  )}\n                </Typography>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Typography variant=\"subtitle2\">Email:</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {user.user_email || \"N/A\"}\n                  </Typography>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Typography variant=\"subtitle2\">Mobile No.:</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {user.mobile_no || \"N/A\"}\n                  </Typography>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Typography variant=\"subtitle2\">SF Id:</Typography>\n                  <Typography variant=\"subtitle1\">{user.sf_user_id}</Typography>\n                </Box>\n                {/* <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Typography variant=\"subtitle2\">\n                    Project Belongs To:\n                  </Typography>\n                  <Typography variant=\"subtitle1\">{user.project}</Typography>\n                </Box> */}\n                <Divider />\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <BsPencilSquare\n                    color=\"secondary\"\n                    style={{\n                      cursor: \"pointer\",\n                    }}\n                    title=\"Edit User\"\n                    onClick={() => onSelect(user)}\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Typography variant=\"em\" align=\"center\">\n            Please wait while we fetch users...\n          </Typography>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default UsersList;\n","// UsersForm.js\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { ADD_USER, UPDATE_USER } from \"../graphql/queries/usersRequests\";\nimport { GET_ALL_ROLES } from \"../graphql/queries/rolesRequests\";\nimport toast from \"react-hot-toast\";\n\nconst UsersForm = ({ onSubmit, selectedUser, onSelect }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [userInfo, setUserInfo] = useState({\n    userName: \"\",\n    userEmail: \"\",\n    mobileNo: \"\",\n    roleId: \"\",\n    accountStatus: \"active\",\n  });\n\n  const [updateUser] = useMutation(UPDATE_USER);\n  const [addUser] = useMutation(ADD_USER);\n\n  const getRoles = useQuery(GET_ALL_ROLES);\n\n  useEffect(() => {\n    if (\n      getRoles.data &&\n      getRoles.data.getRoles &&\n      getRoles.data.getRoles.roles &&\n      getRoles.data.getRoles.roles.length > 0\n    ) {\n      const roles = getRoles.data.getRoles.roles.map((role) => {\n        return {\n          value: role.role_id,\n          label: role.role_name,\n        };\n      });\n\n      setRoles(roles);\n\n      if (selectedUser) {\n        const selectedRole = roles.find(\n          (role) => role.value === selectedUser.role.role_id\n        );\n\n        setSelectedRole(selectedRole);\n      }\n    }\n  }, [getRoles.data]);\n\n  useEffect(() => {\n    if (selectedUser) {\n      setUserInfo({\n        userName: selectedUser.user_name,\n        userEmail: selectedUser.user_email || \"\",\n        mobileNo: selectedUser.mobile_no || \"\",\n        roleId: selectedUser.role.role_id,\n        accountStatus: selectedUser.account_status,\n      });\n    }\n  }, [selectedUser]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    if (selectedUser) {\n      const { data } = await updateUser({\n        variables: {\n          userId: selectedUser.user_id,\n          accountStatus: userInfo.accountStatus,\n          userEmail: userInfo.userEmail,\n          mobileNo: userInfo.mobileNo,\n          userName: userInfo.userName,\n          roleId: userInfo.roleId,\n        },\n      });\n\n      if (data && data.updateUser && data.updateUser.status === 200) {\n        toast.success(\"User updated successfully\");\n\n        onSubmit(data.updateUser.user);\n      } else {\n        toast.error(data.updateUser.message);\n      }\n    } else {\n      const { data } = await addUser({\n        variables: {\n          userEmail: userInfo.userEmail,\n          mobileNo: userInfo.mobileNo,\n          userName: userInfo.userName,\n          roleId: userInfo.roleId,\n          userPassword: \"MP@1234\",\n        },\n      });\n\n      if (data && data.addUser && data.addUser.status === 201) {\n        toast.success(\"User added successfully\");\n        onSubmit(data.addUser.user);\n      } else {\n        toast.error(data.addUser.message);\n      }\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Typography variant=\"h5\" sx={{ marginBottom: \"20px\" }}>\n        {selectedUser ? \"Edit User\" : \"Add User\"}\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          value={userInfo.userName}\n          onChange={(e) =>\n            setUserInfo({ ...userInfo, userName: e.target.value })\n          }\n          variant=\"standard\"\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          value={userInfo.userEmail}\n          onChange={(e) =>\n            setUserInfo({ ...userInfo, userEmail: e.target.value })\n          }\n          variant=\"standard\"\n          fullWidth\n        />\n        <TextField\n          label=\"Mobile No.\"\n          value={userInfo.mobileNo}\n          onChange={(e) =>\n            setUserInfo({ ...userInfo, mobileNo: e.target.value })\n          }\n          variant=\"standard\"\n          fullWidth\n        />\n        <Box sx={{ marginTop: \"10px\" }}>\n          <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\n            Role\n          </Typography>\n          <Select\n            name=\"role\"\n            value={selectedRole}\n            options={roles}\n            onChange={(e) => {\n              setSelectedRole(e);\n              setUserInfo({ ...userInfo, roleId: e.value });\n            }}\n            className=\"basic-multi-select\"\n            classNamePrefix=\"select\"\n          />\n        </Box>\n        {selectedUser && (\n          <Box sx={{ marginTop: \"10px\" }}>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"10px\" }}>\n              Account Status\n            </Typography>\n            <Select\n              name=\"status\"\n              value={{\n                value: userInfo.accountStatus,\n                label: userInfo.accountStatus,\n              }}\n              options={[\n                { value: \"active\", label: \"Active\" },\n                { value: \"inactive\", label: \"Inactive\" },\n              ]}\n              onChange={(e) =>\n                setUserInfo({ ...userInfo, accountStatus: e.value })\n              }\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n            />\n          </Box>\n        )}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{\n            marginTop: \"20px\",\n          }}\n          disabled={isLoading || !userInfo.userName || !userInfo.roleId}\n        >\n          {selectedUser ? \"Modify\" : \"Save New\"}\n        </Button>\n        {selectedUser && (\n          <Button\n            type=\"submit\"\n            variant=\"standard\"\n            color=\"secondary\"\n            style={{\n              marginTop: \"20px\",\n              marginLeft: \"20px\",\n            }}\n            onClick={() => {\n              onSelect(null);\n              setUserInfo({\n                userName: \"\",\n                userEmail: \"\",\n                mobileNo: \"\",\n                roleId: \"\",\n                accountStatus: \"active\",\n              });\n            }}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        )}\n      </form>\n    </Box>\n  );\n};\n\nexport default UsersForm;\n","import { Grid, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\nimport UsersForm from \"../components/UsersForm\";\n\nconst Users = ({ users, setUsers }) => {\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n  };\n\n  const handleUserSubmit = (user) => {\n    if (user.user_id) {\n      const updatedUsers = users.map((u) => {\n        if (u.user_id === user.user_id) {\n          return user;\n        }\n\n        return u;\n      });\n\n      setUsers(updatedUsers);\n    } else {\n      const newUsers = [...users, user];\n      setUsers(newUsers);\n    }\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        {!users || users.length < 1 ? (\n          <Typography variant=\"h6\">No users found</Typography>\n        ) : (\n          <UsersList users={users} onSelect={handleUserSelect} />\n        )}\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={5}>\n        <UsersForm\n          onSubmit={handleUserSubmit}\n          selectedUser={selectedUser}\n          onSelect={handleUserSelect}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nconst RolesList = ({ roles, onSelectRole }) => {\n  const [selectedRole, setSelectedRole] = useState(0);\n\n  const handleRoleChange = (event, newValue) => {\n    setSelectedRole(newValue);\n    onSelectRole(roles[newValue]);\n  };\n\n  return (\n    <Tabs\n      orientation=\"vertical\"\n      variant=\"scrollable\"\n      value={selectedRole}\n      onChange={handleRoleChange}\n    >\n      {roles.map((role, index) => (\n        <Tab\n          key={index}\n          label={role.role_name\n            .replace(/_/g, \" \")\n            .replace(/\\b\\w/g, (l) => l.toUpperCase())}\n          style={{\n            alignItems: \"flex-start\",\n            fontSize: \".8rem\",\n          }}\n          title={role.role_desc}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default RolesList;\n","import React, { useEffect, useState } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from \"@mui/material\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_ROLE } from \"../graphql/queries/rolesRequests\";\nimport toast from \"react-hot-toast\";\n\nconst PermissionsList = ({ roles, role, permissions, setRoles }) => {\n  const [selectedPermission, setSelectedPermission] = useState(\n    role.permissions[0]\n  );\n\n  const [saveLoading, setSaveLoading] = useState(false);\n\n  const [updateRole] = useMutation(UPDATE_ROLE);\n\n  const handlePermissionChange = (event) => {\n    setSelectedPermission(event.target.value);\n  };\n\n  const handlePermissionsUpdate = async () => {\n    setSaveLoading(true);\n\n    await updateRole({\n      variables: {\n        roleId: role.role_id,\n        permissions: [selectedPermission],\n      },\n    })\n      .then((res) => {\n        if (res.data.updateRole.status === 200) {\n          setRoles((prevRoles) => {\n            const newRoles = [...prevRoles];\n            const index = newRoles.findIndex(\n              (newRole) => newRole.role_id === role.role_id\n            );\n\n            role.permissions = [selectedPermission];\n            newRoles[index] = role;\n\n            return newRoles;\n          });\n\n          setSaveLoading(false);\n\n          toast.success(\"Permissions updated successfully!\");\n        } else {\n          setSaveLoading(false);\n\n          toast.error(\"Something went wrong! Please try again.\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n\n        toast.error(\"Something went wrong! Please try again.\");\n        setSaveLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    setSelectedPermission(role.permissions[0]);\n  }, [role]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <FormControl>\n        <FormLabel\n          id=\"demo-radio-buttons-group-label\"\n          style={{\n            fontWeight: \"bold\",\n            fontSize: \"1rem\",\n            color: \"#000000\",\n          }}\n        >\n          Permissions for{\" \"}\n          {role.role_name\n            .replace(/_/g, \" \")\n            .replace(/\\b\\w/g, (l) => l.toUpperCase())}\n        </FormLabel>\n        <RadioGroup\n          aria-labelledby=\"demo-radio-buttons-group-label\"\n          name=\"radio-buttons-group\"\n        >\n          {permissions &&\n            permissions.length > 0 &&\n            permissions.map((permission) => (\n              <FormControlLabel\n                key={permission.perm_id}\n                value={permission.perm_id}\n                control={\n                  <Radio\n                    onChange={handlePermissionChange}\n                    name={permission.perm_name}\n                    checked={selectedPermission === permission.perm_id}\n                  />\n                }\n                label={permission.perm_name}\n              />\n            ))}\n        </RadioGroup>\n      </FormControl>\n\n      <Button\n        variant=\"contained\"\n        sx={{ width: \"150px\", mt: 5 }}\n        onClick={handlePermissionsUpdate}\n        disabled={selectedPermission === role.permissions[0] || saveLoading}\n      >\n        Save Changes\n      </Button>\n    </div>\n  );\n};\n\nexport default PermissionsList;\n","// Permissions.js\nimport React, { useState } from \"react\";\nimport RolesList from \"../components/RolesList\";\nimport PermissionsList from \"../components/PermissionsList\";\nimport { Grid } from \"@mui/material\";\n\nconst Permissions = ({ permissions, roles, setRoles }) => {\n  const [selectedRole, setSelectedRole] = useState(roles[0]);\n\n  const handleRoleSelect = (role) => {\n    setSelectedRole(role);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={3}>\n        <RolesList roles={roles} onSelectRole={handleRoleSelect} />\n      </Grid>\n      <Grid item xs={9}>\n        <PermissionsList\n          roles={roles}\n          setRoles={setRoles}\n          role={selectedRole}\n          permissions={permissions}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Permissions;\n","import { gql } from \"@apollo/client\";\n\nconst GET_ALL_PERMISSIONS = gql`\n  query GetPermissions {\n    getPermissions {\n      message\n      status\n      permissions {\n        perm_id\n        perm_name\n        perm_desc\n        perm_status\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nexport { GET_ALL_PERMISSIONS };\n","import {\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  Divider,\n  InputBase,\n  Typography,\n  alpha,\n  styled,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { BiSearchAlt } from \"react-icons/bi\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst ProjectUserAssign = ({\n  users,\n  projects,\n  onSelect,\n  onUpdateUserProjects,\n}) => {\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [userProjects, setUserProjects] = useState([]);\n\n  // Filter active users\n  useEffect(() => {\n    const activeUsers = users.filter(\n      (user) => user.account_status === \"active\"\n    );\n    setFilteredUsers(activeUsers);\n  }, [users]);\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n    const filtered = users.filter(\n      (item) =>\n        item.user_name.toLowerCase().includes(value.toLowerCase()) ||\n        (item.user_email &&\n          item.user_email.toLowerCase().includes(value.toLowerCase())) ||\n        (item.mobile_no &&\n          item.mobile_no.toLowerCase().includes(value.toLowerCase())) ||\n        (item.sf_user_id &&\n          item.sf_user_id.toLowerCase().includes(value.toLowerCase())) ||\n        (item.role.role_name &&\n          item.role.role_name.toLowerCase().includes(value.toLowerCase()))\n    );\n    setFilteredUsers(filtered);\n  };\n\n  const handleViewProjects = (user) => {\n    setSelectedUser(user);\n    setUserProjects(user.assigned_projects || []);\n    setOpen(true);\n  };\n\n  const handleProjectToggle = (projectId) => {\n    const updatedProjects = userProjects.includes(projectId)\n      ? userProjects.filter((id) => id !== projectId)\n      : [...userProjects, projectId];\n    setUserProjects(updatedProjects);\n  };\n\n  const handleSaveProjects = () => {\n    if (onUpdateUserProjects) {\n      onUpdateUserProjects(selectedUser.id, userProjects);\n    }\n    setOpen(false);\n    setSelectedUser(null);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedUser(null);\n  };\n\n  return (\n    <>\n      {/* Search Input */}\n      <Search onChange={handleSearch}>\n        <SearchIconWrapper>\n          <BiSearchAlt />\n        </SearchIconWrapper>\n        <StyledInputBase\n          placeholder=\"Search user…\"\n          inputProps={{ \"aria-label\": \"search\" }}\n        />\n      </Search>\n\n      {/* List of Users */}\n      <div\n        style={{\n          height: \"calc(100vh - 200px)\",\n          overflowY: \"scroll\",\n          marginTop: \"20px\",\n        }}\n      >\n        {filteredUsers.length > 0 ? (\n          filteredUsers.map((user) => (\n            <Card key={user.id} sx={{ marginBottom: 2 }}>\n              <CardContent>\n                <Typography variant=\"h6\">\n                  {user.user_name}\n                  <Chip\n                    label={user.role.role_name}\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    sx={{ marginLeft: \"10px\" }}\n                  />\n                </Typography>\n\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                  <Typography variant=\"subtitle2\">Email:</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {user.user_email || \"N/A\"}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                  <Typography variant=\"subtitle2\">Mobile No.:</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {user.mobile_no || \"N/A\"}\n                  </Typography>\n                </Box>\n\n                <Divider />\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => handleViewProjects(user)}\n                  >\n                    View Projects\n                  </Button>\n                  <BsPencilSquare\n                    color=\"secondary\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => onSelect(user)}\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Typography variant=\"em\" align=\"center\">\n            Please wait while we fetch users...\n          </Typography>\n        )}\n      </div>\n\n      {/* Project Assignment Dialog */}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Manage Projects for {selectedUser?.user_name}</DialogTitle>\n        <DialogContent>\n          <List>\n            {projects.map((project) => (\n              <ListItem\n                key={project.id}\n                button\n                onClick={() => handleProjectToggle(project.id)}\n              >\n                <ListItemText primary={project.project_name} />\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge=\"end\"\n                    onChange={() => handleProjectToggle(project.id)}\n                    checked={userProjects.includes(project.id)}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSaveProjects} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ProjectUserAssign;\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\nimport AssignProjects from \"../components/AssignProjects\";\nimport Users from \"./Users\";\nimport Permissions from \"./Permissions\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_USERS } from \"../graphql/queries/usersRequests\";\nimport { GET_ALL_PERMISSIONS } from \"../graphql/queries/permissionsRequests\";\nimport { GET_ALL_ROLES } from \"../graphql/queries/rolesRequests\";\nimport ProjectUserAssign from \"../components/ProjectUserAssign\";\nimport { useOutletContext } from \"react-router-dom\";\n\nexport function CustomTabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nCustomTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport function a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function Management() {\n\n  const { projects } = useOutletContext();\n\n  const [value, setValue] = useState(0);\n  const [users, setUsers] = useState([]);\n  const [permissions, setPermissions] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\n\n  const getAllUsers = useQuery(GET_ALL_USERS);\n\n  const getAllPermissions = useQuery(GET_ALL_PERMISSIONS);\n\n  const getAllRoles = useQuery(GET_ALL_ROLES);\n\n  useEffect(() => {\n    if (getAllUsers.data) {\n      setUsers(getAllUsers.data.getUsers.users);\n    }\n  }, [getAllUsers.data]);\n\n  useEffect(() => {\n    if (getAllPermissions.data) {\n      setPermissions(getAllPermissions.data.getPermissions.permissions);\n    }\n  }, [getAllPermissions.data]);\n\n  useEffect(() => {\n    if (getAllRoles.data) {\n      setRoles(getAllRoles.data.getRoles.roles);\n    }\n  }, [getAllRoles.data]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      {userDetails.role !== \"super_admin\" &&\n      userDetails.role !== \"ci_leadership\" ? (\n        <Typography variant=\"h4\" component=\"h2\" sx={{ marginTop: \"20px\" }}>\n          You are not authorized to access this page.\n        </Typography>\n      ) : (\n        <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"management tabs\"\n            >\n              <Tab label=\"Assign Projects\" {...a11yProps(0)} />\n              <Tab label=\"Assign Permissions\" {...a11yProps(1)} />\n              <Tab label=\"Users\" {...a11yProps(2)} />\n              {/* <Tab label=\"Assign Projects\" {...a11yProps(3)} /> */}\n            </Tabs>\n          </Box>\n          <CustomTabPanel value={value} index={0}>\n            <AssignProjects allProjects={projects} />\n          </CustomTabPanel>\n          <CustomTabPanel value={value} index={1}>\n            <Permissions\n              permissions={permissions}\n              roles={roles}\n              setRoles={setRoles}\n            />\n          </CustomTabPanel>\n          <CustomTabPanel value={value} index={2}>\n            <Users users={users} setUsers={setUsers} />\n          </CustomTabPanel>\n          {/* <CustomTabPanel value={value} index={3}>\n            <ProjectUserAssign users={users}/>\n          </CustomTabPanel> */}\n        </Box>\n      )}\n    </>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nconst GET_ALL_USERS = gql`\n  query GetUsers {\n    getUsers {\n      message\n      status\n      users {\n        user_id\n        sf_user_id\n        user_name\n        user_email\n        mobile_no\n        account_status\n        role {\n          role_id\n          role_name\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_USER = gql`\n  mutation AddUser(\n    $userName: String!\n    $userEmail: String!\n    $mobileNo: String!\n    $userPassword: String!\n    $roleId: ID\n  ) {\n    addUser(\n      user_name: $userName\n      user_email: $userEmail\n      mobile_no: $mobileNo\n      user_password: $userPassword\n      role_id: $roleId\n    ) {\n      message\n      status\n      user {\n        user_id\n        sf_user_id\n        user_name\n        user_email\n        mobile_no\n        role_id\n        role {\n          role_desc\n          role_id\n          role_name\n          role_status\n        }\n        account_status\n      }\n    }\n  }\n`;\n\nconst UPDATE_USER = gql`\n  mutation UpdateUser(\n    $userId: ID!\n    $accountStatus: String\n    $userEmail: String\n    $mobileNo: String\n    $userName: String\n    $roleId: ID\n  ) {\n    updateUser(\n      user_id: $userId\n      account_status: $accountStatus\n      user_email: $userEmail\n      mobile_no: $mobileNo\n      user_name: $userName\n      role_id: $roleId\n    ) {\n      message\n      status\n      user {\n        user_id\n        sf_user_id\n        user_name\n        user_email\n        mobile_no\n        role_id\n        account_status\n        role {\n          role_id\n          role_name\n          role_desc\n          permissions\n          is_default\n          role_status\n        }\n      }\n    }\n  }\n`;\n\nconst GET_WETMILL_BAS = gql`\n  query GetWetmillBas($sfProjectId: String!) {\n    getWetMillBusinessAdvisors(sfProjectId: $sfProjectId) {\n      advisors {\n        id\n        name\n        wetmillId\n      }\n      message\n      status\n    }\n  }\n`;\n\n\nexport { GET_ALL_USERS, ADD_USER, UPDATE_USER, GET_WETMILL_BAS};\n"],"names":["GET_ALL_ROLES","gql","UPDATE_ROLE","Search","styled","_ref","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref2","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref3","color","paddingLeft","transition","transitions","create","_ref4","open","handleClose","title","data","selectedProject","toggleAdd","setToggleAdd","useState","filteredData","setFilteredData","users","setUsers","roles","setRoles","selectedUser","setSelectedUser","selectedRole","setSelectedRole","isBeingUpdated","setIsBeingUpdated","isNew","setIsNew","getAllUsers","useQuery","GET_ALL_USERS","getAllRoles","addProjectRole","useMutation","ADD_PROJECT_ROLE","updateUser","UPDATE_USER","useEffect","getUsers","getRoles","_jsxs","Dialog","onClose","children","DialogTitle","fontSize","_jsx","Chip","label","length","style","variant","Divider","DialogContent","Box","sx","flexDirection","FormControl","Typography","marginBottom","Select","name","defaultValue","value","find","item","user_id","user_name","options","map","onChange","e","className","classNamePrefix","marginTop","role_id","role_name","Button","marginRight","onClick","async","variables","userId","projectId","roleId","status","toast","success","message","error","disabled","BeatLoader","loading","size","List","ListItem","target","filtered","filter","user","toLowerCase","includes","role","BiSearchAlt","placeholder","inputProps","index","ListItemText","primary","ListItemIcon","BiSolidPencil","cursor","AiOutlineMinusCircle","alignSelf","DialogActions","Styles","fontWeight","maxWidth","allProjects","setOpen","list","setList","setTitle","setSelectedProject","getProjectRolesByProjectId","useLazyQuery","GET_PROJECT_ROLES_BY_PROJECT_ID","project_role","project","project_name","project_id","_Fragment","margin","Grid","container","xs","sm","md","lg","Card","CardActionArea","CardContent","gutterBottom","component","sf_project_id","CardActions","GrFormView","handleOpenModal","AssignModal","onSelect","filteredUsers","setFilteredUsers","user_email","mobile_no","sf_user_id","overflowY","account_status","BsPencilSquare","id","align","onSubmit","isLoading","setIsLoading","userInfo","setUserInfo","userName","userEmail","mobileNo","accountStatus","addUser","ADD_USER","preventDefault","userPassword","TextField","fullWidth","type","handleUserSelect","UsersList","UsersForm","updatedUsers","u","newUsers","onSelectRole","Tabs","orientation","handleRoleChange","event","newValue","Tab","replace","l","toUpperCase","role_desc","permissions","selectedPermission","setSelectedPermission","saveLoading","setSaveLoading","updateRole","handlePermissionChange","FormLabel","RadioGroup","permission","FormControlLabel","perm_id","control","Radio","perm_name","checked","mt","then","res","prevRoles","newRoles","findIndex","newRole","catch","err","console","log","RolesList","PermissionsList","GET_ALL_PERMISSIONS","CustomTabPanel","props","other","hidden","p","a11yProps","Management","projects","useOutletContext","setValue","setPermissions","userDetails","JSON","parse","window","localStorage","getItem","getAllPermissions","getPermissions","borderBottom","borderColor","handleChange","AssignProjects","Permissions","Users","GET_WETMILL_BAS"],"sourceRoot":""}