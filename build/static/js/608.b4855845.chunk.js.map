{"version":3,"file":"static/js/608.b4855845.chunk.js","mappings":"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","sources":["components/LoadingScreen.js","features/statstg/Statscard.js","features/tsapprove/statsframe.js","features/tsapprove/tsapprove.js"],"sourcesContent":["import React from \"react\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"circular_progress\">\r\n      <div className=\"spinner-container\">\r\n        {/* Optional glow effect */}\r\n        <div className=\"spinner-glow\"></div>\r\n        <CircularProgress className=\"spinner\" size={80} thickness={4.5} style={{ color: '#1b2a4e' }}/>\r\n      </div>\r\n      <h2>Loading Data...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React from 'react'\r\nimport './statscard.css'\r\n\r\nconst Statscard = ({ heading, figures, icon, color }) => {\r\n  return (\r\n    <div>\r\n      <div className='card__container'>\r\n        <div className='card__content'>\r\n          <div className='card__text'>\r\n            <p className='card__text1'>{heading}</p>\r\n            <p className='card__text2'>{figures}</p>\r\n          </div>\r\n          <div className='card__icon' style={{ backgroundColor: color }}>\r\n            {icon}{' '}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statscard\r\n","import React from \"react\";\r\nimport Statscard from \"../statstg/Statscard\";\r\nimport { MdGroups } from \"react-icons/md\";\r\nimport { BsPersonBoundingBox } from \"react-icons/bs\";\r\n\r\nconst Statsframe = ({ sampledSessions }) => {\r\n\r\n  const statsData = [\r\n    {\r\n      heading: \"Total Sampled\",\r\n      figures: sampledSessions.length,\r\n      icon: <MdGroups />,\r\n      color: \"#25245D\",\r\n    },\r\n    {\r\n      heading: \"Total Reviewed\",\r\n      figures: sampledSessions.filter(\r\n        (session) => session.image_review_result !== null\r\n      ).length,\r\n      icon: <MdGroups />,\r\n      color: \"#087C8F\",\r\n    },\r\n    {\r\n      heading: \"Not Reviewed\",\r\n      figures: sampledSessions.filter(\r\n        (session) => session.image_review_result === null\r\n      ).length,\r\n      icon: <BsPersonBoundingBox />,\r\n      color: \"#25245D\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", marginBottom: \"20px\", display: \"flex\" }}>\r\n      {statsData.map((data, index) => (\r\n        <div key={index}>\r\n          <Statscard\r\n            heading={data.heading}\r\n            figures={data.figures}\r\n            icon={data.icon}\r\n            color={data.color}\r\n          />\r\n        </div>\r\n      ))}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statsframe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { icon } from \"leaflet\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {\r\n  GET_SAMPLED_SESSIONS,\r\n  SUBMIT_BATCH,\r\n  GENERATE_TS_REPORT,\r\n} from \"../../graphql/queries/trainingSessionsRequests\";\r\nimport \"./styles.css\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport Statsframe from \"./statsframe\";\r\nimport { TextField, MenuItem, Button, Typography } from \"@mui/material\";\r\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers\"; // Ensure correct imports\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { format, subMonths } from \"date-fns\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport { useRef } from \"react\"; // Import useRef for map reference\r\n\r\nconst pageSize = 5;\r\n\r\nconst TSApprove = ({ selectedProject, userId }) => {\r\n  const { data, loading, error, refetch } = useQuery(GET_SAMPLED_SESSIONS, {\r\n    variables: { projectId: selectedProject },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [generateTSReport] = useLazyQuery(GENERATE_TS_REPORT, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [unfilteredSessions, setUnfilteredSessions] = useState([]);\r\n  const [filteredSessions, setFilteredSessions] = useState([]);\r\n  const [submitBatchMutation] = useMutation(SUBMIT_BATCH);\r\n  const [selectedSessions, setSelectedSessions] = useState({});\r\n  const [mapVisible, setMapVisible] = useState(false);\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [loadingImages, setLoadingImages] = useState({});\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const mapRef = useRef(null); // Reference for the map\r\n  const [downloadingReport, setDownloadingReport] = useState(false);\r\n  const [startDate, setStartDate] = useState(subMonths(new Date(), 1));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [status, setStatus] = useState(\"approved\");\r\n\r\n  useEffect(() => {\r\n    if (mapVisible && mapRef.current) {\r\n      setTimeout(() => {\r\n        mapRef.current.invalidateSize(); // Adjust map size when the modal opens\r\n      }, 300);\r\n    }\r\n  }, [mapVisible]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUnfilteredSessions(data.sampledTrainingSessions);\r\n      const initialLoadingState = data.sampledTrainingSessions.reduce(\r\n        (acc, session) => {\r\n          acc[session.id] = true;\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n      setLoadingImages(initialLoadingState);\r\n\r\n      // Filter sessions with null image_review_result for the approval list\r\n      const filtered = data.sampledTrainingSessions.filter(\r\n        (session) => session.image_review_result === null\r\n      );\r\n      setFilteredSessions(filtered);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSelectionChange = (sessionId, status) => {\r\n    setSelectedSessions((prev) => ({\r\n      ...prev,\r\n      [sessionId]: status,\r\n    }));\r\n  };\r\n\r\n  const areAllSessionsReviewed = () => {\r\n    return filteredSessions\r\n      .slice(0, pageSize) // Only check sessions visible on the current page\r\n      .every((session) => selectedSessions[session.id]); // Ensure every session has a status\r\n  };\r\n\r\n  const handleSubmitBatch = () => {\r\n    if (!areAllSessionsReviewed()) {\r\n      toast.error(\"Please review all sessions before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const batchInput = Object.entries(selectedSessions).map(\r\n      ([sessionId, status]) => ({\r\n        sessionId,\r\n        status,\r\n        userId,\r\n      })\r\n    );\r\n\r\n    if (!batchInput.length) {\r\n      toast.error(\"Please select at least one session to submit.\");\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    submitBatchMutation({ variables: { input: batchInput } })\r\n      .then(() => {\r\n        setSelectedSessions({});\r\n        refetch(); // Refetch data to get updated sessions\r\n        setSubmitting(false);\r\n        toast.success(\"Batch submitted successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        console.error(\"Error submitting batch:\", error);\r\n        toast.error(\"An error occurred while submitting the batch.\");\r\n      });\r\n  };\r\n\r\n  const handleImageClick = (formId, imageId) => {\r\n    setSelectedImage(\r\n      `${process.env.REACT_APP_API_URL}/image/${formId}/${imageId}`\r\n    );\r\n  };\r\n\r\n  const closeImageModal = () => {\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  const handleViewMapClick = (session) => {\r\n    setSelectedSession(session);\r\n    setMapVisible(true);\r\n  };\r\n\r\n  const handleDownloadReport = () => {\r\n    if (!selectedProject) {\r\n      toast.error(\"No project selected.\");\r\n      return;\r\n    }\r\n\r\n    setDownloadingReport(true);\r\n    generateTSReport({\r\n      variables: {\r\n        projectId: selectedProject,\r\n        startDate: startDate ? format(startDate, \"yyyy-MM-dd\") : null,\r\n        endDate: endDate ? format(endDate, \"yyyy-MM-dd\") : null,\r\n        status: status || null,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        const { generateTSApprovalReport } = response.data;\r\n        if (\r\n          generateTSApprovalReport.status === 200 &&\r\n          generateTSApprovalReport.file\r\n        ) {\r\n          const base64Data = generateTSApprovalReport.file.split(\",\")[1];\r\n          const blob = base64ToBlob(\r\n            base64Data,\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n          );\r\n          saveAs(blob, \"training-sessions-report.xlsx\");\r\n          toast.success(\"Download started.\");\r\n        } else {\r\n          toast.error(\r\n            generateTSApprovalReport.message || \"Failed to generate report.\"\r\n          );\r\n        }\r\n        setDownloadingReport(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error generating report:\", error);\r\n        toast.error(\"An error occurred while generating the report.\");\r\n        setDownloadingReport(false);\r\n      });\r\n  };\r\n\r\n  const base64ToBlob = (base64Data, contentType) => {\r\n    const byteCharacters = atob(base64Data);\r\n    const byteArrays = [];\r\n    for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n      const slice = byteCharacters.slice(offset, offset + 512);\r\n      const byteNumbers = new Array(slice.length);\r\n      for (let i = 0; i < slice.length; i++) {\r\n        byteNumbers[i] = slice.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      byteArrays.push(byteArray);\r\n    }\r\n    return new Blob(byteArrays, { type: contentType });\r\n  };\r\n\r\n  const sessionCoords = selectedSession\r\n    ? { lat: selectedSession.ts_latitude, lng: selectedSession.ts_longitude }\r\n    : { lat: -1.2921, lng: 36.8219 };\r\n\r\n  const tsIcon = icon({\r\n    iconUrl:\r\n      \"https://img.icons8.com/?size=100&id=60013&format=png&color=000000\",\r\n    iconSize: [35, 35],\r\n    iconAnchor: [22, 94],\r\n    popupAnchor: [-3, -76],\r\n  });\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  if (error)\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Typography color=\"error\">Error loading data</Typography>\r\n      </div>\r\n    );\r\n\r\n  // Check if there are no sessions left to review\r\n  const noDataToReview = filteredSessions.length === 0;\r\n\r\n  return (\r\n    <div className=\"training-session-app\">\r\n      {/* Dashboard Section */}\r\n      <div className=\"dashboard\">\r\n        <h1 className=\"dashboard-title\">Training Session Overview</h1>\r\n        {/* Using unfilteredSessions for the statistics */}\r\n        <Statsframe sampledSessions={unfilteredSessions} />\r\n      </div>\r\n      {/* Download Report Button */}\r\n      {/* New Controls for Report Download */}\r\n      <div className=\"report-controls\">\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <div className=\"date-controls\">\r\n            <DatePicker\r\n              label=\"Start Date\"\r\n              value={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n            <DatePicker\r\n              label=\"End Date\"\r\n              value={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n          </div>\r\n        </LocalizationProvider>\r\n\r\n        <TextField\r\n          className=\"status-select\"\r\n          label=\"Status\"\r\n          select\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          variant=\"outlined\"\r\n        >\r\n          <MenuItem value=\"all\">All</MenuItem>\r\n          <MenuItem value=\"approved\">Correct</MenuItem>\r\n          <MenuItem value=\"invalid\">Incorrect</MenuItem>\r\n          <MenuItem value=\"unclear\">Unclear</MenuItem>\r\n          <MenuItem value=\"\">Not Reviewed</MenuItem>\r\n        </TextField>\r\n\r\n        <Button\r\n          className=\"download-report-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleDownloadReport}\r\n          disabled={downloadingReport}\r\n        >\r\n          {downloadingReport ? \"Downloading...\" : \"Download Report\"}\r\n        </Button>\r\n      </div>\r\n\r\n      {/* No Data Message */}\r\n      {noDataToReview ? (\r\n        <div className=\"no__data\">\r\n          <h1 style={{ fontSize: \"20px\" }}>\r\n            Currently, there are no sessions to review. 🎉\r\n          </h1>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* List of Sessions with Multi-Approval */}\r\n          <h2 className=\"review-sessions-title\">Review Sessions</h2>\r\n          <div className=\"session-list\">\r\n            {filteredSessions.slice(0, pageSize).map((session) => {\r\n              const [formId, imageId] =\r\n                session?.session_image_url?.split(\"/\").slice(-2) || [];\r\n              return (\r\n                <div key={session.id} className=\"session-item\">\r\n                  <div className=\"session-image\">\r\n                    {loadingImages[imageId] && <LoadingScreen />}\r\n                    <img\r\n                      src={\r\n                        session?.session_image_url\r\n                          ? `${process.env.REACT_APP_API_URL}/image/${formId}/${imageId}`\r\n                          : null\r\n                      }\r\n                      alt=\"Session\"\r\n                      onClick={() => handleImageClick(formId, imageId)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"session-details\">\r\n                    <h3>{session.training_module_name}</h3>\r\n                    <p>\r\n                      <strong>Trainer:</strong> {session.farmer_trainer_name}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Total Attendance:</strong>{\" \"}\r\n                      {session.total_attendance}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Male Attendance:</strong>{\" \"}\r\n                      {session.male_attendance}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Female Attendance:</strong>{\" \"}\r\n                      {session.female_attendance}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Training Date:</strong>{\" \"}\r\n                      {format(new Date(session.session_date), \"MMMM dd, yyyy\")}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Training Group Name:</strong> {session.tg_name}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"actions-column\">\r\n                    <div className=\"review-actions\">\r\n                      <select\r\n                        onChange={(e) =>\r\n                          handleSelectionChange(session.id, e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"\">-- Select --</option>\r\n                        <option value=\"approved\">Correct</option>\r\n                        <option value=\"invalid\">Incorrect</option>\r\n                        <option value=\"unclear\">Unclear</option>\r\n                      </select>\r\n                    </div>\r\n                    <button\r\n                      className=\"view-map-button\"\r\n                      onClick={() => handleViewMapClick(session)}\r\n                    >\r\n                      View Map\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Submit Button for Batch */}\r\n          <button\r\n            className=\"submit-button\"\r\n            onClick={handleSubmitBatch}\r\n            disabled={submitting || !areAllSessionsReviewed()}\r\n          >\r\n            {submitting ? \"Submitting...\" : \"Submit Batch\"}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Map Modal */}\r\n      {mapVisible && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h2>\r\n                {selectedSession\r\n                  ? selectedSession.training_module_name\r\n                  : \"Map View\"}\r\n              </h2>\r\n              <button\r\n                onClick={() => setMapVisible(false)}\r\n                className=\"modal-close-button\"\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <div className=\"map-toolbar\"></div>\r\n              <div className=\"map-container\">\r\n                <MapContainer\r\n                  center={sessionCoords}\r\n                  zoom={6}\r\n                  scrollWheelZoom={false}\r\n                  style={{ height: \"500px\", width: \"100%\" }}\r\n                  whenCreated={(mapInstance) => (mapRef.current = mapInstance)} // Assign map instance to ref\r\n                >\r\n                  {/* Satellite and Streets Hybrid Layer */}\r\n                  <TileLayer\r\n                    url={`https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v11/tiles/512/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoieW11Z2VuZ2EiLCJhIjoiY20xN3NhOWJwMHFvcTJsc2Iyc2Z0Znd0aCJ9.A3EBUziAdNrV3nwrGvkv3g`}\r\n                    attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors | Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n                  />\r\n                  {/* Marker for session location */}\r\n                  <Marker position={sessionCoords} icon={tsIcon}>\r\n                    <Popup className=\"custom-popup\">\r\n                      <h3>Training Session Location</h3>\r\n                      <p>\r\n                        {selectedSession\r\n                          ? selectedSession.location\r\n                          : \"San Francisco\"}\r\n                      </p>\r\n                    </Popup>\r\n                  </Marker>\r\n                </MapContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Image Modal */}\r\n      {selectedImage && (\r\n        <div className=\"image-modal\" onClick={closeImageModal}>\r\n          <img src={selectedImage} alt=\"Fullscreen Farm Visit\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TSApprove;\r\n"],"names":["_jsxs","className","children","_jsx","CircularProgress","size","thickness","style","color","_ref","heading","figures","icon","backgroundColor","sampledSessions","statsData","length","MdGroups","filter","session","image_review_result","BsPersonBoundingBox","width","marginBottom","display","map","data","index","Statscard","selectedProject","userId","_useQuery","useQuery","GET_SAMPLED_SESSIONS","variables","projectId","fetchPolicy","loading","error","refetch","_useLazyQuery","useLazyQuery","GENERATE_TS_REPORT","generateTSReport","_slicedToArray","_useState","useState","_useState2","unfilteredSessions","setUnfilteredSessions","_useState3","_useState4","filteredSessions","setFilteredSessions","_useMutation","useMutation","SUBMIT_BATCH","submitBatchMutation","_useState5","_useState6","selectedSessions","setSelectedSessions","_useState7","_useState8","mapVisible","setMapVisible","_useState9","_useState10","selectedSession","setSelectedSession","_useState11","_useState12","loadingImages","setLoadingImages","_useState13","_useState14","submitting","setSubmitting","_useState15","_useState16","selectedImage","setSelectedImage","mapRef","useRef","_useState17","_useState18","downloadingReport","setDownloadingReport","_useState19","subMonths","Date","_useState20","startDate","setStartDate","_useState21","_useState22","endDate","setEndDate","_useState23","_useState24","status","setStatus","useEffect","current","setTimeout","invalidateSize","sampledTrainingSessions","initialLoadingState","reduce","acc","id","filtered","areAllSessionsReviewed","slice","every","base64ToBlob","base64Data","contentType","byteCharacters","atob","byteArrays","offset","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","type","sessionCoords","lat","ts_latitude","lng","ts_longitude","tsIcon","iconUrl","iconSize","iconAnchor","popupAnchor","LoadingScreen","justifyContent","alignItems","height","Typography","noDataToReview","Statsframe","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","value","onChange","date","renderInput","params","TextField","_objectSpread","select","e","target","variant","MenuItem","Button","onClick","format","then","response","generateTSApprovalReport","file","split","blob","saveAs","toast","success","message","catch","console","disabled","fontSize","_Fragment","_session$session_imag","_ref4","session_image_url","_ref5","formId","imageId","src","concat","process","alt","handleImageClick","training_module_name","farmer_trainer_name","total_attendance","male_attendance","female_attendance","session_date","tg_name","sessionId","prev","_defineProperty","handleSelectionChange","handleViewMapClick","batchInput","Object","entries","_ref2","_ref3","input","MapContainer","center","zoom","scrollWheelZoom","whenCreated","mapInstance","TileLayer","url","attribution","Marker","position","Popup","location"],"sourceRoot":""}