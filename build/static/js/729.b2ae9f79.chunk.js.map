{"version":3,"file":"static/js/729.b2ae9f79.chunk.js","mappings":"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","sources":["features/training-session/statsts/Statstscard.js","features/training-session/ts-detail/Tstabdetail.js","features/training-session/ts-detail/Tstabs.js","features/training-session/ts-detail/index.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./tscard.css\";\r\nimport { PieChart } from \"@mui/x-charts\";\r\n\r\nconst Statstscard = ({ stats }) => {\r\n  // get percentage of total_males from stats\r\n  let totalMales = 0;\r\n  let totalFemales = 0;\r\n\r\n  totalMales += isNaN(stats.total_males) ? 0 : Number(stats.total_males);\r\n  totalFemales += isNaN(stats.total_females) ? 0 : Number(stats.total_females);\r\n\r\n  const totalAttendance = totalMales + totalFemales;\r\n\r\n  const maleAttendancePercentage =\r\n    totalAttendance > 0 ? (totalMales / totalAttendance) * 100 : 0;\r\n  const femaleAttendancePercentage =\r\n    totalAttendance > 0 ? (totalFemales / totalAttendance) * 100 : 0;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cardts__container\">\r\n        <p\r\n          style={{ color: \"#7D7F88\", fontWeight: \"600\", paddingBottom: \"10px\" }}\r\n        >\r\n          Total Attendance\r\n        </p>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ width: \"300px\" }}>\r\n            {maleAttendancePercentage > 0 || femaleAttendancePercentage > 0 ? (\r\n              <PieChart\r\n                series={[\r\n                  {\r\n                    arcLabel: (item) => `${item.value}%`,\r\n                    arcLabelMinAngle: 65,\r\n                    data: [\r\n                      {\r\n                        id: 0,\r\n                        value: maleAttendancePercentage.toFixed(1),\r\n                        label: \"Male\",\r\n                        color: \"#3F51B5\",\r\n                      },\r\n                      {\r\n                        id: 1,\r\n                        value: femaleAttendancePercentage.toFixed(1),\r\n                        label: \"Female\",\r\n                        color: \"#FF4081\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ]}\r\n                width={230}\r\n                height={200}\r\n              />\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"200px\",\r\n                }}\r\n              >\r\n                <p>No data to display</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statstscard;\r\n","import { Button, Paper } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../../training-group/tgdetail/tgdetail.css\";\r\nimport Detailscontent from \"../../training-group/tgdetail/Detailscontent\";\r\nimport Imagecontainer from \"./sessionimage/Imagecontainer\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_TRAINING_SESSION_IMAGE } from \"../../../graphql/queries/trainingSessionsRequests\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport Statstscard from \"../statsts/Statstscard\";\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  marginBottom: \"10px\",\r\n  marginRight: \"10px\",\r\n  textTransform: \"initial\",\r\n  backgroundColor: \"rgba(244, 103, 0, 1)\",\r\n  color: \"#fff\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"rgba(244, 103, 0, 0.5)\",\r\n    transition: \"background-color 0.3s ease-in-out\",\r\n  },\r\n}));\r\n\r\nconst Tstabdetail = ({ details, selectedProject }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [session_image, setSession_image] = useState(null);\r\n  const { data, loading } = useQuery(GET_TRAINING_SESSION_IMAGE, {\r\n    variables: { tsId: details.ts_id },\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !loading &&\r\n      data.trainingSessionImage &&\r\n      data.trainingSessionImage.status === 200\r\n    ) {\r\n      setSession_image(data.trainingSessionImage.trainingSessionImage);\r\n    }\r\n  }, [data, loading]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper elevation={2}>\r\n        <div>\r\n          <div className=\"details__title\">{details.ts_name}</div>\r\n          <div style={{ padding: \"10px\", paddingLeft: \"20px\" }}></div>\r\n          <div\r\n            className=\"ts__details-container\"\r\n            style={{ display: \"flex\", gap: \"50px\" }}\r\n          >\r\n            <div style={{ width: \"250px\" }}>\r\n              <Statstscard stats={details} />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                gap: \"20px\",\r\n              }}\r\n            >\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Module Name\"}\r\n                  paragraph={details.ts_module}\r\n                />\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Male Attendance\"}\r\n                  paragraph={details.total_males || \"N/A\"}\r\n                />\r\n              </div>\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Training Group\"}\r\n                  paragraph={details.ts_group}\r\n                />{\" \"}\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Female Attendance\"}\r\n                  paragraph={details.total_females || \"N/A\"}\r\n                />\r\n              </div>{\" \"}\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Business Advisor\"}\r\n                  paragraph={\"Peace Ishimwe\"}\r\n                />{\" \"}\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"TNS ID\"}\r\n                  paragraph={details.tns_id || \"N/A\"}\r\n                />\r\n              </div>\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Farmer Trainer\"}\r\n                  paragraph={details.farmer_trainer || \"N/A\"}\r\n                />\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Is Session Verified?\"}\r\n                  paragraph={details.is_verified ? \"Yes\" : \"No\"}\r\n                />\r\n              </div>\r\n              <div className=\"ts__details-container1\">\r\n                <Detailscontent\r\n                  heading={\"Session Image Status\"}\r\n                  paragraph={details.session_image_status}\r\n                />\r\n                <div style={{ paddingBottom: \"20px\" }}></div>\r\n                <Detailscontent\r\n                  heading={\"Session Date\"}\r\n                  paragraph={details.session_date}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <StyledButton\r\n            onClick={handleClick}\r\n            id=\"demo-customized-button\"\r\n            aria-controls={open ? \"demo-customized-menu\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            disabled={details.has_image ? false : true}\r\n            style={{\r\n              backgroundColor: `${\r\n                session_image\r\n                  ? \"rgba(244, 103, 0, 1)\"\r\n                  : \"rgba(244, 103, 0, 0.5)\"\r\n              }`,\r\n              color: \"#fff\",\r\n              cursor: `${details.has_image ? \"pointer\" : \"not-allowed\"}`,\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <BeatLoader\r\n                color={\"rgba(244, 103, 0, 1)\"}\r\n                loading={loading}\r\n                size={10}\r\n              />\r\n            ) : (\r\n              \"View Session Image\"\r\n            )}\r\n          </StyledButton>\r\n          {open && (\r\n            <Imagecontainer\r\n              open={open}\r\n              handleClose={handleClose}\r\n              id={details.ts_id}\r\n              isVerified={details.is_verified}\r\n              imageStatus={details.session_image_status}\r\n              sessionImageUrl={session_image}\r\n              selectedProject={selectedProject}\r\n              data={details}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabdetail;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Tabs, Tab, Box } from \"@mui/material\";\r\nimport Tstabdetail from \"./Tstabdetail\";\r\nimport { a11yProps } from \"../../training-group/tgdetail/Tgtabs\";\r\n// import FvTabTable from \"../tgdetail/fvtabtable\";\r\n\r\nfunction CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Tstabs = ({ details, farmVisits, selectedProject }) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ width: \"100%\", marginTop: \"20px\" }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n          <Tabs value={value} onChange={handleChange} aria-label=\"session tabs\">\r\n            <Tab label=\"Details\" {...a11yProps(0)} />\r\n            {/* <Tab label=\"Farm Visits\" {...a11yProps(1)} /> */}\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <CustomTabPanel value={value} index={0}>\r\n          <Tstabdetail details={details} selectedProject={selectedProject} />\r\n        </CustomTabPanel>\r\n\r\n        {/* <CustomTabPanel value={value} index={1}>\r\n          <FvTabTable details={details} farmVisits={farmVisits} />\r\n        </CustomTabPanel> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tstabs;\r\n","import React from \"react\";\r\nimport { useOutletContext, useParams } from \"react-router-dom\";\r\nimport Breadcrumb from \"../../../components/Breadcrumbs\";\r\nimport Tstabs from \"./Tstabs\";\r\n// import { useQuery } from \"@apollo/client\";\r\n// import { GET_FARM_VISITS_PER_TS } from \"../../graphql/queries/farmVisitsRequests\";\r\n\r\nconst Styles = {\r\n  marginTop: \"15px\",\r\n  fontWeight: \"400\",\r\n  color: \"rgba(125, 127, 136, 1)\",\r\n  fontSize: \"12px\",\r\n  maxWidth: \"80%\",\r\n};\r\nconst Tsdetail = () => {\r\n  const { activeProject, trainingSessions } = useOutletContext();\r\n  const breadCrumbs = \"Training session\";\r\n\r\n  // const [farmVisitsPerSession, setFarmVisitsPerSession] = useState([]);\r\n\r\n  // get params from url\r\n  const params = useParams();\r\n  const { id } = params;\r\n\r\n  // const getAllFarmVisitsByTS = useQuery(GET_FARM_VISITS_PER_TS, {\r\n  //   variables: { tsId: id },\r\n  // });\r\n\r\n  const selectedTrainingSession =\r\n    trainingSessions && trainingSessions.find((group) => group.ts_id === id);\r\n  const breadCrumbsLinkTo = \"trainsession\";\r\n\r\n  // useEffect(() => {\r\n  //   if (getAllFarmVisitsByTS.data) {\r\n  //     const farmVisits =\r\n  //       getAllFarmVisitsByTS.data.getFarmVisitsBySession.farmVisits;\r\n  //     setFarmVisitsPerSession(farmVisits);\r\n  //   }\r\n  // }, [getAllFarmVisitsByTS.data]);\r\n\r\n  return (\r\n    <div>\r\n      {selectedTrainingSession && (\r\n        <>\r\n          <Breadcrumb\r\n            name={selectedTrainingSession.ts_name}\r\n            firstItem={breadCrumbs}\r\n            linkTo={breadCrumbsLinkTo}\r\n          />\r\n\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <h1>{selectedTrainingSession.ts_name}</h1>\r\n            <p style={Styles}>\r\n              In the training session details you can access detailed\r\n              information for a specific training session, training session\r\n              image and other information\r\n            </p>\r\n          </div>\r\n\r\n          <Tstabs\r\n            details={selectedTrainingSession}\r\n            //farmVisits={farmVisitsPerSession}\r\n            selectedProject={activeProject}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tsdetail;\r\n"],"names":["_ref","stats","totalMales","totalFemales","isNaN","total_males","Number","total_females","totalAttendance","maleAttendancePercentage","femaleAttendancePercentage","_jsx","children","_jsxs","className","style","color","fontWeight","paddingBottom","display","width","PieChart","series","arcLabel","item","value","arcLabelMinAngle","data","id","toFixed","label","height","justifyContent","alignItems","StyledButton","styled","Button","theme","marginBottom","marginRight","textTransform","backgroundColor","transition","_ref2","details","selectedProject","open","setOpen","useState","session_image","setSession_image","loading","useQuery","GET_TRAINING_SESSION_IMAGE","variables","tsId","ts_id","useEffect","trainingSessionImage","status","Paper","elevation","ts_name","padding","paddingLeft","gap","Statstscard","Detailscontent","heading","paragraph","ts_module","ts_group","tns_id","farmer_trainer","is_verified","session_image_status","session_date","onClick","handleClick","undefined","disabled","has_image","cursor","BeatLoader","size","Imagecontainer","handleClose","isVerified","imageStatus","sessionImageUrl","CustomTabPanel","props","index","other","role","hidden","Box","sx","p","Typography","farmVisits","setValue","marginTop","borderBottom","borderColor","Tabs","onChange","handleChange","event","newValue","Tab","a11yProps","Tstabdetail","Styles","fontSize","maxWidth","Tsdetail","activeProject","trainingSessions","useOutletContext","params","useParams","selectedTrainingSession","find","group","_Fragment","Breadcrumb","name","firstItem","linkTo","Tstabs"],"sourceRoot":""}