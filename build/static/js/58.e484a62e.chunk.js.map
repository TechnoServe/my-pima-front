{"version":3,"file":"static/js/58.e484a62e.chunk.js","mappings":"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","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Bar","Doughnut","Pie"],"sourceRoot":""}