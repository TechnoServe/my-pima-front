{"version":3,"file":"static/js/157.b34bf21a.chunk.js","mappings":"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","sources":["utils/timezone.js","components/Table/Table.js","components/Modals/UploadParticipantsModal.js","graphql/queries/attendancesRequests.js","features/participants/Participants.js","features/training-session/ts-detail/sessionimage/Imagecontainer.js","graphql/queries/participantsRequests.js"],"sourcesContent":["const TimeZone = () => {\n  // Get the current date and time\n  const now = new Date();\n\n  // Get the user's timezone\n  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  // Format the date and time according to the user's timezone\n  const formattedDate = now.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  });\n\n  const formattedTime = now.toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    timeZone: userTimezone,\n  });\n\n  // Output the date and time\n  return `${formattedDate}_at_${formattedTime}`;\n};\n\nexport default TimeZone;\n","import { useState, useEffect } from \"react\";\nimport \"./table.css\";\n// import FilterContainer from \"../Filter/FilterContainer\";\nimport { useNavigate } from \"react-router-dom\";\nimport DataTable from \"react-data-table-component\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport { Button } from \"@mui/material\";\nimport { FaFileExport } from \"react-icons/fa\";\n// import { ExportToCsv, generateCsv } from \"export-to-csv\";\nimport { mkConfig, generateCsv, download } from \"export-to-csv\";\nimport { utils, writeFile } from \"xlsx\";\nimport { useQuery } from \"@apollo/client\";\nimport TimeZone from \"../../utils/timezone\";\n// import FVQAModal from \"../Modals/FVQAModal\";\nimport Imagecontainer from \"../../features/training-session/ts-detail/sessionimage/Imagecontainer\";\nimport { GET_TRAINING_SESSION_IMAGE } from \"../../graphql/queries/trainingSessionsRequests\";\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: \"30px\",\n      cursor: \"pointer\",\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: \"8px\",\n      paddingRight: \"8px\",\n      backgroundColor: \"#1b2a4e\" /* Matching sidebar color */,\n      color: \"white\",\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: \"5px\",\n      paddingRight: \"5px\",\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\",\n    },\n  },\n};\n\n// Export Buttons Component\nconst ExportButtons = ({\n  handleCSVExport,\n  handleExcelExport,\n  tableRowItem,\n}) => (\n  <div className=\"export-buttons\">\n    {tableRowItem !== \"trainsessionapprov\" && (\n      <Button\n        variant=\"outlined\"\n        sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\n        onClick={handleCSVExport}\n      >\n        <FaFileExport style={{ marginRight: \"5px\" }} /> CSV\n      </Button>\n    )}\n    <Button\n      variant=\"outlined\"\n      sx={{ color: \"#1b2a4e\", borderColor: \"#1b2a4e\" }}\n      onClick={handleExcelExport}\n    >\n      <FaFileExport style={{ marginRight: \"5px\" }} />\n      {tableRowItem !== \"trainsessionapprov\" ? \"Excel\" : \"Download Report\"}\n    </Button>\n  </div>\n);\n\nconst Table = ({\n  columns,\n  data,\n  filter,\n  // setFilter,\n  // setFilteredGroups,\n  // setFilteredSessions,\n  tableRowItem,\n  allAttendances,\n  // details,\n  selectedProject,\n}) => {\n  const pathName = tableRowItem || window.location.pathname.split(\"/\")[2];\n  const [rowDetails, setRowDetails] = useState({ ts_id: null });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [session_image, setSession_image] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [fvId, setFvId] = useState(null);\n  const navigate = useNavigate();\n\n  const imageData = useQuery(GET_TRAINING_SESSION_IMAGE, {\n    variables: { tsId: rowDetails && rowDetails.ts_id ? rowDetails.ts_id : \"\" },\n    skip: !rowDetails,\n  });\n\n  // Restore original filename variable\n  const filename =\n    pathName === \"traingroup\"\n      ? \"mypima_training_group\"\n      : pathName === \"trainsession\"\n      ? \"mypima_training_session\"\n      : pathName === \"participants\"\n      ? \"Participants Data\"\n      : pathName === \"farmvisit\"\n      ? \"mypima_farm_visit\"\n      : \"mypima_attendance\";\n\n  useEffect(() => {\n    if (\n      !imageData.loading &&\n      imageData.data?.trainingSessionImage?.status === 200\n    ) {\n      setLoading(false);\n      setSession_image(\n        imageData.data.trainingSessionImage.trainingSessionImage\n      );\n    }\n  }, [imageData]);\n\n  const handleOpenModal = () => {\n    setModalOpen(true);\n  };\n\n  // const handleCloseModal = () => {\n  //   setModalOpen(false);\n  // };\n\n  const handleRowClick = (row) => {\n    setRowDetails(row);\n\n    const idMapping = {\n      trainsession: row.ts_id,\n      traingroup: row.tg_id,\n      participants: row.p_id,\n      farmvisit: row.fv_ids,\n      trainsessionapprov: row.ts_id,\n    };\n\n    const id = idMapping[tableRowItem] || row.attendance_id;\n\n    if (tableRowItem !== \"farmvisit\" && tableRowItem !== \"trainsessionapprov\") {\n      navigate(`/in/${tableRowItem}/${id}`);\n    } else if (tableRowItem === \"farmvisit\") {\n      setFvId(row.fv_id);\n      handleOpenModal();\n    } else if (tableRowItem === \"trainsessionapprov\") {\n      setOpen(true);\n      setLoading(true);\n    }\n  };\n\n  const handleSearch = (e) => {\n    const value = e.target.value.toLowerCase();\n    const filteredItems = data.filter((item) =>\n      columns.some((column) => {\n        const field = item[column.id];\n        return field?.toString().toLowerCase().includes(value);\n      })\n    );\n    setFilteredData(filteredItems);\n    setSearchText(e.target.value);\n  };\n\n  const handleCSVExport = () => {\n    if (!data || data.length === 0) {\n      alert(\"No data available for export.\");\n      return;\n    }\n\n    let updatedColumns = [...columns];\n\n    // Add new columns if pathName is \"farmvisit\"\n    if (pathName === \"farmvisit\") {\n      const newColumns = [\n        { id: \"household_tns_id\" },\n        { id: \"pima_farmer_id\" },\n        { id: \"pima_household_id\" },\n      ];\n      updatedColumns = [...updatedColumns, ...newColumns];\n    }\n\n    const partsHeaders = [\n      \"num\",\n      \"Project\",\n      \"first_name\",\n      \"middle_name\",\n      \"last_name\",\n      \"gender\",\n      \"age\",\n      \"coffee_tree_numbers\",\n      \"number_of_coffee_plots\",\n      \"phone_number\",\n      selectedProject === \"a0EOj000002FMGnMAO\" ||\n      selectedProject === \"a0EOj000002C7ivMAC\"\n        ? \"national_identification_id\"\n        : selectedProject === \"a0EOj000003E0knMAC\"\n        ? \"growers_number\"\n        : \"coop_membership_number\",\n      \"location\",\n      \"farmer_sf_id\",\n      \"tns_id\",\n      \"hh_number\",\n      \"sf_household_id\",\n      \"farmer_number\",\n      \"ffg_id\",\n      \"training_group\",\n      \"status\",\n      \"farmer_trainer\",\n      selectedProject === \"a0EOj000003E0knMAC\"\n        ? \"agronomy_advisor\"\n        : \"business_advisor\",\n      \"create_in_commcare\",\n    ];\n\n    if (tableRowItem === \"participants\") {\n      const monthlyAttendanceMap = new Map();\n      const filteredAttendances = allAttendances.filter((attendance) =>\n        data.some(\n          (participant) => participant.p_id === attendance.participant_id\n        )\n      );\n\n      filteredAttendances.forEach((attendance) => {\n        const {\n          attendance_status,\n          participant_id,\n          module_number,\n          module_name,\n          module_id,\n        } = attendance;\n\n        const key = `${module_number}-${module_name}-${module_id}`;\n\n        if (!monthlyAttendanceMap.has(key)) {\n          monthlyAttendanceMap.set(key, {});\n        }\n\n        const monthlyAttendance = monthlyAttendanceMap.get(key);\n        monthlyAttendance[participant_id] =\n          attendance_status === \"Present\" ? \"1\" : \"0\";\n      });\n\n      for (const [monthKey] of monthlyAttendanceMap) {\n        partsHeaders.push(monthKey);\n      }\n\n      const csvRows =\n        searchText.length > 0\n          ? filteredData.map((participant) => {\n              const rowData = { ...participant };\n              for (const [\n                monthKey,\n                monthlyAttendance,\n              ] of monthlyAttendanceMap) {\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\n              }\n              return rowData;\n            })\n          : data.map((participant) => {\n              const rowData = { ...participant };\n              for (const [\n                monthKey,\n                monthlyAttendance,\n              ] of monthlyAttendanceMap) {\n                rowData[monthKey] = monthlyAttendance[participant.p_id] || \"\";\n              }\n              return rowData;\n            });\n\n      data = csvRows;\n    }\n\n    // Remove unnecessary keys from the data\n    const sanitizedData = data.map(\n      ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\n        rest\n    );\n\n    // Step 1: Create the configuration for CSV\n    const config = mkConfig({\n      // fieldSeparator: \",\",\n      // quoteStrings: '\"',\n      // decimalSeparator: \".\",\n      // showLabels: true,\n      // useBom: true,\n      filename: filename,\n      columnHeaders: tableRowItem === \"participants\" ? partsHeaders : updatedColumns.map((column) => column.id)\n    });\n\n    // Step 2: Generate CSV string content\n    const csvContent = generateCsv(config)(sanitizedData);\n\n    if (!csvContent) {\n      console.error(\"Output is empty. Is your data formatted correctly?\");\n      return;\n    }\n\n    // Step 3: Trigger CSV file download\n    download(config)(csvContent);\n    console.log(\"Download successful\");\n\n    console.log(\"Config:\", config);\n    console.log(\"Data:\", data);\n    console.log(\"CSV Content:\", csvContent);\n  };\n\n  const handleExcelExport = () => {\n    const sheetName = \"Sessions Data\";\n    const summarySheetName = \"Summary by Trainer\";\n\n    const sessionsData = {\n      header: columns.map((column) => column.id),\n      body: data.map(\n        ({ tg_id, ts_id, p_id, attendance_id, fv_id, __typename, ...rest }) =>\n          Object.values(rest)\n      ),\n    };\n\n    const trainerSummary = data.reduce(\n      (acc, { farmer_trainer, session_image_status }) => {\n        const key = `${farmer_trainer}_${session_image_status}`;\n        if (!acc[key]) {\n          acc[key] = { farmer_trainer, session_image_status, count: 0 };\n        }\n        acc[key].count += 1;\n        return acc;\n      },\n      {}\n    );\n\n    const summaryData = Object.values(trainerSummary);\n\n    const trainerSummaryData = {\n      header: [\"farmer_trainer\", \"session_image_status\", \"count\"],\n      body: summaryData.map((data) => Object.values(data)),\n    };\n\n    const workbook = utils.book_new();\n    const sessionsWorksheet = utils.json_to_sheet(\n      [sessionsData.header, ...sessionsData.body],\n      { skipHeader: true }\n    );\n    const summaryWorksheet = utils.json_to_sheet(\n      [trainerSummaryData.header, ...trainerSummaryData.body],\n      { skipHeader: true }\n    );\n\n    utils.book_append_sheet(workbook, summaryWorksheet, summarySheetName);\n    utils.book_append_sheet(workbook, sessionsWorksheet, sheetName);\n\n    writeFile(workbook, `${filename}_${TimeZone()}.xlsx`);\n  };\n\n  return (\n    <div>\n      <div className={`table-header-actions ${!filter ? \"no-filter\" : \"\"}`}>\n        {/* Filter Button (if filter exists) */}\n        {filter && <Button className=\"filter-button\">Filter</Button>}\n\n        {/* Search and Export Buttons */}\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n          }}\n        >\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchText}\n              onChange={handleSearch}\n            />\n            <span className=\"search-icon\">\n              <BiSearchAlt />\n            </span>\n          </div>\n\n          {/* Export Buttons */}\n          <ExportButtons\n            handleCSVExport={handleCSVExport}\n            handleExcelExport={handleExcelExport}\n            tableRowItem={tableRowItem}\n          />\n        </div>\n      </div>\n\n      <DataTable\n        columns={columns}\n        data={searchText.length > 0 ? filteredData : data}\n        onRowClicked={handleRowClick}\n        pagination\n        highlightOnHover\n        customStyles={customStyles}\n        className=\"table-container\"\n      />\n\n      {/* TODO: REIMPLEMENT THIS */}\n      {/* <FVQAModal\n        open={modalOpen}\n        handleClose={handleCloseModal}\n        fvId={fvId}\n        details={details}\n        rowDetails={rowDetails}\n      /> */}\n\n      {open && (\n        <Imagecontainer\n          open={open}\n          handleClose={() => setOpen(false)}\n          id={rowDetails.ts_id}\n          data={rowDetails}\n          isVerified={rowDetails.is_verified}\n          imageStatus={rowDetails.session_image_status}\n          sessionImageUrl={session_image}\n          selectedProject={selectedProject}\n          loading={loading}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  Typography,\n  Button,\n  Box,\n  DialogActions,\n  Chip,\n  Alert,\n} from \"@mui/material\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { BiErrorAlt } from \"react-icons/bi\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { saveAs } from \"file-saver\";\nimport {\n  GET_PARTICIPANTS_PER_PROJECT,\n  UPLOAD_PARTICIPANTS,\n} from \"../../graphql/queries/participantsRequests\";\n\nconst requiredColumns = [\n  \"Project\",\n  \"first_name\",\n  \"last_name\",\n  \"gender\",\n  \"age\",\n  \"coffee_tree_numbers\",\n  \"farmer_sf_id\",\n  \"tns_id\",\n  \"hh_number\",\n  \"sf_household_id\",\n  \"farmer_number\",\n  \"ffg_id\",\n  \"training_group\",\n  \"status\",\n];\n\nconst UploadParticipantsModal = ({\n  open,\n  setOpen,\n  navigatedProject,\n  sfProjectId,\n}) => {\n  const [fileInfo, setFileInfo] = useState(null);\n  const [file, setFile] = useState(null);\n  const [loadedColumns, setLoadedColumns] = useState([]);\n  const [distinctProjects, setDistinctProjects] = useState([]);\n  const [uploadResult, setUploadResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const [uploadParticipants] = useMutation(UPLOAD_PARTICIPANTS);\n  const participantsPerProject = useQuery(GET_PARTICIPANTS_PER_PROJECT, {\n    variables: { projectId: sfProjectId },\n  });\n\n  const handleChange = (file) => {\n    setFile(file);\n    setUploadResult(null);\n    parseFile(file);\n  };\n\n  const parseFile = (file) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const loadedData = e.target.result.split(/\\r\\n|\\n/);\n      const modifiedData = loadedData.map((row) =>\n        row.split(\",\").map((cell) => cell.replace(/^\"(.*)\"$/, \"$1\"))\n      );\n      setFileInfo({\n        filename: file.name,\n        size: file.size,\n        type: file.type,\n        data: modifiedData.length > 0 ? modifiedData : loadedData,\n      });\n      setLoadedColumns(modifiedData[0]);\n    };\n    reader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (!fileInfo) return;\n    if (fileInfo.data && fileInfo.data.length < 2) return;\n    extractDistinctProjects(fileInfo);\n  }, [fileInfo, loadedColumns]);\n\n  const extractDistinctProjects = (fileInfo) => {\n    const projectColumn = fileInfo.data\n      .map((row) => row[loadedColumns.indexOf(\"Project\")])\n      .filter((project) => project);\n    setDistinctProjects([...new Set(projectColumn)]);\n  };\n\n  const handleClose = (e, reason) => {\n    if (reason === \"backdropClick\" || reason === \"escapeKeyDown\") return;\n    resetState();\n  };\n\n  const resetState = () => {\n    setFileInfo(null);\n    setOpen(false);\n  };\n\n  const handleUpload = async () => {\n    if (isProcessing) return;\n    setIsProcessing(true);\n    setUploadResult(null);\n    const newFile = createProjectSpecificFile(\n      fileInfo,\n      loadedColumns,\n      navigatedProject\n    );\n    await uploadFile(newFile);\n  };\n\n  const createProjectSpecificFile = (fileInfo, loadedColumns, project) => {\n    const projectIndex = loadedColumns.indexOf(\"Project\");\n    const projectData = fileInfo.data.filter(\n      (row) => row[projectIndex] === project\n    );\n    const projectDataString = `${loadedColumns.join(\",\")}\\n${projectData.join(\n      \"\\n\"\n    )}`;\n    return new File([projectDataString], fileInfo.filename, {\n      type: \"text/csv\",\n    });\n  };\n\n  const uploadFile = async (file) => {\n    try {\n      const res = await uploadParticipants({ variables: { partsFile: file } });\n      await participantsPerProject.refetch();\n      setUploadResult(res.data.uploadParticipants);\n      if (res.data.uploadParticipants.status === 200) {\n        setTimeout(() => {\n          window.location.reload();\n        }, 5000);\n      }\n    } catch (error) {\n      console.error(error);\n      setUploadResult({\n        status: 500,\n        message: \"Something went wrong. Please try again.\",\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleDownloadErrors = () => {\n    const { file, message } = uploadResult;\n    if (file) {\n      const byteCharacters = atob(file);\n      const byteNumbers = new Array(byteCharacters.length).fill().map((_, i) => byteCharacters.charCodeAt(i));\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\n      saveAs(blob, \"error_file.xlsx\");\n    } else {\n      console.error(\"No file found in the upload result.\");\n    }\n  };\n\n  const renderFileDetails = () => (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <Typography variant=\"body2\">\n        <strong>Name:</strong> {fileInfo.filename}\n      </Typography>\n      <Typography variant=\"body2\">\n        <strong>Size:</strong> {formatFileSize(fileInfo.size)}\n      </Typography>\n      <Typography variant=\"body2\">\n        <strong>Type:</strong> {fileInfo.type}\n      </Typography>\n      <Typography variant=\"body2\">\n        <strong>Total Records:</strong> {formatNumberWithCommas(fileInfo.data.length - 2)}\n      </Typography>\n      {distinctProjects.length > 1 && (\n        <Typography variant=\"body4\" sx={{ marginBottom: \"10px\" }}>\n          Only records for <strong>{navigatedProject} ({fileInfo.data.filter((row) => row[loadedColumns.indexOf(\"Project\")] === navigatedProject).length} records)</strong> will be processed from this file.\n        </Typography>\n      )}\n    </Box>\n  );\n\n  const formatFileSize = (size) => (\n    size > 1000000 ? `${(size / 1000000).toFixed(2)} MB` : `${(size / 1000).toFixed(2)} KB`\n  );\n\n  const formatNumberWithCommas = (number) => (\n    number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n  );\n\n  const renderRequiredColumnsAlert = () => (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <Typography variant=\"body1\">\n        <BiErrorAlt style={{ fontSize: \"2rem\", color: \"#B90101\" }} /> File must contain all required columns:\n      </Typography>\n      <Typography variant=\"body2\" sx={{ display: \"flex\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n        {requiredColumns.filter((column) => !loadedColumns.includes(column)).map((column, index) => (\n          <Chip key={index} label={column} sx={{ margin: \"5px 0.5rem\" }} color=\"primary\" variant=\"outlined\" />\n        ))}\n      </Typography>\n      <div className=\"upload_actions\">\n        <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\n      </div>\n    </Box>\n  );\n\n  const renderEmptyFileAlert = () => (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <Typography variant=\"body1\" sx={{ fontStyle: \"italic\" }}>\n        <BiErrorAlt style={{ fontSize: \"1.5rem\", color: \"#B90101\" }} /> There are no records in the file. Please upload a file with data.\n      </Typography>\n      <div className=\"upload_actions\">\n        <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\n      </div>\n    </Box>\n  );\n\n  const renderProjectMismatchAlert = () => (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <Typography variant=\"body1\" sx={{ fontStyle: \"italic\" }}>\n        <BiErrorAlt style={{ fontSize: \"3rem\", color: \"#B90101\" }} /> The project(s) in the file does not match the project you are currently navigating. Please upload a file with the correct project.\n      </Typography>\n      <div className=\"upload_actions\">\n        <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\n      </div>\n    </Box>\n  );\n\n  const renderProcessingState = () => (\n    <Typography variant=\"body2\" sx={{ marginBottom: \"10px\", width: \"100%\", textAlign: \"center\" }}>\n      <em style={{ fontWeight: \"bold\", color: \"#6C757D\" }}>Data are being processed, wait...</em>\n    </Typography>\n  );\n\n  const renderUploadResult = () => (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }} className=\"file-info\">\n      <Typography variant=\"body2\">\n        <Alert severity={uploadResult.status === 200 ? \"success\" : \"error\"}>{uploadResult.message}</Alert>\n      </Typography>\n      {uploadResult.status !== 200 && uploadResult.file && (\n        <Button onClick={handleDownloadErrors} variant=\"contained\" color=\"primary\">\n          Download Error File\n        </Button>\n      )}\n    </Box>\n  );\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogContent>\n        {!fileInfo ? (\n          <FileUploader label={\"Drag and drop or browse a file to upload. File must be: \"} handleChange={handleChange} name=\"file\" types={[\"csv\"]} />\n        ) : uploadResult ? (\n          renderUploadResult()\n        ) : loadedColumns.filter((column) => requiredColumns.includes(column)).length !== requiredColumns.length ? (\n          renderRequiredColumnsAlert()\n        ) : fileInfo.data.length - 2 < 1 ? (\n          renderEmptyFileAlert()\n        ) : !distinctProjects.includes(navigatedProject) ? (\n          renderProjectMismatchAlert()\n        ) : (\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }} className=\"file-info\">\n            {renderFileDetails()}\n            <div className=\"upload_actions\">\n              {isProcessing ? renderProcessingState() : (\n                <>\n                  <AiOutlineCloseCircle onClick={() => setFileInfo(null)} className=\"back__icon\" title=\"Back to Upload New File\" />\n                  <FaCloudUploadAlt title=\"Proceed Records Processing\" className=\"upload__icon\" onClick={handleUpload} />\n                </>\n              )}\n            </div>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} disabled={isProcessing}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default UploadParticipantsModal;\n","import { gql } from \"@apollo/client\";\n\n// const GET_ALL_ATTENDANCES = gql`\n//   query GetAttendances($projectId: String!) {\n//     getAttendances(project_id: $projectId) {\n//       message\n//       status\n//       attendance {\n//         attendance_id\n//         participant_id\n//         attendance_name\n//         attendance_date\n//         attendance_status\n//         session_id\n//         module_name\n//         module_number\n//         module_id\n//       }\n//     }\n//   }\n// `;\n\nconst GET_ALL_ATTENDANCES = gql`\n  query GetAttendances($projectId: String!, $limit: Int, $offset: Int) {\n    getAttendances(project_id: $projectId, limit: $limit, offset: $offset) {\n      message\n      status\n      attendance {\n        attendance_id\n        participant_id\n        attendance_status\n        module_name\n        module_number\n        module_id\n      }\n    }\n  }\n`;\n\nexport { GET_ALL_ATTENDANCES };\n","import React, { useState, useEffect } from \"react\";\nimport { Chip } from \"@mui/material\";\nimport Table from \"../../components/Table/Table\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport UploadParticipantsModal from \"../../components/Modals/UploadParticipantsModal\";\nimport {\n  GET_PARTICIPANTS_PER_PROJECT,\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\n} from \"../../graphql/queries/participantsRequests\";\nimport { GET_ALL_ATTENDANCES } from \"../../graphql/queries/attendancesRequests\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { BeatLoader } from \"react-spinners\";\nimport { Grid } from \"@mui/material\";\nimport { useOutletContext } from \"react-router-dom\";\n\nconst Participants = () => {\n  const { activeProject, trainingGroups, projects } = useOutletContext();\n  const [open, setOpen] = useState(false);\n  const [sendToCcCount, setSendToCcCount] = useState();\n  const [isSyncing, setIsSyncing] = useState(false);\n\n  const {\n    data: participantData,\n    loading: participantsLoading,\n    error: participantsError,\n    refetch: refetchParticipants,\n  } = useQuery(GET_PARTICIPANTS_PER_PROJECT, {\n    variables: { projectId: activeProject },\n    skip: !activeProject,\n  });\n\n  const [allAttendances, setAllAttendances] = useState([]);\n  const [attendanceLoading, setAttendanceLoading] = useState(true);\n  const [attendanceError, setAttendanceError] = useState(null);\n\n  const { fetchMore } = useQuery(GET_ALL_ATTENDANCES, {\n    variables: {\n      projectId: activeProject,\n      limit: 5000,\n      offset: 0,\n    },\n    skip: !activeProject,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  useEffect(() => {\n    const fetchAllAttendancesParallel = async () => {\n      if (!activeProject) return;\n\n      try {\n        setAttendanceLoading(true);\n        setAttendanceError(null);\n\n        const limit = 5000;\n        let offset = 0;\n        let allChunks = [];\n\n        // First request\n        const { data: initialData } = await fetchMore({\n          variables: { projectId: activeProject, limit, offset },\n        });\n\n        const initialChunk = initialData?.getAttendances?.attendance || [];\n        allChunks = [...initialChunk];\n\n        if (initialChunk.length < limit) {\n          setAllAttendances(allChunks);\n          return setAttendanceLoading(false);\n        }\n\n        offset += limit;\n\n        // Now fetch sequentially in batches (e.g. 3 at a time)\n        const maxParallel = 10;\n        let keepGoing = true;\n\n        while (keepGoing) {\n          const promises = [];\n\n          for (let i = 0; i < maxParallel; i++) {\n            const currentOffset = offset + i * limit;\n\n            const p = fetchMore({\n              variables: {\n                projectId: activeProject,\n                limit,\n                offset: currentOffset,\n              },\n            }).then((res) => {\n              const chunk = res?.data?.getAttendances?.attendance || [];\n              return { chunk, currentOffset };\n            });\n\n            promises.push(p);\n          }\n\n          const results = await Promise.all(promises);\n\n          for (let res of results) {\n            if (res.chunk.length > 0) {\n              allChunks = [...allChunks, ...res.chunk];\n            }\n\n            if (res.chunk.length < limit) {\n              keepGoing = false;\n            }\n          }\n\n          offset += maxParallel * limit;\n        }\n\n        setAllAttendances(allChunks);\n      } catch (err) {\n        console.error(\"Parallel attendance fetch error:\", err);\n        setAttendanceError(err);\n      } finally {\n        setAttendanceLoading(false);\n      }\n    };\n\n    fetchAllAttendancesParallel();\n  }, [activeProject, fetchMore]);\n\n  // const {\n  //   data: attendanceData,\n  //   loading: attendanceLoading,\n  //   error: attendanceError,\n  // } = useQuery(GET_ALL_ATTENDANCES, {\n  //   variables: { projectId: activeProject },\n  //   skip: !activeProject,\n  // });\n\n  const [SyncParticipants] = useMutation(SYNC_PARTICIPANTS_WITH_COMMCARE);\n\n  const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\n\n  useEffect(() => {\n    if (\n      participantData &&\n      participantData.getParticipantsByProject.status === 200\n    ) {\n      const sendToCcCount =\n        participantData.getParticipantsByProject.participants.filter(\n          (participant) => participant.create_in_commcare === \"false\"\n        );\n      setSendToCcCount(sendToCcCount.length);\n    }\n  }, [participantData]);\n\n  const handleTakeAction = async () => {\n    setIsSyncing(true);\n\n    try {\n      await SyncParticipants({\n        variables: {\n          projectId: activeProject,\n        },\n      });\n      await refetchParticipants(); // Refetch the participants data after syncing\n      setIsSyncing(false);\n    } catch (err) {\n      console.log(err);\n      setIsSyncing(false);\n    }\n  };\n\n  if (participantsLoading || attendanceLoading) {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <BeatLoader color=\"#0D3C61\" size={15} />\n        <em style={{ color: \"#0D3C61\" }}>\n          Loading Participants and Attendances...\n        </em>\n      </Grid>\n    );\n  }\n\n  if (participantsError || attendanceError) {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <em style={{ color: \"red\" }}>\n          Error loading data:{\" \"}\n          {participantsError?.message || attendanceError?.message}\n        </em>\n      </Grid>\n    );\n  }\n\n  const participants = participantData.getParticipantsByProject.participants;\n  // const allAttendances = attendanceData.getAttendances.attendance;\n\n  const columns = [\n    { id: \"num\", name: \"No.\", selector: (row) => row.num, sortable: true },\n    {\n      id: \"full_name\",\n      name: \"Full Name\",\n      selector: (row) => row.first_name + \" \" + row.last_name,\n      sortable: true,\n    },\n    {\n      id: \"gender\",\n      name: \"Gender\",\n      selector: (row) => (row.gender === \"m\" ? \"Male\" : \"Female\"),\n      sortable: true,\n    },\n    {\n      id: \"location\",\n      name: \"Location\",\n      selector: (row) => row.location,\n      sortable: true,\n    },\n    {\n      id: \"tns_id\",\n      name: \"TNS ID\",\n      selector: (row) => row.tns_id,\n      sortable: true,\n    },\n    {\n      id: \"training_group\",\n      name: \"Training Group\",\n      selector: (row) => row.training_group,\n      sortable: true,\n    },\n    {\n      id: \"household_id\",\n      name: \"HH Number\",\n      selector: (row) => row.hh_number,\n      sortable: true,\n    },\n    {\n      id: \"primary_household_member\",\n      name: \"Primary HouseHold Member\",\n      selector: (row) => (\n        <div>\n          {row.farmer_number === \"1\" ? (\n            <Chip label={\"1\"} color=\"success\" variant=\"outlined\" />\n          ) : (\n            <Chip label={\"2\"} color=\"error\" variant=\"outlined\" />\n          )}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      id: \"farmer_trainer\",\n      name: \"Farmer Trainer\",\n      selector: (row) => row.farmer_trainer,\n      sortable: true,\n    },\n    {\n      id: \"business_advisor\",\n      name: \"Business Advisor\",\n      selector: (row) => row.business_advisor,\n      sortable: true,\n    },\n  ];\n  const tableRowItem = \"participants\";\n\n  const rows = participants.map((participant, index) => {\n    const row = {\n      num: index + 1,\n      Project: projects.find(\n        (project) => project.sf_project_id === activeProject\n      ).project_name,\n      p_id: participant.p_id,\n      first_name: participant.first_name,\n      middle_name: participant.middle_name ? participant.middle_name : \"\",\n      last_name: participant.last_name ? participant.last_name : \"\",\n      gender: participant.gender,\n      age: participant.age,\n      coffee_tree_numbers: participant.coffee_tree_numbers,\n      phone_number: participant.phone_number,\n      farmer_sf_id: participant.p_id,\n      hh_number: participant.hh_number,\n      sf_household_id: participant.household_id,\n      ffg_id: participant.ffg_id,\n      location: participant.location,\n      tns_id: participant.tns_id,\n      training_group:\n        trainingGroups && trainingGroups.length > 0\n          ? trainingGroups.find((tg) => tg.tg_id === participant.training_group)\n              ?.tg_name || \"N/A\"\n          : \"N/A\",\n      farmer_number: participant.primary_household_member,\n      status: participant.status,\n      farmer_trainer: participant.farmer_trainer,\n      // business_advisor: participant.business_advisor,\n      create_in_commcare: participant.create_in_commcare,\n      number_of_coffee_plots: participant.number_of_coffee_plots,\n    };\n\n    if (activeProject === \"a0EOj000003E0knMAC\") {\n      row.agronomy_advisor = participant.business_advisor;\n    } else {\n      row.business_advisor = participant.business_advisor;\n    }\n\n    if (\n      activeProject === \"a0EOj000002FMGnMAO\" ||\n      activeProject === \"a0EOj000002C7ivMAC\"\n    ) {\n      row.national_identification_id = participant.coop_membership_number\n        ? participant.coop_membership_number\n        : \"\";\n    } else if (activeProject === \"a0EOj000003E0knMAC\") {\n      row.growers_number = participant.coop_membership_number\n        ? participant.coop_membership_number\n        : \"\";\n    } else {\n      row.coop_membership_number = participant.coop_membership_number\n        ? participant.coop_membership_number\n        : \"\";\n    }\n\n    return row;\n  });\n\n  return (\n    <div>\n      {/* Display the dialog box for active participants */}\n      {sendToCcCount > 0 && (\n        <div className=\"active-participants-dialog\">\n          <p>\n            You currently have <strong>{sendToCcCount}</strong> participants who\n            have not been sent to CommCare. Please download the participant\n            list, review the database, and ensure all information is verified\n            before syncing with CommCare.\n          </p>\n          <button\n            className=\"take-action-button\"\n            onClick={() => handleTakeAction()}\n            disabled={isSyncing}\n          >\n            {isSyncing ? \"Processing...\" : \"Send to Commcare\"}\n          </button>\n        </div>\n      )}\n\n      <div className=\"flex__heading\">\n        <h1 className=\"module__heading\">Registered Farmers View</h1>{\" \"}\n        {(userDetails?.role === \"super_admin\" ||\n          userDetails?.role === \"ci_leadership\" ||\n          userDetails?.role === \"senior_business_advisor\" ||\n          userDetails?.role === \"project_manager\" ||\n          userDetails?.role === \"mel_analyst\") && (\n          <FaCloudUploadAlt\n            title=\"Upload New Participants\"\n            style={{\n              fontSize: \"30px\",\n              cursor: \"pointer\",\n              marginLeft: \"10px\",\n              fill: \"#00A5A3\",\n            }}\n            onClick={() => setOpen(true)}\n          />\n        )}{\" \"}\n      </div>\n      {participants.length > 0 ? (\n        <Table\n          columns={columns}\n          data={rows}\n          tableRowItem={tableRowItem}\n          allAttendances={allAttendances}\n          selectedProject={activeProject}\n        />\n      ) : (\n        <div className=\"no__data\">\n          <h1 style={{ fontSize: \"20px\" }}>No Registered Farmers Yet</h1>\n        </div>\n      )}\n\n      <UploadParticipantsModal\n        open={open}\n        setOpen={setOpen}\n        navigatedProject={\n          projects.find((project) => project.sf_project_id === activeProject)\n            .project_name\n        }\n        sfProjectId={activeProject}\n      />\n    </div>\n  );\n};\n\nexport default Participants;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  // Button,\n  DialogContent,\n  // DialogActions,\n  IconButton,\n  Typography,\n  Grid,\n  CircularProgress,\n} from \"@mui/material\";\nimport { MdClose, MdFullscreen, MdFullscreenExit } from \"react-icons/md\";\nimport { styled } from \"@mui/material/styles\";\n// import { useMutation, useQuery } from \"@apollo/client\";\n// import {\n//   GET_TRAINING_SESSIONS_PER_PROJECT,\n//   VALIDATE_TRAINING_SESSION,\n// } from \"../../../graphql/queries/trainingSessionsRequests\";\n// import { toast } from \"react-hot-toast\";\n// import { BeatLoader } from \"react-spinners\";\n\n// const StyledButton = styled(Button)(({ theme }) => ({\n//   marginBottom: \"10px\",\n//   marginRight: \"10px\",\n//   textTransform: \"initial\",\n//   backgroundColor: \"rgba(23, 177, 94, 1)\",\n//   color: \"#fff\",\n//   fontSize: \"12px\",\n\n//   \"&:hover\": {\n//     backgroundColor: \"rgba(23, 177, 94, 0.5)\",\n//     transition: \"background-color 0.3s ease-in-out\",\n//   },\n// }));\n\n// const StyledButton2 = styled(Button)(({ theme }) => ({\n//   marginBottom: \"10px\",\n//   marginRight: \"10px\",\n//   textTransform: \"initial\",\n//   fontSize: \"12px\",\n//   color: \"rgba(200, 27, 27, 1)\",\n//   borderColor: \"rgba(200, 27, 27, 1)\",\n\n//   \"&:hover\": {\n//     backgroundColor: \"rgba(235, 87, 87, 0.1)\",\n//     transition: \"background-color 0.3s ease-in-out\",\n//     borderColor: \"rgba(200, 27, 27, 1)\",\n//   },\n//   \".MuiButton-outlined\": {\n//     color: \"rgba(235, 87, 87, 1)\",\n//   },\n// }));\n\nconst LoadingOverlay = styled(\"div\")({\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n  zIndex: 9999,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nconst Imagecontainer = ({\n  open,\n  handleClose,\n  sessionImageUrl,\n  // id,\n  data,\n  // isVerified,\n  // imageStatus,\n  selectedProject,\n  loading,\n}) => {\n  console.log(data);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isLoading] = useState(false);\n  // const userDetails = JSON.parse(window.localStorage.getItem(\"myPimaUserData\"));\n\n  // const [validateSession] = useMutation(VALIDATE_TRAINING_SESSION);\n\n  // const trainingSessionsPerProject = useQuery(\n  //   GET_TRAINING_SESSIONS_PER_PROJECT,\n  //   {\n  //     variables: { sfProjectId: selectedProject },\n  //   }\n  // );\n\n  const toggleExpand = () => {\n    setIsExpanded((prev) => !prev);\n  };\n\n  // const handleSessionValidation = async (id, session_image_status) => {\n  //   setIsLoading(true);\n\n  //   try {\n  //     await validateSession({\n  //       variables: {\n  //         tsId: id,\n  //         status: session_image_status,\n  //       },\n  //     });\n\n  //     // refetch training sessions\n  //     trainingSessionsPerProject\n  //       .refetch()\n  //       .then(() => {\n  //         toast.success(\"Session validated successfully\");\n  //         setIsLoading(false);\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n\n  //         toast.error(\"Error validating session\");\n  //       });\n  //   } catch (error) {\n  //     console.log(error);\n\n  //     toast.error(\"Error validating session\");\n\n  //     setIsLoading(false);\n  //   }\n  // };\n\n  return (\n    <>\n      {loading ? (\n        <Dialog\n          open={open}\n          keepMounted\n          fullWidth\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <div style={{ margin: \"20px\" }}>\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              sx={{\n                position: \"absolute\",\n                right: 8,\n                top: 8,\n                color: \"#2b2b2b\",\n              }}\n            >\n              <MdClose />\n            </IconButton>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100%\",\n            }}\n          >\n            <CircularProgress />\n            <Typography variant=\"h6\" style={{ marginLeft: \"10px\" }}>\n              Loading Image...\n            </Typography>\n          </div>\n        </Dialog>\n      ) : (\n        <Dialog\n          open={open}\n          keepMounted\n          fullWidth\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          {isLoading && (\n            <LoadingOverlay>\n              <CircularProgress />\n            </LoadingOverlay>\n          )}\n          <div style={{ margin: \"20px\" }}>\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              sx={{\n                position: \"absolute\",\n                right: 8,\n                top: 8,\n                color: \"#2b2b2b\",\n              }}\n            >\n              <MdClose />\n            </IconButton>\n            <Typography variant=\"h6\">Session Image</Typography>\n          </div>\n\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body1\">\n                  <strong>Male Attendees:</strong> {data.total_males}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Female Attendees:</strong> {data.total_females}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Total Attendees:</strong>{\" \"}\n                  {data.total_males + data.total_females}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Session Date:</strong> {data.session_date}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Farmer Trainer:</strong> {data.farmer_trainer}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>Session Module:</strong> {data.ts_module}\n                </Typography>\n                <Typography variant=\"body1\">\n                  <strong>FFG:</strong> {data.ts_group}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <div style={{ position: \"relative\" }}>\n                  <img\n                    src={sessionImageUrl}\n                    alt=\"session_pic\"\n                    style={{\n                      width: \"100%\",\n                      height: \"auto\",\n                      cursor: isExpanded ? \"zoom-out\" : \"zoom-in\",\n                    }}\n                    onClick={toggleExpand}\n                  />\n                  {isExpanded ? (\n                    <IconButton\n                      aria-label=\"shrink\"\n                      onClick={toggleExpand}\n                      sx={{\n                        position: \"absolute\",\n                        bottom: 8,\n                        right: 8,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <MdFullscreenExit />\n                    </IconButton>\n                  ) : (\n                    <IconButton\n                      aria-label=\"expand\"\n                      onClick={toggleExpand}\n                      sx={{\n                        position: \"absolute\",\n                        bottom: 8,\n                        right: 8,\n                        color: \"#fff\",\n                      }}\n                    >\n                      <MdFullscreen />\n                    </IconButton>\n                  )}\n                </div>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          {/* <DialogActions>\n            {(userDetails?.role === \"super_admin\" ||\n              userDetails?.role === \"ci_leadership\" ||\n              userDetails?.role === \"project_manager\" ||\n              userDetails?.role === \"mel_analyst\") &&\n              (!isVerified || imageStatus === \"not_verified\") && (\n                <>\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"invalid\")} variant=\"outlined\" disabled={isLoading}>\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Invalid\"}\n                  </StyledButton2>\n                  <StyledButton2 onClick={() => handleSessionValidation(id, \"unclear\")} variant=\"outlined\" disabled={isLoading}>\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Unclear\"}\n                  </StyledButton2>\n                  <StyledButton onClick={() => handleSessionValidation(id, \"approved\")} disabled={isLoading}>\n                    {isLoading ? <BeatLoader size={8} color={\"#fff\"} loading={isLoading} /> : \"Approve\"}\n                  </StyledButton>\n                </>\n              )}\n          </DialogActions> */}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default Imagecontainer;\n","import { gql } from \"@apollo/client\";\n\nconst GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT = gql`\n  query GetParticipantsAttendanceByProject($projectId: String!) {\n    getParticipantsByProject(project_id: $projectId) {\n      message\n      status\n      participants {\n        p_id\n        first_name\n        middle_name\n        last_name\n        gender\n        age\n        coffee_tree_numbers\n        coop_membership_number\n        phone_number\n        hh_number\n        ffg_id\n        location\n        tns_id\n        status\n        farmer_trainer\n        business_advisor\n        project_name\n        training_group\n        household_id\n        primary_household_member\n        create_in_commcare\n      }\n    }\n    getAttendances(project_id: $projectId) {\n      message\n      status\n      attendance {\n        attendance_id\n        participant_id\n        attendance_name\n        attendance_date\n        attendance_status\n        session_id\n        module_name\n        module_number\n        module_id\n      }\n    }\n  }\n`;\n\nconst GET_PARTICIPANTS_PER_PROJECT = gql`\n  query GetParticipantsAttendanceByProject($projectId: String!) {\n    getParticipantsByProject(project_id: $projectId) {\n      message\n      status\n      participants {\n        p_id\n        first_name\n        middle_name\n        last_name\n        gender\n        age\n        coffee_tree_numbers\n        number_of_coffee_plots\n        coop_membership_number\n        phone_number\n        hh_number\n        ffg_id\n        location\n        tns_id\n        status\n        farmer_trainer\n        business_advisor\n        project_name\n        training_group\n        household_id\n        primary_household_member\n        create_in_commcare\n      }\n    }\n  }\n`;\n\nconst GET_PARTICIPANTS_PER_TG = gql`\n  query GetParticipantsByGroup($tgId: String!) {\n    getParticipantsByGroup(tg_id: $tgId) {\n      message\n      status\n      participants {\n        p_id\n        first_name\n        middle_name\n        last_name\n        gender\n        location\n        tns_id\n        status\n        farmer_trainer\n        business_advisor\n        project_name\n        training_group\n        household_id\n        primary_household_member\n      }\n    }\n  }\n`;\n\nconst GET_PARTICIPANT_BY_ID = gql`\n  query GetParticipantsById($id: String!) {\n    getParticipantsById(p_id: $id) {\n      message\n      status\n      participant {\n        p_id\n        first_name\n        middle_name\n        last_name\n        gender\n        location\n        tns_id\n        status\n        farmer_trainer\n        business_advisor\n        project_name\n        training_group\n        household_id\n        primary_household_member\n      }\n    }\n  }\n`;\n\nconst GET_ATTENDANCE_PER_PARTICIPANT = gql`\n  query GetAttendanceByParticipant($participantId: String!) {\n    getAttendanceByParticipant(participant_id: $participantId) {\n      message\n      status\n      attendance {\n        attendance_id\n        participant_id\n        attendance_name\n        attendance_date\n        attendance_status\n        module_name\n        session_id\n      }\n    }\n  }\n`;\n\nconst UPLOAD_PARTICIPANTS = gql`\n  mutation UploadParticipants($partsFile: Upload!) {\n    uploadParticipants(parts_file: $partsFile) {\n      message\n      status\n      file\n    }\n  }\n`;\n\nconst SYNC_PARTICIPANTS_WITH_COMMCARE = gql`\n  mutation SyncParticipantsWithCOMMCARE($projectId: String!) {\n    syncParticipantsWithCOMMCARE(project_id: $projectId) {\n      message\n      status\n    }\n  }\n`;\n\nexport {\n  GET_PARTICIPANTS_PER_PROJECT,\n  GET_PARTICIPANTS_PER_TG,\n  GET_ATTENDANCE_PER_PARTICIPANT,\n  UPLOAD_PARTICIPANTS,\n  SYNC_PARTICIPANTS_WITH_COMMCARE,\n  GET_PARTICIPANTS_ATTENDANCE_PER_PROJECT,\n  GET_PARTICIPANT_BY_ID\n};\n"],"names":["TimeZone","now","Date","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","second","customStyles","rows","style","minHeight","cursor","headCells","paddingLeft","paddingRight","backgroundColor","color","cells","paddingTop","paddingBottom","ExportButtons","_ref","handleCSVExport","handleExcelExport","tableRowItem","_jsxs","className","children","Button","variant","sx","borderColor","onClick","_jsx","FaFileExport","marginRight","_ref2","columns","data","filter","allAttendances","selectedProject","pathName","window","location","pathname","split","rowDetails","setRowDetails","useState","ts_id","open","setOpen","loading","setLoading","session_image","setSession_image","searchText","setSearchText","filteredData","setFilteredData","modalOpen","setModalOpen","fvId","setFvId","navigate","useNavigate","imageData","useQuery","GET_TRAINING_SESSION_IMAGE","variables","tsId","skip","filename","useEffect","_imageData$data","_imageData$data$train","trainingSessionImage","status","display","alignItems","justifyContent","width","type","placeholder","value","onChange","e","target","toLowerCase","filteredItems","item","some","column","field","id","toString","includes","BiSearchAlt","length","alert","updatedColumns","newColumns","partsHeaders","monthlyAttendanceMap","Map","attendance","participant","p_id","participant_id","forEach","attendance_status","module_number","module_name","module_id","key","has","set","get","monthKey","push","csvRows","map","rowData","monthlyAttendance","sanitizedData","_ref3","tg_id","attendance_id","fv_id","__typename","rest","config","mkConfig","columnHeaders","csvContent","generateCsv","download","console","log","error","sessionsData","header","body","_ref4","Object","values","trainerSummary","reduce","acc","_ref5","farmer_trainer","session_image_status","count","trainerSummaryData","workbook","utils","book_new","sessionsWorksheet","json_to_sheet","skipHeader","summaryWorksheet","book_append_sheet","writeFile","DataTable","onRowClicked","row","trainsession","traingroup","participants","farmvisit","fv_ids","trainsessionapprov","pagination","highlightOnHover","Imagecontainer","handleClose","isVerified","is_verified","imageStatus","sessionImageUrl","requiredColumns","navigatedProject","sfProjectId","fileInfo","setFileInfo","file","setFile","loadedColumns","setLoadedColumns","distinctProjects","setDistinctProjects","uploadResult","setUploadResult","isProcessing","setIsProcessing","uploadParticipants","useMutation","UPLOAD_PARTICIPANTS","participantsPerProject","GET_PARTICIPANTS_PER_PROJECT","projectId","parseFile","reader","FileReader","onload","loadedData","result","modifiedData","cell","replace","name","size","readAsText","extractDistinctProjects","projectColumn","indexOf","project","Set","reason","resetState","createProjectSpecificFile","projectIndex","projectData","projectDataString","join","File","uploadFile","async","res","partsFile","refetch","setTimeout","reload","message","handleDownloadErrors","byteCharacters","atob","byteNumbers","Array","fill","_","i","charCodeAt","byteArray","Uint8Array","blob","Blob","saveAs","formatFileSize","toFixed","formatNumberWithCommas","number","Dialog","onClose","DialogContent","Box","flexDirection","Typography","Alert","severity","BiErrorAlt","fontSize","flexWrap","index","Chip","label","margin","AiOutlineCloseCircle","title","fontStyle","marginBottom","textAlign","fontWeight","_Fragment","FaCloudUploadAlt","newFile","FileUploader","handleChange","types","DialogActions","disabled","GET_ALL_ATTENDANCES","gql","Participants","activeProject","trainingGroups","projects","useOutletContext","sendToCcCount","setSendToCcCount","isSyncing","setIsSyncing","participantData","participantsLoading","participantsError","refetchParticipants","setAllAttendances","attendanceLoading","setAttendanceLoading","attendanceError","setAttendanceError","fetchMore","limit","offset","notifyOnNetworkStatusChange","_initialData$getAtten","allChunks","initialData","initialChunk","getAttendances","maxParallel","keepGoing","promises","currentOffset","p","then","_res$data","_res$data$getAttendan","chunk","results","Promise","all","err","fetchAllAttendancesParallel","SyncParticipants","SYNC_PARTICIPANTS_WITH_COMMCARE","userDetails","JSON","parse","localStorage","getItem","getParticipantsByProject","create_in_commcare","Grid","container","direction","height","BeatLoader","selector","num","sortable","first_name","last_name","gender","tns_id","training_group","hh_number","farmer_number","business_advisor","_trainingGroups$find","Project","find","sf_project_id","project_name","middle_name","age","coffee_tree_numbers","phone_number","farmer_sf_id","sf_household_id","household_id","ffg_id","tg","tg_name","primary_household_member","number_of_coffee_plots","agronomy_advisor","national_identification_id","coop_membership_number","growers_number","handleTakeAction","role","marginLeft","Table","UploadParticipantsModal","LoadingOverlay","styled","position","top","left","right","bottom","zIndex","isExpanded","setIsExpanded","isLoading","toggleExpand","prev","keepMounted","fullWidth","IconButton","MdClose","CircularProgress","spacing","xs","sm","total_males","total_females","session_date","ts_module","ts_group","src","alt","MdFullscreenExit","MdFullscreen","GET_PARTICIPANTS_PER_TG","GET_PARTICIPANT_BY_ID","GET_ATTENDANCE_PER_PARTICIPANT"],"sourceRoot":""}