{"version":3,"file":"static/js/790.94d0d807.chunk.js","mappings":"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","sources":["features/sustainabilityDashboard/components/infoCard.jsx","components/Charts/ChartCard.jsx","components/Charts/ChecklistCard.jsx","features/sustainabilityDashboard/components/InfraChecklistCard.jsx","graphql/queries/wt_dashboardRequests.js","features/sustainabilityDashboard/utils/chartUtils.js","features/sustainabilityDashboard/hooks/useWetmillDashboardData.js","features/sustainabilityDashboard/hooks/useManagerNeeds.js","features/sustainabilityDashboard/hooks/useMissingDocuments.js","features/sustainabilityDashboard/hooks/useInfrastructureChecklist.js","features/sustainabilityDashboard/hooks/useFinancialBreakdown.js","features/sustainabilityDashboard/hooks/useEmployeeStats.js","features/sustainabilityDashboard/hooks/useCpqiStats.js","features/sustainabilityDashboard/hooks/useCpqiChecklist.js","features/sustainabilityDashboard/hooks/useTrainingByTopic.js","features/sustainabilityDashboard/hooks/useTrainingOverall.js","features/sustainabilityDashboard/hooks/useKpiStats.js","features/sustainabilityDashboard/hooks/useParchmentDistribution.js","components/Charts/SectionedChecklistCard.jsx","features/sustainabilityDashboard/Dashboard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Box } from \"@mui/material\";\r\n\r\nexport default function InfoCard({ title, data = {} }) {\r\n  return (\r\n    <Card className=\"chart-card info-card\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>{title}</Typography>\r\n        <Box className=\"info-grid\">\r\n          {Object.entries(data).map(([label, value]) => (\r\n            <Box key={label} className=\"info-item\">\r\n              <Typography variant=\"overline\" color=\"textSecondary\">\r\n                {label}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n                {value}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Box, CircularProgress } from \"@mui/material\";\r\n\r\nexport default function ChartCard({\r\n  title,\r\n  loading,\r\n  error,\r\n  height = 200,\r\n  children,\r\n}) {\r\n  return (\r\n    <Card className=\"chart-card\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>{title}</Typography>\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              height,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : error ? (\r\n          <Typography color=\"error\">{error.message}</Typography>\r\n        ) : (\r\n          children\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Box, CircularProgress } from \"@mui/material\";\r\nimport { WarningAmber } from \"@mui/icons-material\";\r\n\r\nexport default function ChecklistCard({\r\n  title,\r\n  items = [],\r\n  loading,\r\n  error,\r\n  emptyMessage = \"None\",\r\n}) {\r\n  return (\r\n    <Card className=\"chart-card\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>{title}</Typography>\r\n\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              height: 120,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : error ? (\r\n          <Typography color=\"error\">{error.message}</Typography>\r\n        ) : items.length === 0 ? (\r\n          <Typography>{emptyMessage}</Typography>\r\n        ) : (\r\n          <Box component=\"ul\" className=\"checklist\">\r\n            {items.map((label) => (\r\n              <Box key={label} className=\"checklist-line\">\r\n                <WarningAmber color=\"warning\" />\r\n                <Typography noWrap sx={{ ml: 1, flex: 1 }}>\r\n                  {label}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Box, CircularProgress } from \"@mui/material\";\r\nimport { CheckCircle, Cancel, Construction } from \"@mui/icons-material\";\r\n\r\nexport default function InfraChecklistCard({\r\n  title,\r\n  list = [],     // array of { name, ok, repair }\r\n  loading,\r\n  error,\r\n}) {\r\n  return (\r\n    <Card className=\"chart-card full-width\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>{title}</Typography>\r\n\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              height: 120,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : error ? (\r\n          <Typography color=\"error\">{error.message}</Typography>\r\n        ) : (\r\n          <Box component=\"ul\" className=\"checklist\">\r\n            {list.map((i) => (\r\n              <li key={i.name}>\r\n                {i.ok ? (\r\n                  <CheckCircle color=\"success\" />\r\n                ) : (\r\n                  <Cancel color=\"error\" />\r\n                )}\r\n                <Typography component=\"span\" sx={{ ml: 1 }}>\r\n                  {i.name}\r\n                </Typography>\r\n                {i.repair && (\r\n                  <Construction fontSize=\"small\" color=\"warning\" sx={{ ml: 1 }} />\r\n                )}\r\n              </li>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_MANAGER_NEEDS_RANKING = gql`\r\n  query GetManagerNeedsRanking($wetmillId: ID!) {\r\n    getOperationsRanking(wetmillId: $wetmillId) {\r\n      issue\r\n      rank\r\n      reason\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_MISSING_DOCUMENTS = gql`\r\n  query GetMissingDocuments($wetmillId: ID!) {\r\n    getMissingDocuments(wetmillId: $wetmillId)\r\n  }\r\n`;\r\n\r\nexport const GET_INFRASTRUCTURE_CHECKLIST = gql`\r\n  query GetInfrastructureChecklist($wetmillId: ID!) {\r\n    getInfrastructureChecklist(wetmillId: $wetmillId) {\r\n      items\r\n      goodItems\r\n      repairItems\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const GET_FINANCIAL_BREAKDOWN = gql`\r\n  query GetFinancialBreakdown($wetmillId: ID!) {\r\n    getFinancialBreakdown(wetmillId: $wetmillId) {\r\n      totalProfit\r\n      reserves\r\n      socialActivities\r\n      secondPaymentToFarmers\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_EMPLOYEE_STATS = gql`\r\n  query GetEmployeeStats($wetmillId: ID!) {\r\n    getEmployeeStats(wetmillId: $wetmillId) {\r\n      menOwnership\r\n      womenOwnership\r\n      menFarmers\r\n      womenFarmers\r\n      menPermanent\r\n      womenPermanent\r\n      menTemporary\r\n      womenTemporary\r\n      menDaily\r\n      womenDaily\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const GET_CPQI_STATS = gql`\r\n  query GetCpqiStats($wetmillId: ID!) {\r\n    getCpqiStats(wetmillId: $wetmillId) {\r\n      sections { sectionName yesPct noPct }\r\n      overallYesPct\r\n      overallNoPct\r\n    }\r\n  }\r\n`;\r\nexport const GET_CPQI_CHECKLIST = gql`\r\n  query GetCpqiChecklist($wetmillId: ID!) {\r\n    getCpqiChecklist(wetmillId: $wetmillId) {\r\n      sectionName\r\n      criteria { questionName yes }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_TRAINING_BY_TOPIC = gql`\r\n  query GetTrainingByTopic($wetmillId: ID!) {\r\n    getTrainingAttendanceByTopic(wetmillId: $wetmillId) {\r\n      topic\r\n      male\r\n      female\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_TRAINING_OVERALL = gql`\r\n  query GetTrainingOverall($wetmillId: ID!) {\r\n    getTrainingAttendanceOverall(wetmillId: $wetmillId) {\r\n      male\r\n      female\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_KPI_STATS = gql`\r\n  query GetKpiStats($wetmillId: ID!) {\r\n    getKpiStats(wetmillId: $wetmillId) {\r\n      cherry\r\n      total\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PARCHMENT_DISTRIBUTION = gql`\r\n  query GetParchmentDistribution($wetmillId: ID!) {\r\n    getParchmentDistribution(wetmillId: $wetmillId) {\r\n      grade\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","export const centerTextPlugin = {\r\n    id: \"centerText\",\r\n    afterDraw(chart) {\r\n        const opts = chart.config.options.plugins.centerText;\r\n        if (!opts || !opts.text) return;\r\n\r\n        const {\r\n            ctx,\r\n            chartArea: { width, height, top },\r\n        } = chart;\r\n        ctx.save();\r\n        ctx.font = opts.font || \"bold 18px Arial\";\r\n        ctx.fillStyle = opts.color || \"#000\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(opts.text, width / 2, top + height / 2);\r\n        ctx.restore();\r\n    },\r\n};\r\n","import { useManagerNeeds } from \"./useManagerNeeds\";\r\nimport { useMissingDocuments } from \"./useMissingDocuments\";\r\nimport { useInfrastructureChecklist } from \"./useInfrastructureChecklist\";\r\nimport { useFinancialBreakdown } from \"./useFinancialBreakdown\";\r\nimport { useEmployeeStats } from \"./useEmployeeStats\";\r\nimport { useCpqiStats } from \"./useCpqiStats\";\r\nimport { useCpqiChecklist } from \"./useCpqiChecklist\";\r\nimport { useTrainingByTopic } from \"./useTrainingByTopic\";\r\nimport { useTrainingOverall } from \"./useTrainingOverall\";\r\nimport { useKpiStats } from \"./useKpiStats\";\r\nimport { useParchmentDistribution } from \"./useParchmentDistribution\";\r\n\r\nexport function useWetmillDashboardData(wetmillId) {\r\n    const managerNeeds = useManagerNeeds(wetmillId);\r\n    const missingDocuments = useMissingDocuments(wetmillId);\r\n    const infrastructure = useInfrastructureChecklist(wetmillId);\r\n    const financials = useFinancialBreakdown(wetmillId);\r\n    const employeeStats = useEmployeeStats(wetmillId);\r\n    const cpqiStats = useCpqiStats(wetmillId);\r\n    const cpqiChecklist = useCpqiChecklist(wetmillId);\r\n    const trainingByTopic = useTrainingByTopic(wetmillId);\r\n    const trainingOverall = useTrainingOverall(wetmillId);\r\n    const kpiStats = useKpiStats(wetmillId);\r\n    const parchmentDist = useParchmentDistribution(wetmillId);\r\n\r\n    return {\r\n        managerNeeds,\r\n        missingDocuments,\r\n        infrastructure,\r\n        financials,\r\n        employeeStats,\r\n        cpqiStats,\r\n        cpqiChecklist,\r\n        trainingByTopic,\r\n        trainingOverall,\r\n        kpiStats,\r\n        parchmentDist\r\n    };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_MANAGER_NEEDS_RANKING } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useManagerNeeds(wetmillId) {\r\n  const { data, loading, error } = useQuery(GET_MANAGER_NEEDS_RANKING, {\r\n    variables: { wetmillId },\r\n    skip: !wetmillId,\r\n  });\r\n  const raw = data?.getOperationsRanking || []; \r\n  const chartData = {\r\n    labels: raw.map((r) => r.issue),\r\n    datasets: [\r\n      {\r\n        label: \"Rank\",\r\n        data: raw.map((r) => r.rank),\r\n        backgroundColor: \"#1b2a4e\",\r\n        borderRadius: 6,\r\n      },\r\n    ],\r\n  };\r\n  return { chartData, loading, error, raw };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_MISSING_DOCUMENTS } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useMissingDocuments(wetmillId) {\r\n  const { data, loading, error } = useQuery(GET_MISSING_DOCUMENTS, {\r\n    variables: { wetmillId },\r\n    skip: !wetmillId,\r\n  });\r\n  const items = data?.getMissingDocuments || [];\r\n  return { items, loading, error };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_INFRASTRUCTURE_CHECKLIST } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useInfrastructureChecklist(wetmillId) {\r\n  const { data, loading, error } = useQuery(GET_INFRASTRUCTURE_CHECKLIST, {\r\n    variables: { wetmillId },\r\n    skip: !wetmillId,\r\n  });\r\n  const result = data?.getInfrastructureChecklist || {\r\n    items: [],\r\n    goodItems: [],\r\n    repairItems: [],\r\n  };\r\n  return { ...result, loading, error };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_FINANCIAL_BREAKDOWN } from \"../../../graphql/queries/wt_dashboardRequests\";\r\nimport { centerTextPlugin } from \"../utils/chartUtils\";\r\n\r\nexport function useFinancialBreakdown(wetmillId) {\r\n  const { data, loading, error } = useQuery(\r\n    GET_FINANCIAL_BREAKDOWN,\r\n    {\r\n      variables: { wetmillId },\r\n      skip: !wetmillId,\r\n    }\r\n  );\r\n\r\n  // default values until the query returns\r\n  const fb = data?.getFinancialBreakdown || {\r\n    totalProfit: 0,\r\n    reserves: 0,\r\n    socialActivities: 0,\r\n    secondPaymentToFarmers: 0,\r\n  };\r\n\r\n  // build the doughnut slices (percentages or actual numbers)\r\n  const chartData = {\r\n    labels: [\r\n      \"Second payment to farmers\",\r\n      \"Social activities\",\r\n      \"Reserves\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          fb.secondPaymentToFarmers,\r\n          fb.socialActivities,\r\n          fb.reserves,\r\n        ],\r\n        backgroundColor: [\"#087c8f\", \"#005f6b\", \"#1b2a4e\"],\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // options now include a `centerText` block, so the plugin above will read it\r\n  const chartOptions = {\r\n    cutout: \"70%\",\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    plugins: {\r\n      legend: { position: \"top\", labels: { boxWidth: 12, padding: 8 } },\r\n      tooltip: { padding: 10 },\r\n      centerText: {\r\n        text: `FBI ${fb.totalProfit.toLocaleString()}`, // <- updated every hook call\r\n        font: \"bold 18px Arial\",\r\n        color: \"#000\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return {\r\n    chartData,\r\n    chartOptions,\r\n    plugins: [centerTextPlugin], // only this plugin needed here\r\n    loading,\r\n    error,\r\n  };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_EMPLOYEE_STATS } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useEmployeeStats(wetmillId) {\r\n    const { data, loading, error } = useQuery(\r\n        GET_EMPLOYEE_STATS,\r\n        {\r\n            variables: { wetmillId },\r\n            skip: !wetmillId,\r\n        }\r\n    );\r\n\r\n    // default 0s\r\n    const es = data?.getEmployeeStats || {\r\n        menOwnership: 0, womenOwnership: 0,\r\n        menFarmers: 0, womenFarmers: 0,\r\n        menPermanent: 0, womenPermanent: 0,\r\n        menTemporary: 0, womenTemporary: 0,\r\n        menDaily: 0, womenDaily: 0,\r\n    };\r\n\r\n    // shape into Chart.js bar data\r\n    const labels = [\r\n        \"Ownership\",\r\n        \"Farmer Members\",\r\n        \"Permanent Employees\",\r\n        \"Temporary Employees\",\r\n        \"Daily Workers\",\r\n    ];\r\n    const chartData = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: \"Men\",\r\n                data: [\r\n                    es.menOwnership,\r\n                    es.menFarmers,\r\n                    es.menPermanent,\r\n                    es.menTemporary,\r\n                    es.menDaily,\r\n                ],\r\n                backgroundColor: \"#1b2a4e\",\r\n                borderRadius: 4,\r\n            },\r\n            {\r\n                label: \"Women\",\r\n                data: [\r\n                    es.womenOwnership,\r\n                    es.womenFarmers,\r\n                    es.womenPermanent,\r\n                    es.womenTemporary,\r\n                    es.womenDaily,\r\n                ],\r\n                backgroundColor: \"#005f6b\",\r\n                borderRadius: 4,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        plugins: {\r\n            legend: { position: \"top\", labels: { boxWidth: 12, usePointStyle: true } },\r\n            tooltip: { mode: \"index\", intersect: false, padding: 10 },\r\n        },\r\n        scales: {\r\n            x: { grid: { display: true }, display: false },\r\n            y: {\r\n                beginAtZero: true,\r\n                ticks: { stepSize: 1, precision: 0 },\r\n                grid: { borderDash: [5, 5] },\r\n            },\r\n        },\r\n    };\r\n\r\n    return { chartData, chartOptions, loading, error };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_CPQI_STATS } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useCpqiStats(wetmillId) {\r\n    const { data, loading, error } = useQuery(\r\n        GET_CPQI_STATS,\r\n        { variables: { wetmillId }, skip: !wetmillId }\r\n    );\r\n\r\n    const s = data?.getCpqiStats || {\r\n        sections: [], overallYesPct: 0, overallNoPct: 0,\r\n    };\r\n\r\n    // stacked-bar data\r\n    const labels = s.sections.map(x => x.sectionName);\r\n    const chartData = {\r\n        labels,\r\n        datasets: [\r\n            { label: \"Yes %\", data: s.sections.map(x => x.yesPct), backgroundColor: \"#087c8f\" },\r\n            { label: \"No %\", data: s.sections.map(x => x.noPct), backgroundColor: \"#cccccc\" },\r\n        ],\r\n    };\r\n    const chartOptions = {\r\n        responsive: true, maintainAspectRatio: true,\r\n        scales: {\r\n            x: { stacked: true, grid: { display: false } },\r\n            y: {\r\n                stacked: true, beginAtZero: true, max: 100,\r\n                ticks: { callback: v => v + \"%\" }\r\n            }\r\n        },\r\n        plugins: {\r\n            legend: { position: \"top\" },\r\n            tooltip: { callbacks: { label: ctx => ctx.raw.toFixed(1) + \"%\" } }\r\n        }\r\n    };\r\n\r\n    // overall doughnut\r\n    const pieData = {\r\n        labels: [\"Yes %\", \"No %\"],\r\n        datasets: [{\r\n            data: [s.overallYesPct, s.overallNoPct],\r\n            backgroundColor: [\"#087c8f\", \"#cccccc\"]\r\n        }]\r\n    };\r\n    const pieOptions = {\r\n        cutout: \"60%\",\r\n        responsive: true, maintainAspectRatio: true,\r\n        plugins: {\r\n            legend: { position: \"top\" },\r\n            tooltip: { callbacks: { label: ctx => ctx.raw.toFixed(1) + \"%\" } }\r\n        }\r\n    };\r\n\r\n    return { bar: { chartData, chartOptions }, pie: { pieData, pieOptions }, loading, error };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_CPQI_CHECKLIST } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useCpqiChecklist(wetmillId) {\r\n  const { data, loading, error } = useQuery(\r\n    GET_CPQI_CHECKLIST,\r\n    { variables:{ wetmillId }, skip:!wetmillId }\r\n  );\r\n  return {\r\n    sections: data?.getCpqiChecklist || [],\r\n    loading, error\r\n  };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_TRAINING_BY_TOPIC } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useTrainingByTopic(wetmillId) {\r\n  const { data, loading, error } = useQuery(GET_TRAINING_BY_TOPIC, {\r\n    variables: { wetmillId },\r\n    skip: !wetmillId,\r\n  });\r\n\r\n  // raw array of { topic, male, female }\r\n  const raw = data?.getTrainingAttendanceByTopic || [];\r\n\r\n  // build chart.js data here once\r\n  const chartData = {\r\n    labels: raw.map((t) => t.topic),\r\n    datasets: [\r\n      {\r\n        label: \"Male\",\r\n        data: raw.map((t) => t.male),\r\n        backgroundColor: \"#087c8f\",\r\n      },\r\n      {\r\n        label: \"Female\",\r\n        data: raw.map((t) => t.female),\r\n        backgroundColor: \"#1b2a4e\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  console.log(chartData);\r\n\r\n  return { raw, loading, error, chartData };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_TRAINING_OVERALL } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useTrainingOverall(wetmillId) {\r\n  const { data, loading, error } = useQuery(GET_TRAINING_OVERALL, {\r\n    variables: { wetmillId },\r\n    skip: !wetmillId,\r\n  });\r\n\r\n  const male = data?.getTrainingAttendanceOverall?.male || 0;\r\n  const female = data?.getTrainingAttendanceOverall?.female || 0;\r\n\r\n  const chartData = {\r\n    labels: [\"Male\", \"Female\"],\r\n    datasets: [\r\n      {\r\n        data: [male, female],\r\n        backgroundColor: [\"#087c8f\", \"#1b2a4e\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return { loading, error, chartData };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_KPI_STATS } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useKpiStats(wetmillId) {\r\n    const { data, loading, error } = useQuery(GET_KPI_STATS, {\r\n        variables: { wetmillId },\r\n        skip: !wetmillId,\r\n    });\r\n\r\n    const stats = data?.getKpiStats || { cherry: 0, total: 0 };\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        price: stats.cherry,\r\n        totalSales: stats.total,\r\n    };\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_PARCHMENT_DISTRIBUTION } from \"../../../graphql/queries/wt_dashboardRequests\";\r\n\r\nexport function useParchmentDistribution(wetmillId) {\r\n    const { data, loading, error } = useQuery(\r\n        GET_PARCHMENT_DISTRIBUTION,\r\n        { variables: { wetmillId }, skip: !wetmillId }\r\n    );\r\n\r\n    const dist = data?.getParchmentDistribution || [];\r\n    const chartData = {\r\n        labels: dist.map(d => d.grade),\r\n        datasets: [{\r\n            data: dist.map(d => d.value),\r\n            backgroundColor: [\"#1b2a4e\", \"#087c8f\", \"#005f6b\", \"#cccccc\", \"#eeeeee\"],\r\n            borderWidth: 3,\r\n            hoverOffset: 15,\r\n            cutout: \"65%\",\r\n        }],\r\n    };\r\n\r\n    return { chartData, loading, error };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Box,\r\n    CircularProgress,\r\n} from \"@mui/material\";\r\nimport { CheckCircle, Cancel } from \"@mui/icons-material\";\r\n\r\nexport default function SectionedChecklistCard({\r\n    title,\r\n    sections = [],\r\n    loading,\r\n    error,\r\n    emptyMessage = \"Nothing to show\",\r\n}) {\r\n    return (\r\n        <Card className=\"chart-card full-width\">\r\n            <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>{title}</Typography>\r\n\r\n                {loading ? (\r\n                    <Box\r\n                        sx={{\r\n                            height: 120,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <CircularProgress />\r\n                    </Box>\r\n                ) : error ? (\r\n                    <Typography color=\"error\">{error.message}</Typography>\r\n                ) : sections.length === 0 ? (\r\n                    <Typography>{emptyMessage}</Typography>\r\n                ) : (\r\n                    sections.map((sec) => (\r\n                        <Box key={sec.sectionName} sx={{ mb: 2 }}>\r\n                            <Typography\r\n                                variant=\"subtitle2\"\r\n                                sx={{ fontWeight: 600, mb: 1 }}\r\n                            >\r\n                                {sec.sectionName}\r\n                            </Typography>\r\n                            <Box component=\"ul\" className=\"checklist\">\r\n                                {sec.criteria.map((c) => (\r\n                                    <li key={c.questionName} className=\"checklist-line\">\r\n                                        {c.yes\r\n                                            ? <CheckCircle color=\"success\" fontSize=\"small\" />\r\n                                            : <Cancel color=\"error\" fontSize=\"small\" />}\r\n                                        <Typography component=\"span\" sx={{ ml: 1 }}>\r\n                                            {c.questionName.replace(/_/g, \" \")}\r\n                                        </Typography>\r\n                                    </li>\r\n                                ))}\r\n                            </Box>\r\n                        </Box>\r\n                    ))\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","// src/features/dashboard/DashboardFeature.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport {\n  Box,\n  Tabs,\n  Tab,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  useTheme,\n  useMediaQuery,\n} from \"@mui/material\";\nimport ChartJS from \"chart.js/auto\";\nimport annotationPlugin from \"chartjs-plugin-annotation\";\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\n\nimport InfoCard from \"./components/infoCard\";\nimport ChartCard from \"../../components/Charts/ChartCard\";\nimport ChecklistCard from \"../../components/Charts/ChecklistCard\";\nimport InfraChecklistCard from \"./components/InfraChecklistCard\";\n\nimport { useWetmillDashboardData } from \"./hooks/useWetmillDashboardData\";\n\nimport \"./new.css\";\nimport { Cancel, CheckCircle } from \"@mui/icons-material\";\nimport SectionedChecklistCard from \"../../components/Charts/SectionedChecklistCard\";\n\nChartJS.register(annotationPlugin);\n\nfunction TabPanel({ children, value, index }) {\n  return (\n    <div role=\"tabpanel\" hidden={value !== index}>\n      {value === index && <Box sx={{ pt: 2 }}>{children}</Box>}\n    </div>\n  );\n}\n\nexport default function DashboardFeature() {\n  // --- wetmill selection with persistence ---\n  const { wetmills } = useOutletContext();\n  const [wetmill, setWetmill] = useState(\n    () => window.localStorage.getItem(\"selectedWetmill\") || \"\"\n  );\n  useEffect(() => {\n    if (!wetmill && wetmills.length) {\n      const saved = window.localStorage.getItem(\"selectedWetmill\");\n      if (saved && wetmills.some((w) => w.id === saved)) {\n        setWetmill(saved);\n      } else {\n        setWetmill(wetmills[0].id);\n      }\n    }\n  }, [wetmills, wetmill]);\n  useEffect(() => {\n    if (wetmill) window.localStorage.setItem(\"selectedWetmill\", wetmill);\n  }, [wetmill]);\n\n  // --- layout state ---\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [tab, setTab] = useState(0);\n  const handleTab = (_, v) => setTab(v);\n\n  // --- current wetmill info ---\n  const currentMill = wetmills.find((w) => w.id === wetmill) || {};\n  const registrationInfo = {\n    \"Wetmill ID\": currentMill.wet_mill_unique_id || wetmill,\n    Name: currentMill.name || \"N/A\",\n    \"Registered On\": currentMill.registration_date || \"N/A\",\n    Ownership: currentMill.mill_status || \"N/A\",\n    \"Exporting Status\": currentMill.exporting_status || \"N/A\",\n  };\n\n  // --- pull all dashboard slices via hooks ---\n  const {\n    managerNeeds,       // { chartData, loading, error }\n    missingDocuments,   // { items, loading, error }\n    infrastructure,     // { items, goodItems, repairItems, loading, error }\n    financials,         // { totalProfit, reserves, socialActivities, secondPaymentToFarmers }\n    employeeStats,\n    cpqiStats,\n    cpqiChecklist,\n    trainingByTopic,\n    trainingOverall,\n    kpiStats,\n    parchmentDist,\n  } = useWetmillDashboardData(wetmill);\n\n  const raw = managerNeeds.raw || [];\n\n  // Order: [2nd place, 1st place, 3rd place]\n  const podiumOrder = [2, 1, 3];\n  const podiumItems = podiumOrder.map((rnk) =>\n    raw.find((r) => r.rank === rnk) || {}\n  );\n\n  const podiumLabels = podiumItems.map((i) => i.issue || \"\");\n  const podiumRanks = podiumOrder; // [2,1,3]\n\n  // Heights: 1st place = 3 units tall; 2nd & 3rd = 1 unit\n  const podiumHeights = podiumOrder.map((rnk) => (rnk === 1 ? 2 : 1));\n\n  const podiumData = {\n    labels: podiumLabels,\n    datasets: [\n      {\n        data: podiumHeights,\n        backgroundColor: [\"#C0C0C0\", \"#1b2a4e\", \"#C0C0C0\"],\n        borderRadius: { topLeft: 12, topRight: 12 },\n        barThickness: 60,\n      },\n    ],\n  };\n\n  const podiumOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    plugins: {\n      legend: { display: false },\n      tooltip: {\n        callbacks: {\n          // show the issue as title\n          title: (ctx) => podiumLabels[ctx[0].dataIndex],\n          // show the actual rank number as the label\n          label: (ctx) => `Rank: ${podiumRanks[ctx.dataIndex]}`,\n        },\n      },\n    },\n    scales: {\n      x: { display: false },\n      y: { display: false },\n    },\n  };\n\n  // --- dummy data for charts we haven't wired yet ---\n\n  const processingWater = {\n    labels: [\"Meter\", \"Record Book\", \"Reduction Effort\"],\n    datasets: [\n      {\n        label: \"Compliant\",\n        data: [1, 0, 1],\n        backgroundColor: [\"#1b2a4e\", \"#e67e22\", \"#2980b9\"],\n        borderRadius: 6,\n      },\n    ],\n  };\n\n  const cherryWeekly = {\n    labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\n    datasets: [\n      {\n        label: \"Cherry $/kg\",\n        data: [0.25, 0.28, 0.3, 0.32],\n        borderColor: \"#087c8f\",\n        backgroundColor: (ctx) => {\n          const c = ctx.chart.ctx;\n          const grad = c.createLinearGradient(0, 0, 0, 200);\n          grad.addColorStop(0, \"rgba(8,124,143,0.5)\");\n          grad.addColorStop(1, \"rgba(8,124,143,0.1)\");\n          return grad;\n        },\n        fill: \"start\",\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const cherryMonthly = {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n    datasets: [\n      {\n        label: \"Cherry $/kg\",\n        data: [0.25, 0.27, 0.3, 0.28, 0.31, 0.33],\n        borderColor: \"#005f6b\",\n        backgroundColor: (ctx) => {\n          const c = ctx.chart.ctx;\n          const grad = c.createLinearGradient(0, 0, 0, 200);\n          grad.addColorStop(0, \"rgba(0,95,107,0.5)\");\n          grad.addColorStop(1, \"rgba(0,95,107,0.1)\");\n          return grad;\n        },\n        fill: \"start\",\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const wastewaterDistance = {\n    labels: [\"Lagoon\"],\n    datasets: [\n      {\n        label: \"Distance (m)\",\n        data: [120],\n        backgroundColor: (ctx) =>\n          ctx.parsed.y >= 50 ? \"#1b2a4e\" : \"#e74c3c\",\n        borderRadius: 4,\n        maxBarThickness: 40,\n      },\n    ],\n  };\n  const recommendedDistance = 50;\n\n  const commonOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    plugins: {\n      legend: { position: \"top\", labels: { boxWidth: 12, usePointStyle: true } },\n      tooltip: { mode: \"index\", intersect: false, padding: 10 },\n    },\n    scales: {\n      x: { grid: { display: false } },\n      y: { grid: { borderDash: [5, 5] }, beginAtZero: true },\n    },\n  };\n\n  const pieOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    layout: { padding: { top: 0, bottom: 0, left: 0, right: 0 } },\n    plugins: {\n      legend: { position: \"top\", labels: { boxWidth: 12, usePointStyle: true, padding: 10 } },\n      tooltip: { mode: \"nearest\", intersect: false, padding: 10 },\n    },\n  };\n\n  return (\n    <Box className=\"dashboard-container\">\n      {/* Header */}\n      <Box\n        className=\"dashboard-header\"\n        sx={{ flexDirection: isMobile ? \"column\" : \"row\" }}\n      >\n        <Typography variant=\"h5\" className=\"dashboard-title\">\n          Wetmill Dashboard\n        </Typography>\n        <FormControl size=\"small\">\n          <InputLabel>Wetmill</InputLabel>\n          <Select\n            value={wetmill}\n            label=\"Wetmill\"\n            onChange={(e) => setWetmill(e.target.value)}\n          >\n            {wetmills.map((w) => (\n              <MenuItem key={w.id} value={w.id}>\n                {w.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n\n      {/* Tabs */}\n      <Tabs\n        value={tab}\n        onChange={handleTab}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant={isMobile ? \"scrollable\" : \"standard\"}\n        allowScrollButtonsMobile\n      >\n        {[\"Profile\", \"Processing\", \"Attendance\", \"KPIs\", \"Wastewater\"].map(\n          (label) => (\n            <Tab key={label} label={label} />\n          )\n        )}\n      </Tabs>\n\n      {/* Profile Tab */}\n      <TabPanel value={tab} index={0}>\n        <Box className=\"charts-grid\">\n          <InfoCard title=\"Registration Info\" data={registrationInfo} />\n\n          <ChartCard\n            title=\"Manager Needs Ranking\"\n            loading={managerNeeds.loading}\n            error={managerNeeds.error}\n            height={300}  // give it some vertical room\n          >\n            <Bar data={podiumData} options={podiumOptions} />\n          </ChartCard>\n\n          <ChecklistCard\n            title=\"Missing Documents\"\n            items={missingDocuments.items}\n            loading={missingDocuments.loading}\n            error={missingDocuments.error}\n            emptyMessage=\"No documents missing :)\"\n          />\n\n          {/* Profit Usage */}\n          <ChartCard\n            title=\"Profit Usage\"\n            loading={financials.loading}\n            error={financials.error}\n            height={250}\n          >\n            <Doughnut\n              data={financials.chartData}\n              options={financials.chartOptions}\n              plugins={financials.plugins}\n            />\n          </ChartCard>\n\n          {/* Dummy Employees */}\n          <ChartCard\n            title=\"Employees\"\n            loading={employeeStats.loading}\n            error={employeeStats.error}\n            height={900}\n          >\n            <Bar\n              data={employeeStats.chartData}\n              options={employeeStats.chartOptions}\n            />\n          </ChartCard>\n\n          <InfraChecklistCard\n            title=\"Infrastructure Checklist\"\n            list={infrastructure.items.map((name) => ({\n              name,\n              ok: infrastructure.goodItems.includes(name),\n              repair: infrastructure.repairItems.includes(name),\n            }))}\n            loading={infrastructure.loading}\n            error={infrastructure.error}\n          />\n        </Box>\n      </TabPanel>\n\n      {/* Processing Tab */}\n      <TabPanel value={tab} index={1}>\n        <Box className=\"charts-grid\">\n          <ChartCard title=\"Water & Energy Compliance\">\n            <Bar\n              data={processingWater}\n              options={{\n                ...commonOptions,\n                scales: { x: { stacked: true }, y: { stacked: true } },\n              }}\n            />\n          </ChartCard>\n\n          {/* Overall doughnut */}\n          <ChartCard\n            title=\"CPQI Overall Compliance\"\n            loading={cpqiStats.statsLoading}\n            error={cpqiStats.statsError}\n            height={200}\n          >\n            <Doughnut\n              data={cpqiStats.pie.pieData}\n              options={cpqiStats.pie.pieOptions}\n            />\n          </ChartCard>\n\n          {/* Stacked bar by section */}\n          <ChartCard\n            title=\"CPQI by Criteria\"\n            loading={cpqiStats.statsLoading}\n            error={cpqiStats.statsError}\n            height={300}\n          >\n            <Bar\n              data={cpqiStats.bar.chartData}\n              options={cpqiStats.bar.chartOptions}\n            />\n          </ChartCard>\n\n          {/* CPQI Detailed Checklist */}\n          <SectionedChecklistCard\n            title=\"CPQI Detailed Checklist\"\n            sections={cpqiChecklist.sections}\n            loading={cpqiChecklist.loading}\n            error={cpqiChecklist.error}\n            emptyMessage=\"No CPQI data available\"\n          />\n\n        </Box>\n      </TabPanel>\n\n      {/* Attendance Tab */}\n      <TabPanel value={tab} index={2}>\n        <Box className=\"charts-grid\">\n          <ChartCard\n            title=\"Training Attendance by Topic\"\n            loading={trainingByTopic.loading}\n            error={trainingByTopic.error}\n          >\n            <Bar\n              data={trainingByTopic.chartData}\n              options={{\n                ...commonOptions,\n                scales: {\n                  x: {\n                    grid: { display: false },\n                    ticks: {\n                      maxRotation: 45,\n                      minRotation: 45,\n                      callback: (_, index) => {\n                        const label = trainingByTopic.chartData.labels[index] || \"\";\n                        return label.length > 15\n                          ? label.slice(0, 15) + \"…\"\n                          : label;\n                      },\n                    },\n                  },\n                  y: commonOptions.scales.y,\n                },\n              }}\n            />\n          </ChartCard>\n\n          <ChartCard\n            title=\"Overall Unique Attendees\"\n            loading={trainingOverall.loading}\n            error={trainingOverall.error}\n            height={200}\n          >\n            <Doughnut\n              data={trainingOverall.chartData}\n              options={{\n                ...pieOptions,\n                aspectRatio: 1,              // perfectly square\n                layout: { padding: 20 },\n              }}\n            />\n          </ChartCard>\n        </Box>\n      </TabPanel>\n\n      {/* KPIs Tab */}\n      <TabPanel value={tab} index={3}>\n        <Box className=\"charts-grid\">\n          <InfoCard\n            title=\"End-of-Season Cherry Price\"\n            data={{ Price: `$${kpiStats.price.toFixed(2)}` }}\n            loading={kpiStats.loading}\n            error={kpiStats.error}\n          />\n\n          <InfoCard\n            title=\"Total Sales (USD)\"\n            data={{ Sales: `$${kpiStats.totalSales.toLocaleString()}` }}\n            loading={kpiStats.loading}\n            error={kpiStats.error}\n          />\n\n          {/* <ChartCard title=\"Cherry Price Weekly\">\n            <Line data={cherryWeekly} options={commonOptions} />\n          </ChartCard>\n\n          <ChartCard title=\"Cherry Price Monthly\">\n            <Line data={cherryMonthly} options={commonOptions} />\n          </ChartCard>*/}\n\n          <ChartCard title=\"Parchment Grades\">\n            <Doughnut data={parchmentDist.chartData} options={pieOptions} />\n          </ChartCard> \n\n          <ChartCard\n            title=\"Parchment Distribution\"\n            loading={parchmentDist.loading}\n            error={parchmentDist.error}\n          >\n            <Doughnut data={parchmentDist.chartData} options={pieOptions} />\n          </ChartCard>\n        </Box>\n      </TabPanel>\n\n      {/* Wastewater Tab */}\n      <TabPanel value={tab} index={4}>\n        <Box className=\"charts-grid\">\n          <InfoCard\n            title=\"Wastewater Management Method\"\n            data={{ Method: currentMill.waste_water_management_method || \"Lagoon\" }}\n          />\n\n          <ChartCard title=\"Distance to Waterbody\">\n            <Bar\n              data={wastewaterDistance}\n              options={{\n                ...commonOptions,\n                scales: {\n                  x: commonOptions.scales.x,\n                  y: {\n                    ...commonOptions.scales.y,\n                    suggestedMax: recommendedDistance * 1.2,\n                  },\n                },\n                plugins: {\n                  ...commonOptions.plugins,\n                  annotation: {\n                    annotations: {\n                      minLine: {\n                        type: \"line\",\n                        scaleID: \"y\",\n                        value: recommendedDistance,\n                        borderColor: \"#e74c3c\",\n                        borderWidth: 2,\n                        borderDash: [6, 6],\n                        label: {\n                          enabled: true,\n                          content: `Min ${recommendedDistance} m`,\n                          position: \"end\",\n                          backgroundColor: \"rgba(231,76,60,0.8)\",\n                          color: \"#fff\",\n                          font: { weight: \"bold\" },\n                        },\n                      },\n                    },\n                  },\n                },\n              }}\n            />\n          </ChartCard>\n        </Box>\n      </TabPanel>\n    </Box>\n  );\n}\n"],"names":["InfoCard","_ref","title","data","_jsx","Card","className","children","_jsxs","CardContent","Typography","variant","gutterBottom","Box","Object","entries","map","_ref2","label","value","color","ChartCard","loading","error","height","sx","display","alignItems","justifyContent","CircularProgress","message","ChecklistCard","items","emptyMessage","length","component","WarningAmber","noWrap","ml","flex","InfraChecklistCard","list","i","ok","CheckCircle","Cancel","name","repair","Construction","fontSize","GET_MANAGER_NEEDS_RANKING","gql","GET_MISSING_DOCUMENTS","GET_INFRASTRUCTURE_CHECKLIST","GET_FINANCIAL_BREAKDOWN","GET_EMPLOYEE_STATS","GET_CPQI_STATS","GET_CPQI_CHECKLIST","GET_TRAINING_BY_TOPIC","GET_TRAINING_OVERALL","GET_KPI_STATS","GET_PARCHMENT_DISTRIBUTION","centerTextPlugin","id","afterDraw","chart","opts","config","options","plugins","centerText","text","ctx","chartArea","width","top","save","font","fillStyle","textAlign","fillText","restore","useWetmillDashboardData","wetmillId","managerNeeds","useQuery","variables","skip","raw","getOperationsRanking","chartData","labels","r","issue","datasets","rank","backgroundColor","borderRadius","useManagerNeeds","missingDocuments","getMissingDocuments","useMissingDocuments","infrastructure","getInfrastructureChecklist","goodItems","repairItems","useInfrastructureChecklist","financials","fb","getFinancialBreakdown","totalProfit","reserves","socialActivities","secondPaymentToFarmers","borderWidth","chartOptions","cutout","responsive","maintainAspectRatio","legend","position","boxWidth","padding","tooltip","toLocaleString","useFinancialBreakdown","employeeStats","es","getEmployeeStats","menOwnership","womenOwnership","menFarmers","womenFarmers","menPermanent","womenPermanent","menTemporary","womenTemporary","menDaily","womenDaily","usePointStyle","mode","intersect","scales","x","grid","y","beginAtZero","ticks","stepSize","precision","borderDash","useEmployeeStats","cpqiStats","s","getCpqiStats","sections","overallYesPct","overallNoPct","bar","sectionName","yesPct","noPct","stacked","max","callback","v","callbacks","toFixed","pie","pieData","pieOptions","useCpqiStats","cpqiChecklist","getCpqiChecklist","useCpqiChecklist","trainingByTopic","getTrainingAttendanceByTopic","t","topic","male","female","console","log","useTrainingByTopic","trainingOverall","_data$getTrainingAtte","_data$getTrainingAtte2","getTrainingAttendanceOverall","useTrainingOverall","kpiStats","stats","getKpiStats","cherry","total","price","totalSales","useKpiStats","parchmentDist","dist","getParchmentDistribution","d","grade","hoverOffset","useParchmentDistribution","SectionedChecklistCard","sec","mb","fontWeight","criteria","c","yes","questionName","replace","TabPanel","index","role","hidden","pt","DashboardFeature","wetmills","useOutletContext","wetmill","setWetmill","useState","window","localStorage","getItem","useEffect","saved","some","w","setItem","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","tab","setTab","currentMill","find","registrationInfo","wet_mill_unique_id","Name","registration_date","Ownership","mill_status","exporting_status","podiumOrder","podiumLabels","rnk","podiumRanks","podiumHeights","podiumData","topLeft","topRight","barThickness","podiumOptions","dataIndex","commonOptions","layout","bottom","left","right","flexDirection","FormControl","size","InputLabel","Select","onChange","e","target","MenuItem","Tabs","handleTab","_","indicatorColor","textColor","allowScrollButtonsMobile","Tab","Bar","Doughnut","includes","statsLoading","statsError","maxRotation","minRotation","slice","aspectRatio","Price","Sales","Method","waste_water_management_method","parsed","maxBarThickness","suggestedMax","recommendedDistance","annotation","annotations","minLine","type","scaleID","borderColor","enabled","content","weight","ChartJS","register","annotationPlugin"],"sourceRoot":""}